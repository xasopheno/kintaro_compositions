<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="966" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="949.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="949.00"> </text><svg id="frames" x="10" width="1180" total_samples="31355"><g><title>meg`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="0.0191%" y="741" width="0.0159%" height="15" fill="rgb(227,0,7)" fg:x="6" fg:w="5"/><text x="0.2691%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="0.0606%" y="693" width="0.0128%" height="15" fill="rgb(217,0,24)" fg:x="19" fg:w="4"/><text x="0.3106%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.01%)</title><rect x="0.0606%" y="677" width="0.0128%" height="15" fill="rgb(221,193,54)" fg:x="19" fg:w="4"/><text x="0.3106%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.01%)</title><rect x="0.0606%" y="661" width="0.0128%" height="15" fill="rgb(248,212,6)" fg:x="19" fg:w="4"/><text x="0.3106%" y="671.50"></text></g><g><title>meg`&lt;weresocool_ast::term::Term as core::clone::Clone&gt;::clone (10 samples, 0.03%)</title><rect x="0.0446%" y="741" width="0.0319%" height="15" fill="rgb(208,68,35)" fg:x="14" fg:w="10"/><text x="0.2946%" y="751.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.03%)</title><rect x="0.0446%" y="725" width="0.0319%" height="15" fill="rgb(232,128,0)" fg:x="14" fg:w="10"/><text x="0.2946%" y="735.50"></text></g><g><title>meg`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.02%)</title><rect x="0.0542%" y="709" width="0.0223%" height="15" fill="rgb(207,160,47)" fg:x="17" fg:w="7"/><text x="0.3042%" y="719.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.03%)</title><rect x="0.0829%" y="725" width="0.0255%" height="15" fill="rgb(228,23,34)" fg:x="26" fg:w="8"/><text x="0.3329%" y="735.50"></text></g><g><title>meg`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.03%)</title><rect x="0.0829%" y="709" width="0.0255%" height="15" fill="rgb(218,30,26)" fg:x="26" fg:w="8"/><text x="0.3329%" y="719.50"></text></g><g><title>meg`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="0.1339%" y="693" width="0.0191%" height="15" fill="rgb(220,122,19)" fg:x="42" fg:w="6"/><text x="0.3839%" y="703.50"></text></g><g><title>meg`&lt;num_rational::Ratio&lt;T&gt; as core::ops::arith::Mul&gt;::mul (8 samples, 0.03%)</title><rect x="0.1531%" y="693" width="0.0255%" height="15" fill="rgb(250,228,42)" fg:x="48" fg:w="8"/><text x="0.4031%" y="703.50"></text></g><g><title>meg`weresocool_ast::nameset::NameSet::to_vec (9 samples, 0.03%)</title><rect x="0.1818%" y="693" width="0.0287%" height="15" fill="rgb(240,193,28)" fg:x="57" fg:w="9"/><text x="0.4318%" y="703.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.02%)</title><rect x="0.1945%" y="677" width="0.0159%" height="15" fill="rgb(216,20,37)" fg:x="61" fg:w="5"/><text x="0.4445%" y="687.50"></text></g><g><title>meg`&lt;num_rational::Ratio&lt;T&gt; as core::ops::arith::Mul&gt;::mul (4 samples, 0.01%)</title><rect x="0.2169%" y="677" width="0.0128%" height="15" fill="rgb(206,188,39)" fg:x="68" fg:w="4"/><text x="0.4669%" y="687.50"></text></g><g><title>meg`weresocool_instrument::renderable::calculate_fgpl (8 samples, 0.03%)</title><rect x="0.2169%" y="693" width="0.0255%" height="15" fill="rgb(217,207,13)" fg:x="68" fg:w="8"/><text x="0.4669%" y="703.50"></text></g><g><title>meg`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (45 samples, 0.14%)</title><rect x="0.1084%" y="725" width="0.1435%" height="15" fill="rgb(231,73,38)" fg:x="34" fg:w="45"/><text x="0.3584%" y="735.50"></text></g><g><title>meg`weresocool_instrument::renderable::pointop_to_renderop (38 samples, 0.12%)</title><rect x="0.1308%" y="709" width="0.1212%" height="15" fill="rgb(225,20,46)" fg:x="41" fg:w="38"/><text x="0.3808%" y="719.50"></text></g><g><title>meg`&lt;num_rational::Ratio&lt;T&gt; as core::ops::arith::Mul&gt;::mul (9 samples, 0.03%)</title><rect x="0.2679%" y="677" width="0.0287%" height="15" fill="rgb(210,31,41)" fg:x="84" fg:w="9"/><text x="0.5179%" y="687.50"></text></g><g><title>meg`alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (12 samples, 0.04%)</title><rect x="0.3125%" y="661" width="0.0383%" height="15" fill="rgb(221,200,47)" fg:x="98" fg:w="12"/><text x="0.5625%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.02%)</title><rect x="0.3317%" y="645" width="0.0191%" height="15" fill="rgb(226,26,5)" fg:x="104" fg:w="6"/><text x="0.5817%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.02%)</title><rect x="0.3317%" y="629" width="0.0191%" height="15" fill="rgb(249,33,26)" fg:x="104" fg:w="6"/><text x="0.5817%" y="639.50"></text></g><g><title>meg`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (4 samples, 0.01%)</title><rect x="0.3508%" y="645" width="0.0128%" height="15" fill="rgb(235,183,28)" fg:x="110" fg:w="4"/><text x="0.6008%" y="655.50"></text></g><g><title>meg`&lt;&amp;weresocool_ast::operations::PointOp as core::ops::arith::Mul&lt;&amp;weresocool_ast::operations::PointOp&gt;&gt;::mul (40 samples, 0.13%)</title><rect x="0.2583%" y="693" width="0.1276%" height="15" fill="rgb(221,5,38)" fg:x="81" fg:w="40"/><text x="0.5083%" y="703.50"></text></g><g><title>meg`weresocool_ast::operations::union_names (28 samples, 0.09%)</title><rect x="0.2966%" y="677" width="0.0893%" height="15" fill="rgb(247,18,42)" fg:x="93" fg:w="28"/><text x="0.5466%" y="687.50"></text></g><g><title>meg`weresocool_ast::nameset::NameSet::to_vec (11 samples, 0.04%)</title><rect x="0.3508%" y="661" width="0.0351%" height="15" fill="rgb(241,131,45)" fg:x="110" fg:w="11"/><text x="0.6008%" y="671.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.02%)</title><rect x="0.3700%" y="645" width="0.0159%" height="15" fill="rgb(249,31,29)" fg:x="116" fg:w="5"/><text x="0.6200%" y="655.50"></text></g><g><title>meg`weresocool_instrument::renderable::nf_to_vec_renderable (102 samples, 0.33%)</title><rect x="0.0829%" y="741" width="0.3253%" height="15" fill="rgb(225,111,53)" fg:x="26" fg:w="102"/><text x="0.3329%" y="751.50"></text></g><g><title>meg`&lt;weresocool_ast::operations::NormalForm as weresocool_ast::operations::Normalize&lt;weresocool_ast::term::Term&gt;&gt;::apply_to_normal_form (49 samples, 0.16%)</title><rect x="0.2520%" y="725" width="0.1563%" height="15" fill="rgb(238,160,17)" fg:x="79" fg:w="49"/><text x="0.5020%" y="735.50"></text></g><g><title>meg`&lt;weresocool_ast::operations::NormalForm as core::ops::arith::MulAssign&lt;&amp;weresocool_ast::operations::NormalForm&gt;&gt;::mul_assign (49 samples, 0.16%)</title><rect x="0.2520%" y="709" width="0.1563%" height="15" fill="rgb(214,148,48)" fg:x="79" fg:w="49"/><text x="0.5020%" y="719.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="0.4082%" y="725" width="0.0159%" height="15" fill="rgb(232,36,49)" fg:x="128" fg:w="5"/><text x="0.6582%" y="735.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.01%)</title><rect x="0.4242%" y="693" width="0.0128%" height="15" fill="rgb(209,103,24)" fg:x="133" fg:w="4"/><text x="0.6742%" y="703.50"></text></g><g><title>meg`weresocool_core::generation::parsed_to_render::parsed_to_render (140 samples, 0.45%)</title><rect x="0.0159%" y="757" width="0.4465%" height="15" fill="rgb(229,88,8)" fg:x="5" fg:w="140"/><text x="0.2659%" y="767.50"></text></g><g><title>meg`weresocool_instrument::renderable::render_voice::renderables_to_render_voices (17 samples, 0.05%)</title><rect x="0.4082%" y="741" width="0.0542%" height="15" fill="rgb(213,181,19)" fg:x="128" fg:w="17"/><text x="0.6582%" y="751.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.04%)</title><rect x="0.4242%" y="725" width="0.0383%" height="15" fill="rgb(254,191,54)" fg:x="133" fg:w="12"/><text x="0.6742%" y="735.50"></text></g><g><title>meg`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.04%)</title><rect x="0.4242%" y="709" width="0.0383%" height="15" fill="rgb(241,83,37)" fg:x="133" fg:w="12"/><text x="0.6742%" y="719.50"></text></g><g><title>meg`weresocool_instrument::renderable::render_voice::RenderVoice::init (8 samples, 0.03%)</title><rect x="0.4369%" y="693" width="0.0255%" height="15" fill="rgb(233,36,39)" fg:x="137" fg:w="8"/><text x="0.6869%" y="703.50"></text></g><g><title>meg`alloc::slice::_&lt;impl [T]&gt;::to_vec (8 samples, 0.03%)</title><rect x="0.4369%" y="677" width="0.0255%" height="15" fill="rgb(226,3,54)" fg:x="137" fg:w="8"/><text x="0.6869%" y="687.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="0.4401%" y="661" width="0.0223%" height="15" fill="rgb(245,192,40)" fg:x="138" fg:w="7"/><text x="0.6901%" y="671.50"></text></g><g><title>meg`&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="0.4497%" y="645" width="0.0128%" height="15" fill="rgb(238,167,29)" fg:x="141" fg:w="4"/><text x="0.6997%" y="655.50"></text></g><g><title>meg`lalrpop_util::lexer::MatcherBuilder::new (4 samples, 0.01%)</title><rect x="0.4656%" y="741" width="0.0128%" height="15" fill="rgb(232,182,51)" fg:x="146" fg:w="4"/><text x="0.7156%" y="751.50"></text></g><g><title>meg`regex::re_set::unicode::RegexSet::new (4 samples, 0.01%)</title><rect x="0.4656%" y="725" width="0.0128%" height="15" fill="rgb(231,60,39)" fg:x="146" fg:w="4"/><text x="0.7156%" y="735.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.03%)</title><rect x="0.4816%" y="693" width="0.0255%" height="15" fill="rgb(208,69,12)" fg:x="151" fg:w="8"/><text x="0.7316%" y="703.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.03%)</title><rect x="0.4816%" y="677" width="0.0255%" height="15" fill="rgb(235,93,37)" fg:x="151" fg:w="8"/><text x="0.7316%" y="687.50"></text></g><g><title>meg`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.03%)</title><rect x="0.4816%" y="661" width="0.0255%" height="15" fill="rgb(213,116,39)" fg:x="151" fg:w="8"/><text x="0.7316%" y="671.50"></text></g><g><title>meg`&lt;num_rational::Ratio&lt;T&gt; as num_traits::ops::checked::CheckedMul&gt;::checked_mul (4 samples, 0.01%)</title><rect x="0.5167%" y="693" width="0.0128%" height="15" fill="rgb(222,207,29)" fg:x="162" fg:w="4"/><text x="0.7667%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.03%)</title><rect x="0.6155%" y="645" width="0.0255%" height="15" fill="rgb(206,96,30)" fg:x="193" fg:w="8"/><text x="0.8655%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="0.6187%" y="629" width="0.0223%" height="15" fill="rgb(218,138,4)" fg:x="194" fg:w="7"/><text x="0.8687%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="0.6187%" y="613" width="0.0223%" height="15" fill="rgb(250,191,14)" fg:x="194" fg:w="7"/><text x="0.8687%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="0.6474%" y="629" width="0.0128%" height="15" fill="rgb(239,60,40)" fg:x="203" fg:w="4"/><text x="0.8974%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.01%)</title><rect x="0.6474%" y="613" width="0.0128%" height="15" fill="rgb(206,27,48)" fg:x="203" fg:w="4"/><text x="0.8974%" y="623.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (42 samples, 0.13%)</title><rect x="0.5326%" y="677" width="0.1339%" height="15" fill="rgb(225,35,8)" fg:x="167" fg:w="42"/><text x="0.7826%" y="687.50"></text></g><g><title>meg`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (27 samples, 0.09%)</title><rect x="0.5804%" y="661" width="0.0861%" height="15" fill="rgb(250,213,24)" fg:x="182" fg:w="27"/><text x="0.8304%" y="671.50"></text></g><g><title>meg`&lt;alloc::string::String as core::clone::Clone&gt;::clone (6 samples, 0.02%)</title><rect x="0.6474%" y="645" width="0.0191%" height="15" fill="rgb(247,123,22)" fg:x="203" fg:w="6"/><text x="0.8974%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.01%)</title><rect x="0.6825%" y="645" width="0.0128%" height="15" fill="rgb(231,138,38)" fg:x="214" fg:w="4"/><text x="0.9325%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.01%)</title><rect x="0.7112%" y="613" width="0.0128%" height="15" fill="rgb(231,145,46)" fg:x="223" fg:w="4"/><text x="0.9612%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (4 samples, 0.01%)</title><rect x="0.7303%" y="613" width="0.0128%" height="15" fill="rgb(251,118,11)" fg:x="229" fg:w="4"/><text x="0.9803%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (16 samples, 0.05%)</title><rect x="0.6953%" y="645" width="0.0510%" height="15" fill="rgb(217,147,25)" fg:x="218" fg:w="16"/><text x="0.9453%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (15 samples, 0.05%)</title><rect x="0.6985%" y="629" width="0.0478%" height="15" fill="rgb(247,81,37)" fg:x="219" fg:w="15"/><text x="0.9485%" y="639.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.11%)</title><rect x="0.6666%" y="677" width="0.1148%" height="15" fill="rgb(209,12,38)" fg:x="209" fg:w="36"/><text x="0.9166%" y="687.50"></text></g><g><title>meg`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.11%)</title><rect x="0.6761%" y="661" width="0.1052%" height="15" fill="rgb(227,1,9)" fg:x="212" fg:w="33"/><text x="0.9261%" y="671.50"></text></g><g><title>meg`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (8 samples, 0.03%)</title><rect x="0.7559%" y="645" width="0.0255%" height="15" fill="rgb(248,47,43)" fg:x="237" fg:w="8"/><text x="1.0059%" y="655.50"></text></g><g><title>meg`weresocool_ast::operations::helpers::join_sequence (86 samples, 0.27%)</title><rect x="0.5326%" y="693" width="0.2743%" height="15" fill="rgb(221,10,30)" fg:x="167" fg:w="86"/><text x="0.7826%" y="703.50"></text></g><g><title>meg`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.03%)</title><rect x="0.7814%" y="677" width="0.0255%" height="15" fill="rgb(210,229,1)" fg:x="245" fg:w="8"/><text x="1.0314%" y="687.50"></text></g><g><title>meg`alloc::raw_vec::finish_grow (8 samples, 0.03%)</title><rect x="0.7814%" y="661" width="0.0255%" height="15" fill="rgb(222,148,37)" fg:x="245" fg:w="8"/><text x="1.0314%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`realloc (8 samples, 0.03%)</title><rect x="0.7814%" y="645" width="0.0255%" height="15" fill="rgb(234,67,33)" fg:x="245" fg:w="8"/><text x="1.0314%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (8 samples, 0.03%)</title><rect x="0.7814%" y="629" width="0.0255%" height="15" fill="rgb(247,98,35)" fg:x="245" fg:w="8"/><text x="1.0314%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (8 samples, 0.03%)</title><rect x="0.7814%" y="613" width="0.0255%" height="15" fill="rgb(247,138,52)" fg:x="245" fg:w="8"/><text x="1.0314%" y="623.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.03%)</title><rect x="0.7814%" y="597" width="0.0255%" height="15" fill="rgb(213,79,30)" fg:x="245" fg:w="8"/><text x="1.0314%" y="607.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.03%)</title><rect x="0.8069%" y="565" width="0.0287%" height="15" fill="rgb(246,177,23)" fg:x="253" fg:w="9"/><text x="1.0569%" y="575.50"></text></g><g><title>meg`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.02%)</title><rect x="0.8133%" y="549" width="0.0223%" height="15" fill="rgb(230,62,27)" fg:x="255" fg:w="7"/><text x="1.0633%" y="559.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="0.8356%" y="565" width="0.0128%" height="15" fill="rgb(216,154,8)" fg:x="262" fg:w="4"/><text x="1.0856%" y="575.50"></text></g><g><title>meg`weresocool_ast::operations::helpers::join_sequence (14 samples, 0.04%)</title><rect x="0.8069%" y="581" width="0.0446%" height="15" fill="rgb(244,35,45)" fg:x="253" fg:w="14"/><text x="1.0569%" y="591.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="0.8739%" y="517" width="0.0159%" height="15" fill="rgb(251,115,12)" fg:x="274" fg:w="5"/><text x="1.1239%" y="527.50"></text></g><g><title>meg`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="0.8771%" y="501" width="0.0128%" height="15" fill="rgb(240,54,50)" fg:x="275" fg:w="4"/><text x="1.1271%" y="511.50"></text></g><g><title>meg`weresocool_ast::operations::helpers::join_sequence (11 samples, 0.04%)</title><rect x="0.8643%" y="533" width="0.0351%" height="15" fill="rgb(233,84,52)" fg:x="271" fg:w="11"/><text x="1.1143%" y="543.50"></text></g><g><title>meg`weresocool_ast::operations::normalize::_&lt;impl weresocool_ast::operations::Normalize&lt;weresocool_ast::term::Term&gt; for weresocool_ast::ast::Op&gt;::apply_to_normal_form (15 samples, 0.05%)</title><rect x="0.8611%" y="549" width="0.0478%" height="15" fill="rgb(207,117,47)" fg:x="270" fg:w="15"/><text x="1.1111%" y="559.50"></text></g><g><title>meg`core::iter::adapters::try_process (33 samples, 0.11%)</title><rect x="0.8069%" y="677" width="0.1052%" height="15" fill="rgb(249,43,39)" fg:x="253" fg:w="33"/><text x="1.0569%" y="687.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (33 samples, 0.11%)</title><rect x="0.8069%" y="661" width="0.1052%" height="15" fill="rgb(209,38,44)" fg:x="253" fg:w="33"/><text x="1.0569%" y="671.50"></text></g><g><title>meg`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (33 samples, 0.11%)</title><rect x="0.8069%" y="645" width="0.1052%" height="15" fill="rgb(236,212,23)" fg:x="253" fg:w="33"/><text x="1.0569%" y="655.50"></text></g><g><title>meg`weresocool_ast::operations::normalize::_&lt;impl weresocool_ast::operations::Normalize&lt;weresocool_ast::term::Term&gt; for weresocool_ast::ast::Op&gt;::apply_to_normal_form (33 samples, 0.11%)</title><rect x="0.8069%" y="629" width="0.1052%" height="15" fill="rgb(242,79,21)" fg:x="253" fg:w="33"/><text x="1.0569%" y="639.50"></text></g><g><title>meg`weresocool_ast::operations::normalize::_&lt;impl weresocool_ast::operations::Normalize&lt;weresocool_ast::term::Term&gt; for weresocool_ast::ast::Op&gt;::apply_to_normal_form (33 samples, 0.11%)</title><rect x="0.8069%" y="613" width="0.1052%" height="15" fill="rgb(211,96,35)" fg:x="253" fg:w="33"/><text x="1.0569%" y="623.50"></text></g><g><title>meg`weresocool_ast::operations::normalize::_&lt;impl weresocool_ast::operations::Normalize&lt;weresocool_ast::term::Term&gt; for weresocool_ast::ast::Op&gt;::apply_to_normal_form (33 samples, 0.11%)</title><rect x="0.8069%" y="597" width="0.1052%" height="15" fill="rgb(253,215,40)" fg:x="253" fg:w="33"/><text x="1.0569%" y="607.50"></text></g><g><title>meg`weresocool_ast::operations::normalize::_&lt;impl weresocool_ast::operations::Normalize&lt;weresocool_ast::term::Term&gt; for weresocool_ast::ast::Op&gt;::apply_to_normal_form (19 samples, 0.06%)</title><rect x="0.8515%" y="581" width="0.0606%" height="15" fill="rgb(211,81,21)" fg:x="267" fg:w="19"/><text x="1.1015%" y="591.50"></text></g><g><title>meg`weresocool_ast::operations::normalize::_&lt;impl weresocool_ast::operations::Normalize&lt;weresocool_ast::term::Term&gt; for weresocool_ast::ast::Op&gt;::apply_to_normal_form (19 samples, 0.06%)</title><rect x="0.8515%" y="565" width="0.0606%" height="15" fill="rgb(208,190,38)" fg:x="267" fg:w="19"/><text x="1.1015%" y="575.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="0.9345%" y="629" width="0.0159%" height="15" fill="rgb(235,213,38)" fg:x="293" fg:w="5"/><text x="1.1845%" y="639.50"></text></g><g><title>meg`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="0.9345%" y="613" width="0.0159%" height="15" fill="rgb(237,122,38)" fg:x="293" fg:w="5"/><text x="1.1845%" y="623.50"></text></g><g><title>meg`weresocool_ast::operations::helpers::join_sequence (10 samples, 0.03%)</title><rect x="0.9249%" y="645" width="0.0319%" height="15" fill="rgb(244,218,35)" fg:x="290" fg:w="10"/><text x="1.1749%" y="655.50"></text></g><g><title>meg`&lt;weresocool_core::interpretable::InputType as weresocool_core::interpretable::Interpretable&gt;::make (300 samples, 0.96%)</title><rect x="0.0159%" y="773" width="0.9568%" height="15" fill="rgb(240,68,47)" fg:x="5" fg:w="300"/><text x="0.2659%" y="783.50"></text></g><g><title>meg`weresocool_parser::parser::parse_file (160 samples, 0.51%)</title><rect x="0.4624%" y="757" width="0.5103%" height="15" fill="rgb(210,16,53)" fg:x="145" fg:w="160"/><text x="0.7124%" y="767.50"></text></g><g><title>meg`weresocool_parser::parser::process_op_table (154 samples, 0.49%)</title><rect x="0.4816%" y="741" width="0.4911%" height="15" fill="rgb(235,124,12)" fg:x="151" fg:w="154"/><text x="0.7316%" y="751.50"></text></g><g><title>meg`weresocool_ast::operations::normalize::_&lt;impl weresocool_ast::operations::Normalize&lt;weresocool_ast::term::Term&gt; for weresocool_ast::ast::Op&gt;::apply_to_normal_form (154 samples, 0.49%)</title><rect x="0.4816%" y="725" width="0.4911%" height="15" fill="rgb(224,169,11)" fg:x="151" fg:w="154"/><text x="0.7316%" y="735.50"></text></g><g><title>meg`weresocool_ast::operations::normalize::_&lt;impl weresocool_ast::operations::Normalize&lt;weresocool_ast::term::Term&gt; for weresocool_ast::ast::Op&gt;::apply_to_normal_form (154 samples, 0.49%)</title><rect x="0.4816%" y="709" width="0.4911%" height="15" fill="rgb(250,166,2)" fg:x="151" fg:w="154"/><text x="0.7316%" y="719.50"></text></g><g><title>meg`weresocool_ast::operations::normalize::_&lt;impl weresocool_ast::operations::Normalize&lt;weresocool_ast::term::Term&gt; for weresocool_ast::ast::Op&gt;::apply_to_normal_form (52 samples, 0.17%)</title><rect x="0.8069%" y="693" width="0.1658%" height="15" fill="rgb(242,216,29)" fg:x="253" fg:w="52"/><text x="1.0569%" y="703.50"></text></g><g><title>meg`weresocool_ast::operations::normalize::_&lt;impl weresocool_ast::operations::Normalize&lt;weresocool_ast::term::Term&gt; for weresocool_ast::ast::Op&gt;::apply_to_normal_form (19 samples, 0.06%)</title><rect x="0.9121%" y="677" width="0.0606%" height="15" fill="rgb(230,116,27)" fg:x="286" fg:w="19"/><text x="1.1621%" y="687.50"></text></g><g><title>meg`weresocool_ast::operations::normalize::_&lt;impl weresocool_ast::operations::Normalize&lt;weresocool_ast::term::Term&gt; for weresocool_ast::ast::Op&gt;::apply_to_normal_form (16 samples, 0.05%)</title><rect x="0.9217%" y="661" width="0.0510%" height="15" fill="rgb(228,99,48)" fg:x="289" fg:w="16"/><text x="1.1717%" y="671.50"></text></g><g><title>meg`weresocool_ast::operations::normalize::_&lt;impl weresocool_ast::operations::Normalize&lt;weresocool_ast::term::Term&gt; for weresocool_ast::ast::Op&gt;::apply_to_normal_form (5 samples, 0.02%)</title><rect x="0.9568%" y="645" width="0.0159%" height="15" fill="rgb(253,11,6)" fg:x="300" fg:w="5"/><text x="1.2068%" y="655.50"></text></g><g><title>meg`weresocool_ast::operations::normalize::_&lt;impl weresocool_ast::operations::Normalize&lt;weresocool_ast::term::Term&gt; for weresocool_ast::ast::Op&gt;::apply_to_normal_form (4 samples, 0.01%)</title><rect x="0.9600%" y="629" width="0.0128%" height="15" fill="rgb(247,143,39)" fg:x="301" fg:w="4"/><text x="1.2100%" y="639.50"></text></g><g><title>meg`futures_executor::local_pool::block_on (7 samples, 0.02%)</title><rect x="0.9727%" y="757" width="0.0223%" height="15" fill="rgb(236,97,10)" fg:x="305" fg:w="7"/><text x="1.2227%" y="767.50"></text></g><g><title>meg`std::thread::local::LocalKey&lt;T&gt;::with (7 samples, 0.02%)</title><rect x="0.9727%" y="741" width="0.0223%" height="15" fill="rgb(233,208,19)" fg:x="305" fg:w="7"/><text x="1.2227%" y="751.50"></text></g><g><title>meg`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.02%)</title><rect x="0.9727%" y="725" width="0.0223%" height="15" fill="rgb(216,164,2)" fg:x="305" fg:w="7"/><text x="1.2227%" y="735.50"></text></g><g><title>meg`wgpu_core::instance::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::instance_create_surface (4 samples, 0.01%)</title><rect x="0.9823%" y="709" width="0.0128%" height="15" fill="rgb(220,129,5)" fg:x="308" fg:w="4"/><text x="1.2323%" y="719.50"></text></g><g><title>meg`wgpu_hal::metal::surface::_&lt;impl wgpu_hal::metal::Surface&gt;::from_nsview (4 samples, 0.01%)</title><rect x="0.9823%" y="693" width="0.0128%" height="15" fill="rgb(242,17,10)" fg:x="308" fg:w="4"/><text x="1.2323%" y="703.50"></text></g><g><title>meg`kintaro::shared::render_pipeline::create_render_pipeline (7 samples, 0.02%)</title><rect x="1.0014%" y="565" width="0.0223%" height="15" fill="rgb(242,107,0)" fg:x="314" fg:w="7"/><text x="1.2514%" y="575.50"></text></g><g><title>meg`wgpu::Device::create_render_pipeline (7 samples, 0.02%)</title><rect x="1.0014%" y="549" width="0.0223%" height="15" fill="rgb(251,28,31)" fg:x="314" fg:w="7"/><text x="1.2514%" y="559.50"></text></g><g><title>meg`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_render_pipeline (7 samples, 0.02%)</title><rect x="1.0014%" y="533" width="0.0223%" height="15" fill="rgb(233,223,10)" fg:x="314" fg:w="7"/><text x="1.2514%" y="543.50"></text></g><g><title>meg`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_render_pipeline (7 samples, 0.02%)</title><rect x="1.0014%" y="517" width="0.0223%" height="15" fill="rgb(215,21,27)" fg:x="314" fg:w="7"/><text x="1.2514%" y="527.50"></text></g><g><title>meg`wgpu_core::device::Device&lt;A&gt;::create_render_pipeline (7 samples, 0.02%)</title><rect x="1.0014%" y="501" width="0.0223%" height="15" fill="rgb(232,23,21)" fg:x="314" fg:w="7"/><text x="1.2514%" y="511.50"></text></g><g><title>meg`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_render_pipeline (7 samples, 0.02%)</title><rect x="1.0014%" y="485" width="0.0223%" height="15" fill="rgb(244,5,23)" fg:x="314" fg:w="7"/><text x="1.2514%" y="495.50"></text></g><g><title>meg`wgpu_hal::metal::device::_&lt;impl wgpu_hal::metal::Device&gt;::load_shader (7 samples, 0.02%)</title><rect x="1.0014%" y="469" width="0.0223%" height="15" fill="rgb(226,81,46)" fg:x="314" fg:w="7"/><text x="1.2514%" y="479.50"></text></g><g><title>meg`naga::back::msl::write_string (6 samples, 0.02%)</title><rect x="1.0046%" y="453" width="0.0191%" height="15" fill="rgb(247,70,30)" fg:x="315" fg:w="6"/><text x="1.2546%" y="463.50"></text></g><g><title>meg`naga::back::msl::writer::Writer&lt;W&gt;::write (5 samples, 0.02%)</title><rect x="1.0078%" y="437" width="0.0159%" height="15" fill="rgb(212,68,19)" fg:x="316" fg:w="5"/><text x="1.2578%" y="447.50"></text></g><g><title>meg`&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (9 samples, 0.03%)</title><rect x="0.9982%" y="613" width="0.0287%" height="15" fill="rgb(240,187,13)" fg:x="313" fg:w="9"/><text x="1.2482%" y="623.50"></text></g><g><title>meg`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.03%)</title><rect x="0.9982%" y="597" width="0.0287%" height="15" fill="rgb(223,113,26)" fg:x="313" fg:w="9"/><text x="1.2482%" y="607.50"></text></g><g><title>meg`kintaro::op_stream::renderpasses::make_renderpass (9 samples, 0.03%)</title><rect x="0.9982%" y="581" width="0.0287%" height="15" fill="rgb(206,192,2)" fg:x="313" fg:w="9"/><text x="1.2482%" y="591.50"></text></g><g><title>meg`kintaro::realtime::RealTimeState::init (19 samples, 0.06%)</title><rect x="0.9727%" y="773" width="0.0606%" height="15" fill="rgb(241,108,4)" fg:x="305" fg:w="19"/><text x="1.2227%" y="783.50"></text></g><g><title>meg`kintaro::composition::init::_&lt;impl kintaro::composition::Composition&gt;::init_realtime (12 samples, 0.04%)</title><rect x="0.9951%" y="757" width="0.0383%" height="15" fill="rgb(247,173,49)" fg:x="312" fg:w="12"/><text x="1.2451%" y="767.50"></text></g><g><title>meg`kintaro::realtime::make_renderable_enums (11 samples, 0.04%)</title><rect x="0.9982%" y="741" width="0.0351%" height="15" fill="rgb(224,114,35)" fg:x="313" fg:w="11"/><text x="1.2482%" y="751.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.04%)</title><rect x="0.9982%" y="725" width="0.0351%" height="15" fill="rgb(245,159,27)" fg:x="313" fg:w="11"/><text x="1.2482%" y="735.50"></text></g><g><title>meg`&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.04%)</title><rect x="0.9982%" y="709" width="0.0351%" height="15" fill="rgb(245,172,44)" fg:x="313" fg:w="11"/><text x="1.2482%" y="719.50"></text></g><g><title>meg`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (11 samples, 0.04%)</title><rect x="0.9982%" y="693" width="0.0351%" height="15" fill="rgb(236,23,11)" fg:x="313" fg:w="11"/><text x="1.2482%" y="703.50"></text></g><g><title>meg`core::iter::adapters::try_process (11 samples, 0.04%)</title><rect x="0.9982%" y="677" width="0.0351%" height="15" fill="rgb(205,117,38)" fg:x="313" fg:w="11"/><text x="1.2482%" y="687.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.04%)</title><rect x="0.9982%" y="661" width="0.0351%" height="15" fill="rgb(237,72,25)" fg:x="313" fg:w="11"/><text x="1.2482%" y="671.50"></text></g><g><title>meg`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.04%)</title><rect x="0.9982%" y="645" width="0.0351%" height="15" fill="rgb(244,70,9)" fg:x="313" fg:w="11"/><text x="1.2482%" y="655.50"></text></g><g><title>meg`&lt;kintaro::renderable::RenderableConfig as kintaro::renderable::ToRenderable&gt;::to_renderable (11 samples, 0.04%)</title><rect x="0.9982%" y="629" width="0.0351%" height="15" fill="rgb(217,125,39)" fg:x="313" fg:w="11"/><text x="1.2482%" y="639.50"></text></g><g><title>CoreAudio`HALB_CommandGate::ExecuteCommand(void  (6 samples, 0.02%)</title><rect x="1.0365%" y="597" width="0.0191%" height="15" fill="rgb(235,36,10)" fg:x="325" fg:w="6"/><text x="1.2865%" y="607.50"></text></g><g><title>CoreAudio`HALC_ShellPlugIn::_ReconcileDeviceList(bool, bool, std::__1::vector&lt;unsigned int, std::__1::allocator&lt;unsigned int&gt; &gt;&amp;, std::__1::vector&lt;unsigned int, std::__1::allocator (6 samples, 0.02%)</title><rect x="1.0365%" y="581" width="0.0191%" height="15" fill="rgb(251,123,47)" fg:x="325" fg:w="6"/><text x="1.2865%" y="591.50"></text></g><g><title>CoreAudio`HALC_ShellObjectMap::CreateObject (6 samples, 0.02%)</title><rect x="1.0365%" y="565" width="0.0191%" height="15" fill="rgb(221,13,13)" fg:x="325" fg:w="6"/><text x="1.2865%" y="575.50"></text></g><g><title>CoreAudio`HALC_ShellDevice::BuildIOContext (4 samples, 0.01%)</title><rect x="1.0429%" y="549" width="0.0128%" height="15" fill="rgb(238,131,9)" fg:x="327" fg:w="4"/><text x="1.2929%" y="559.50"></text></g><g><title>CoreAudio`HALC_ShellPlugIn::ReconcileDeviceList (7 samples, 0.02%)</title><rect x="1.0365%" y="613" width="0.0223%" height="15" fill="rgb(211,50,8)" fg:x="325" fg:w="7"/><text x="1.2865%" y="623.50"></text></g><g><title>CoreAudio`HALPlugInManagement::CreateHALPlugIn (9 samples, 0.03%)</title><rect x="1.0365%" y="661" width="0.0287%" height="15" fill="rgb(245,182,24)" fg:x="325" fg:w="9"/><text x="1.2865%" y="671.50"></text></g><g><title>CoreAudio`HAL_HardwarePlugIn_InitializeWithObjectID(AudioHardwarePlugInInterface**, unsigned int) (9 samples, 0.03%)</title><rect x="1.0365%" y="645" width="0.0287%" height="15" fill="rgb(242,14,37)" fg:x="325" fg:w="9"/><text x="1.2865%" y="655.50"></text></g><g><title>CoreAudio`HALC_ShellPlugIn::ConnectToServer (9 samples, 0.03%)</title><rect x="1.0365%" y="629" width="0.0287%" height="15" fill="rgb(246,228,12)" fg:x="325" fg:w="9"/><text x="1.2865%" y="639.50"></text></g><g><title>CoreAudio`AudioObjectSetPropertyData (11 samples, 0.04%)</title><rect x="1.0333%" y="709" width="0.0351%" height="15" fill="rgb(213,55,15)" fg:x="324" fg:w="11"/><text x="1.2833%" y="719.50"></text></g><g><title>CoreAudio`HALSystem::CheckOutInstance (10 samples, 0.03%)</title><rect x="1.0365%" y="693" width="0.0319%" height="15" fill="rgb(209,9,3)" fg:x="325" fg:w="10"/><text x="1.2865%" y="703.50"></text></g><g><title>CoreAudio`HALSystem::InitializeDevices (10 samples, 0.03%)</title><rect x="1.0365%" y="677" width="0.0319%" height="15" fill="rgb(230,59,30)" fg:x="325" fg:w="10"/><text x="1.2865%" y="687.50"></text></g><g><title>meg`portaudio::PortAudio::new (13 samples, 0.04%)</title><rect x="1.0333%" y="757" width="0.0415%" height="15" fill="rgb(209,121,21)" fg:x="324" fg:w="13"/><text x="1.2833%" y="767.50"></text></g><g><title>libportaudio.2.dylib`Pa_Initialize (13 samples, 0.04%)</title><rect x="1.0333%" y="741" width="0.0415%" height="15" fill="rgb(220,109,13)" fg:x="324" fg:w="13"/><text x="1.2833%" y="751.50"></text></g><g><title>libportaudio.2.dylib`PaMacCore_Initialize (13 samples, 0.04%)</title><rect x="1.0333%" y="725" width="0.0415%" height="15" fill="rgb(232,18,1)" fg:x="324" fg:w="13"/><text x="1.2833%" y="735.50"></text></g><g><title>meg`weresocool_core::portaudio::real_time_render_manager::real_time_render_manager (19 samples, 0.06%)</title><rect x="1.0333%" y="773" width="0.0606%" height="15" fill="rgb(215,41,42)" fg:x="324" fg:w="19"/><text x="1.2833%" y="783.50"></text></g><g><title>meg`portaudio::stream::Stream&lt;portaudio::stream::NonBlocking,F&gt;::open (6 samples, 0.02%)</title><rect x="1.0748%" y="757" width="0.0191%" height="15" fill="rgb(224,123,36)" fg:x="337" fg:w="6"/><text x="1.3248%" y="767.50"></text></g><g><title>meg`portaudio::stream::open_non_blocking_stream (6 samples, 0.02%)</title><rect x="1.0748%" y="741" width="0.0191%" height="15" fill="rgb(240,125,3)" fg:x="337" fg:w="6"/><text x="1.3248%" y="751.50"></text></g><g><title>libportaudio.2.dylib`Pa_OpenStream (6 samples, 0.02%)</title><rect x="1.0748%" y="725" width="0.0191%" height="15" fill="rgb(205,98,50)" fg:x="337" fg:w="6"/><text x="1.3248%" y="735.50"></text></g><g><title>libportaudio.2.dylib`OpenStream (6 samples, 0.02%)</title><rect x="1.0748%" y="709" width="0.0191%" height="15" fill="rgb(205,185,37)" fg:x="337" fg:w="6"/><text x="1.3248%" y="719.50"></text></g><g><title>libportaudio.2.dylib`OpenAndSetupOneAudioUnit (6 samples, 0.02%)</title><rect x="1.0748%" y="693" width="0.0191%" height="15" fill="rgb(238,207,15)" fg:x="337" fg:w="6"/><text x="1.3248%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.01%)</title><rect x="1.1003%" y="725" width="0.0128%" height="15" fill="rgb(213,199,42)" fg:x="345" fg:w="4"/><text x="1.3503%" y="735.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="1.0939%" y="757" width="0.0383%" height="15" fill="rgb(235,201,11)" fg:x="343" fg:w="12"/><text x="1.3439%" y="767.50"></text></g><g><title>meg`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="1.0939%" y="741" width="0.0383%" height="15" fill="rgb(207,46,11)" fg:x="343" fg:w="12"/><text x="1.3439%" y="751.50"></text></g><g><title>meg`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (4 samples, 0.01%)</title><rect x="1.1194%" y="725" width="0.0128%" height="15" fill="rgb(241,35,35)" fg:x="351" fg:w="4"/><text x="1.3694%" y="735.50"></text></g><g><title>meg`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (6 samples, 0.02%)</title><rect x="1.2024%" y="709" width="0.0191%" height="15" fill="rgb(243,32,47)" fg:x="377" fg:w="6"/><text x="1.4524%" y="719.50"></text></g><g><title>meg`weresocool_ast::nameset::NameSet::to_vec (10 samples, 0.03%)</title><rect x="1.2024%" y="725" width="0.0319%" height="15" fill="rgb(247,202,23)" fg:x="377" fg:w="10"/><text x="1.4524%" y="735.50"></text></g><g><title>meg`weresocool_instrument::renderable::calculate_fgpl (8 samples, 0.03%)</title><rect x="1.2374%" y="725" width="0.0255%" height="15" fill="rgb(219,102,11)" fg:x="388" fg:w="8"/><text x="1.4874%" y="735.50"></text></g><g><title>meg`weresocool_instrument::renderable::m_a_and_basis_to_f64 (6 samples, 0.02%)</title><rect x="1.2438%" y="709" width="0.0191%" height="15" fill="rgb(243,110,44)" fg:x="390" fg:w="6"/><text x="1.4938%" y="719.50"></text></g><g><title>meg`num_rational::Ratio&lt;T&gt;::reduce (4 samples, 0.01%)</title><rect x="1.2502%" y="693" width="0.0128%" height="15" fill="rgb(222,74,54)" fg:x="392" fg:w="4"/><text x="1.5002%" y="703.50"></text></g><g><title>meg`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (44 samples, 0.14%)</title><rect x="1.1322%" y="757" width="0.1403%" height="15" fill="rgb(216,99,12)" fg:x="355" fg:w="44"/><text x="1.3822%" y="767.50"></text></g><g><title>meg`weresocool_instrument::renderable::pointop_to_renderop (35 samples, 0.11%)</title><rect x="1.1609%" y="741" width="0.1116%" height="15" fill="rgb(226,22,26)" fg:x="364" fg:w="35"/><text x="1.4109%" y="751.50"></text></g><g><title>meg`&lt;num_rational::Ratio&lt;T&gt; as core::ops::arith::Mul&gt;::mul (13 samples, 0.04%)</title><rect x="1.2885%" y="709" width="0.0415%" height="15" fill="rgb(217,163,10)" fg:x="404" fg:w="13"/><text x="1.5385%" y="719.50"></text></g><g><title>meg`alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (4 samples, 0.01%)</title><rect x="1.3459%" y="693" width="0.0128%" height="15" fill="rgb(213,25,53)" fg:x="422" fg:w="4"/><text x="1.5959%" y="703.50"></text></g><g><title>meg`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (5 samples, 0.02%)</title><rect x="1.3650%" y="677" width="0.0159%" height="15" fill="rgb(252,105,26)" fg:x="428" fg:w="5"/><text x="1.6150%" y="687.50"></text></g><g><title>meg`&lt;&amp;weresocool_ast::operations::PointOp as core::ops::arith::Mul&lt;&amp;weresocool_ast::operations::PointOp&gt;&gt;::mul (41 samples, 0.13%)</title><rect x="1.2725%" y="725" width="0.1308%" height="15" fill="rgb(220,39,43)" fg:x="399" fg:w="41"/><text x="1.5225%" y="735.50"></text></g><g><title>meg`weresocool_ast::operations::union_names (23 samples, 0.07%)</title><rect x="1.3299%" y="709" width="0.0734%" height="15" fill="rgb(229,68,48)" fg:x="417" fg:w="23"/><text x="1.5799%" y="719.50"></text></g><g><title>meg`weresocool_ast::nameset::NameSet::to_vec (14 samples, 0.04%)</title><rect x="1.3586%" y="693" width="0.0446%" height="15" fill="rgb(252,8,32)" fg:x="426" fg:w="14"/><text x="1.6086%" y="703.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.02%)</title><rect x="1.3810%" y="677" width="0.0223%" height="15" fill="rgb(223,20,43)" fg:x="433" fg:w="7"/><text x="1.6310%" y="687.50"></text></g><g><title>meg`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.01%)</title><rect x="1.3905%" y="661" width="0.0128%" height="15" fill="rgb(229,81,49)" fg:x="436" fg:w="4"/><text x="1.6405%" y="671.50"></text></g><g><title>meg`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.01%)</title><rect x="1.3905%" y="645" width="0.0128%" height="15" fill="rgb(236,28,36)" fg:x="436" fg:w="4"/><text x="1.6405%" y="655.50"></text></g><g><title>meg`weresocool_instrument::renderable::nf_to_vec_renderable (106 samples, 0.34%)</title><rect x="1.0939%" y="773" width="0.3381%" height="15" fill="rgb(249,185,26)" fg:x="343" fg:w="106"/><text x="1.3439%" y="783.50"></text></g><g><title>meg`&lt;weresocool_ast::operations::NormalForm as weresocool_ast::operations::Normalize&lt;weresocool_ast::term::Term&gt;&gt;::apply_to_normal_form (50 samples, 0.16%)</title><rect x="1.2725%" y="757" width="0.1595%" height="15" fill="rgb(249,174,33)" fg:x="399" fg:w="50"/><text x="1.5225%" y="767.50"></text></g><g><title>meg`&lt;weresocool_ast::operations::NormalForm as core::ops::arith::MulAssign&lt;&amp;weresocool_ast::operations::NormalForm&gt;&gt;::mul_assign (50 samples, 0.16%)</title><rect x="1.2725%" y="741" width="0.1595%" height="15" fill="rgb(233,201,37)" fg:x="399" fg:w="50"/><text x="1.5225%" y="751.50"></text></g><g><title>meg`num_rational::Ratio&lt;T&gt;::reduce (4 samples, 0.01%)</title><rect x="1.4192%" y="725" width="0.0128%" height="15" fill="rgb(221,78,26)" fg:x="445" fg:w="4"/><text x="1.6692%" y="735.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="1.4320%" y="757" width="0.0191%" height="15" fill="rgb(250,127,30)" fg:x="449" fg:w="6"/><text x="1.6820%" y="767.50"></text></g><g><title>meg`alloc::slice::_&lt;impl [T]&gt;::to_vec (4 samples, 0.01%)</title><rect x="1.4543%" y="709" width="0.0128%" height="15" fill="rgb(230,49,44)" fg:x="456" fg:w="4"/><text x="1.7043%" y="719.50"></text></g><g><title>meg`weresocool_instrument::renderable::render_voice::renderables_to_render_voices (12 samples, 0.04%)</title><rect x="1.4320%" y="773" width="0.0383%" height="15" fill="rgb(229,67,23)" fg:x="449" fg:w="12"/><text x="1.6820%" y="783.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.02%)</title><rect x="1.4511%" y="757" width="0.0191%" height="15" fill="rgb(249,83,47)" fg:x="455" fg:w="6"/><text x="1.7011%" y="767.50"></text></g><g><title>meg`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.02%)</title><rect x="1.4511%" y="741" width="0.0191%" height="15" fill="rgb(215,43,3)" fg:x="455" fg:w="6"/><text x="1.7011%" y="751.50"></text></g><g><title>meg`weresocool_instrument::renderable::render_voice::RenderVoice::init (6 samples, 0.02%)</title><rect x="1.4511%" y="725" width="0.0191%" height="15" fill="rgb(238,154,13)" fg:x="455" fg:w="6"/><text x="1.7011%" y="735.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) sendEvent:] (7 samples, 0.02%)</title><rect x="1.5022%" y="661" width="0.0223%" height="15" fill="rgb(219,56,2)" fg:x="471" fg:w="7"/><text x="1.7522%" y="671.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) sendEvent:] (16 samples, 0.05%)</title><rect x="1.4798%" y="677" width="0.0510%" height="15" fill="rgb(233,0,4)" fg:x="464" fg:w="16"/><text x="1.7298%" y="687.50"></text></g><g><title>AppKit`-[NSApplication _handleEvent:] (20 samples, 0.06%)</title><rect x="1.4703%" y="709" width="0.0638%" height="15" fill="rgb(235,30,7)" fg:x="461" fg:w="20"/><text x="1.7203%" y="719.50"></text></g><g><title>meg`winit::platform_impl::platform::app::send_event (17 samples, 0.05%)</title><rect x="1.4798%" y="693" width="0.0542%" height="15" fill="rgb(250,79,13)" fg:x="464" fg:w="17"/><text x="1.7298%" y="703.50"></text></g><g><title>AppKit`-[NSEvent _initWithCGEvent:eventRef:] (9 samples, 0.03%)</title><rect x="1.5532%" y="693" width="0.0287%" height="15" fill="rgb(211,146,34)" fg:x="487" fg:w="9"/><text x="1.8032%" y="703.50"></text></g><g><title>AppKit`-[NSApplication _sendFinishLaunchingNotification] (5 samples, 0.02%)</title><rect x="1.6042%" y="549" width="0.0159%" height="15" fill="rgb(228,22,38)" fg:x="503" fg:w="5"/><text x="1.8542%" y="559.50"></text></g><g><title>AppKit`-[NSApplication _postDidFinishNotification] (5 samples, 0.02%)</title><rect x="1.6042%" y="533" width="0.0159%" height="15" fill="rgb(235,168,5)" fg:x="503" fg:w="5"/><text x="1.8542%" y="543.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (5 samples, 0.02%)</title><rect x="1.6042%" y="517" width="0.0159%" height="15" fill="rgb(221,155,16)" fg:x="503" fg:w="5"/><text x="1.8542%" y="527.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (5 samples, 0.02%)</title><rect x="1.6042%" y="501" width="0.0159%" height="15" fill="rgb(215,215,53)" fg:x="503" fg:w="5"/><text x="1.8542%" y="511.50"></text></g><g><title>CoreFoundation`_CFXRegistrationPost (5 samples, 0.02%)</title><rect x="1.6042%" y="485" width="0.0159%" height="15" fill="rgb(223,4,10)" fg:x="503" fg:w="5"/><text x="1.8542%" y="495.50"></text></g><g><title>CoreFoundation`___CFXRegistrationPost_block_invoke (5 samples, 0.02%)</title><rect x="1.6042%" y="469" width="0.0159%" height="15" fill="rgb(234,103,6)" fg:x="503" fg:w="5"/><text x="1.8542%" y="479.50"></text></g><g><title>CoreFoundation`__CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ (5 samples, 0.02%)</title><rect x="1.6042%" y="453" width="0.0159%" height="15" fill="rgb(227,97,0)" fg:x="503" fg:w="5"/><text x="1.8542%" y="463.50"></text></g><g><title>meg`winit::platform_impl::platform::app_delegate::did_finish_launching (5 samples, 0.02%)</title><rect x="1.6042%" y="437" width="0.0159%" height="15" fill="rgb(234,150,53)" fg:x="503" fg:w="5"/><text x="1.8542%" y="447.50"></text></g><g><title>meg`winit::platform_impl::platform::app_state::AppState::launched (5 samples, 0.02%)</title><rect x="1.6042%" y="421" width="0.0159%" height="15" fill="rgb(228,201,54)" fg:x="503" fg:w="5"/><text x="1.8542%" y="431.50"></text></g><g><title>HIToolbox`AEProcessAppleEvent (6 samples, 0.02%)</title><rect x="1.6042%" y="677" width="0.0191%" height="15" fill="rgb(222,22,37)" fg:x="503" fg:w="6"/><text x="1.8542%" y="687.50"></text></g><g><title>AE`aeProcessAppleEvent (6 samples, 0.02%)</title><rect x="1.6042%" y="661" width="0.0191%" height="15" fill="rgb(237,53,32)" fg:x="503" fg:w="6"/><text x="1.8542%" y="671.50"></text></g><g><title>AE`0x00007ff808744c38 (6 samples, 0.02%)</title><rect x="1.6042%" y="645" width="0.0191%" height="15" fill="rgb(233,25,53)" fg:x="503" fg:w="6"/><text x="1.8542%" y="655.50"></text></g><g><title>AE`0x00007ff808744cb7 (6 samples, 0.02%)</title><rect x="1.6042%" y="629" width="0.0191%" height="15" fill="rgb(210,40,34)" fg:x="503" fg:w="6"/><text x="1.8542%" y="639.50"></text></g><g><title>Foundation`_NSAppleEventManagerGenericHandler (6 samples, 0.02%)</title><rect x="1.6042%" y="613" width="0.0191%" height="15" fill="rgb(241,220,44)" fg:x="503" fg:w="6"/><text x="1.8542%" y="623.50"></text></g><g><title>Foundation`-[NSAppleEventManager dispatchRawAppleEvent:withRawReply:handlerRefCon:] (6 samples, 0.02%)</title><rect x="1.6042%" y="597" width="0.0191%" height="15" fill="rgb(235,28,35)" fg:x="503" fg:w="6"/><text x="1.8542%" y="607.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleCoreEvent:withReplyEvent:] (6 samples, 0.02%)</title><rect x="1.6042%" y="581" width="0.0191%" height="15" fill="rgb(210,56,17)" fg:x="503" fg:w="6"/><text x="1.8542%" y="591.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleAEOpenEvent:] (6 samples, 0.02%)</title><rect x="1.6042%" y="565" width="0.0191%" height="15" fill="rgb(224,130,29)" fg:x="503" fg:w="6"/><text x="1.8542%" y="575.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawIntoWindow (6 samples, 0.02%)</title><rect x="1.6552%" y="293" width="0.0191%" height="15" fill="rgb(235,212,8)" fg:x="519" fg:w="6"/><text x="1.9052%" y="303.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawOnce (5 samples, 0.02%)</title><rect x="1.6584%" y="277" width="0.0159%" height="15" fill="rgb(223,33,50)" fg:x="520" fg:w="5"/><text x="1.9084%" y="287.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (9 samples, 0.03%)</title><rect x="1.6489%" y="629" width="0.0287%" height="15" fill="rgb(219,149,13)" fg:x="517" fg:w="9"/><text x="1.8989%" y="639.50"></text></g><g><title>HIToolbox`HIApplication::EventObserver (9 samples, 0.03%)</title><rect x="1.6489%" y="613" width="0.0287%" height="15" fill="rgb(250,156,29)" fg:x="517" fg:w="9"/><text x="1.8989%" y="623.50"></text></g><g><title>HIToolbox`HIApplication::HandleActivated (9 samples, 0.03%)</title><rect x="1.6489%" y="597" width="0.0287%" height="15" fill="rgb(216,193,19)" fg:x="517" fg:w="9"/><text x="1.8989%" y="607.50"></text></g><g><title>HIToolbox`SetMenuBarObscured (9 samples, 0.03%)</title><rect x="1.6489%" y="581" width="0.0287%" height="15" fill="rgb(216,135,14)" fg:x="517" fg:w="9"/><text x="1.8989%" y="591.50"></text></g><g><title>HIToolbox`MenuBarInstance::Show (9 samples, 0.03%)</title><rect x="1.6489%" y="565" width="0.0287%" height="15" fill="rgb(241,47,5)" fg:x="517" fg:w="9"/><text x="1.8989%" y="575.50"></text></g><g><title>HIToolbox`MenuBarInstance::SetBoundsAndUpdateResolution (9 samples, 0.03%)</title><rect x="1.6489%" y="549" width="0.0287%" height="15" fill="rgb(233,42,35)" fg:x="517" fg:w="9"/><text x="1.8989%" y="559.50"></text></g><g><title>HIToolbox`MenuBarInstance::ForEachWindowDo(unsigned char, bool  (9 samples, 0.03%)</title><rect x="1.6489%" y="533" width="0.0287%" height="15" fill="rgb(231,13,6)" fg:x="517" fg:w="9"/><text x="1.8989%" y="543.50"></text></g><g><title>HIToolbox`MBWindows::GetWindowOnDisplay (9 samples, 0.03%)</title><rect x="1.6489%" y="517" width="0.0287%" height="15" fill="rgb(207,181,40)" fg:x="517" fg:w="9"/><text x="1.8989%" y="527.50"></text></g><g><title>HIToolbox`ShowHide (7 samples, 0.02%)</title><rect x="1.6552%" y="501" width="0.0223%" height="15" fill="rgb(254,173,49)" fg:x="519" fg:w="7"/><text x="1.9052%" y="511.50"></text></g><g><title>HIToolbox`_ShowHideWindows (7 samples, 0.02%)</title><rect x="1.6552%" y="485" width="0.0223%" height="15" fill="rgb(221,1,38)" fg:x="519" fg:w="7"/><text x="1.9052%" y="495.50"></text></g><g><title>HIToolbox`WindowData::PrepareForVisibility (7 samples, 0.02%)</title><rect x="1.6552%" y="469" width="0.0223%" height="15" fill="rgb(206,124,46)" fg:x="519" fg:w="7"/><text x="1.9052%" y="479.50"></text></g><g><title>HIToolbox`HIView::Render (7 samples, 0.02%)</title><rect x="1.6552%" y="453" width="0.0223%" height="15" fill="rgb(249,21,11)" fg:x="519" fg:w="7"/><text x="1.9052%" y="463.50"></text></g><g><title>HIToolbox`HIView::DrawComposited (7 samples, 0.02%)</title><rect x="1.6552%" y="437" width="0.0223%" height="15" fill="rgb(222,201,40)" fg:x="519" fg:w="7"/><text x="1.9052%" y="447.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (7 samples, 0.02%)</title><rect x="1.6552%" y="421" width="0.0223%" height="15" fill="rgb(235,61,29)" fg:x="519" fg:w="7"/><text x="1.9052%" y="431.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (7 samples, 0.02%)</title><rect x="1.6552%" y="405" width="0.0223%" height="15" fill="rgb(219,207,3)" fg:x="519" fg:w="7"/><text x="1.9052%" y="415.50"></text></g><g><title>HIToolbox`HIView::SendDraw (7 samples, 0.02%)</title><rect x="1.6552%" y="389" width="0.0223%" height="15" fill="rgb(222,56,46)" fg:x="519" fg:w="7"/><text x="1.9052%" y="399.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (7 samples, 0.02%)</title><rect x="1.6552%" y="373" width="0.0223%" height="15" fill="rgb(239,76,54)" fg:x="519" fg:w="7"/><text x="1.9052%" y="383.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (7 samples, 0.02%)</title><rect x="1.6552%" y="357" width="0.0223%" height="15" fill="rgb(231,124,27)" fg:x="519" fg:w="7"/><text x="1.9052%" y="367.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (7 samples, 0.02%)</title><rect x="1.6552%" y="341" width="0.0223%" height="15" fill="rgb(249,195,6)" fg:x="519" fg:w="7"/><text x="1.9052%" y="351.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawingDelegateHandler (7 samples, 0.02%)</title><rect x="1.6552%" y="325" width="0.0223%" height="15" fill="rgb(237,174,47)" fg:x="519" fg:w="7"/><text x="1.9052%" y="335.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawSelf (7 samples, 0.02%)</title><rect x="1.6552%" y="309" width="0.0223%" height="15" fill="rgb(206,201,31)" fg:x="519" fg:w="7"/><text x="1.9052%" y="319.50"></text></g><g><title>HIToolbox`AcquireEventFromQueue (11 samples, 0.04%)</title><rect x="1.6457%" y="645" width="0.0351%" height="15" fill="rgb(231,57,52)" fg:x="516" fg:w="11"/><text x="1.8957%" y="655.50"></text></g><g><title>QuartzCore`CA::Render::Encoder::send_message (6 samples, 0.02%)</title><rect x="1.7031%" y="533" width="0.0191%" height="15" fill="rgb(248,177,22)" fg:x="534" fg:w="6"/><text x="1.9531%" y="543.50"></text></g><g><title>QuartzCore`CA::Render::Message::send_message (6 samples, 0.02%)</title><rect x="1.7031%" y="517" width="0.0191%" height="15" fill="rgb(215,211,37)" fg:x="534" fg:w="6"/><text x="1.9531%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (5 samples, 0.02%)</title><rect x="1.7063%" y="501" width="0.0159%" height="15" fill="rgb(241,128,51)" fg:x="535" fg:w="5"/><text x="1.9563%" y="511.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (11 samples, 0.04%)</title><rect x="1.7031%" y="549" width="0.0351%" height="15" fill="rgb(227,165,31)" fg:x="534" fg:w="11"/><text x="1.9531%" y="559.50"></text></g><g><title>QuartzCore`CA::Transaction::flush_as_runloop_observer (13 samples, 0.04%)</title><rect x="1.7031%" y="581" width="0.0415%" height="15" fill="rgb(228,167,24)" fg:x="534" fg:w="13"/><text x="1.9531%" y="591.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (13 samples, 0.04%)</title><rect x="1.7031%" y="565" width="0.0415%" height="15" fill="rgb(228,143,12)" fg:x="534" fg:w="13"/><text x="1.9531%" y="575.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (15 samples, 0.05%)</title><rect x="1.7031%" y="597" width="0.0478%" height="15" fill="rgb(249,149,8)" fg:x="534" fg:w="15"/><text x="1.9531%" y="607.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (19 samples, 0.06%)</title><rect x="1.7031%" y="613" width="0.0606%" height="15" fill="rgb(243,35,44)" fg:x="534" fg:w="19"/><text x="1.9531%" y="623.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__ (8 samples, 0.03%)</title><rect x="1.7828%" y="597" width="0.0255%" height="15" fill="rgb(246,89,9)" fg:x="559" fg:w="8"/><text x="2.0328%" y="607.50"></text></g><g><title>libdispatch.dylib`_dispatch_main_queue_callback_4CF (8 samples, 0.03%)</title><rect x="1.7828%" y="581" width="0.0255%" height="15" fill="rgb(233,213,13)" fg:x="559" fg:w="8"/><text x="2.0328%" y="591.50"></text></g><g><title>libdispatch.dylib`_dispatch_main_queue_drain (8 samples, 0.03%)</title><rect x="1.7828%" y="565" width="0.0255%" height="15" fill="rgb(233,141,41)" fg:x="559" fg:w="8"/><text x="2.0328%" y="575.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (4 samples, 0.01%)</title><rect x="1.7956%" y="549" width="0.0128%" height="15" fill="rgb(239,167,4)" fg:x="563" fg:w="4"/><text x="2.0456%" y="559.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_BLOCK__ (9 samples, 0.03%)</title><rect x="1.8083%" y="581" width="0.0287%" height="15" fill="rgb(209,217,16)" fg:x="567" fg:w="9"/><text x="2.0583%" y="591.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoBlocks (11 samples, 0.04%)</title><rect x="1.8083%" y="597" width="0.0351%" height="15" fill="rgb(219,88,35)" fg:x="567" fg:w="11"/><text x="2.0583%" y="607.50"></text></g><g><title>AppKit`+[NSTextInputContext currentInputContext_withFirstResponderSync:] (4 samples, 0.01%)</title><rect x="1.8657%" y="517" width="0.0128%" height="15" fill="rgb(220,193,23)" fg:x="585" fg:w="4"/><text x="2.1157%" y="527.50"></text></g><g><title>AppKit`-[NSApplication(NSWindowCache) _updateWindowsUsingCache] (4 samples, 0.01%)</title><rect x="1.8785%" y="517" width="0.0128%" height="15" fill="rgb(230,90,52)" fg:x="589" fg:w="4"/><text x="2.1285%" y="527.50"></text></g><g><title>CoreFoundation`-[NSArray makeObjectsPerformSelector:] (4 samples, 0.01%)</title><rect x="1.8785%" y="501" width="0.0128%" height="15" fill="rgb(252,106,19)" fg:x="589" fg:w="4"/><text x="2.1285%" y="511.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (8 samples, 0.03%)</title><rect x="1.9008%" y="517" width="0.0255%" height="15" fill="rgb(206,74,20)" fg:x="596" fg:w="8"/><text x="2.1508%" y="527.50"></text></g><g><title>AppKit`-[NSApplication updateWindows] (21 samples, 0.07%)</title><rect x="1.8657%" y="533" width="0.0670%" height="15" fill="rgb(230,138,44)" fg:x="585" fg:w="21"/><text x="2.1157%" y="543.50"></text></g><g><title>AppKit`__38-[NSApplication setWindowsNeedUpdate:]_block_invoke_2 (26 samples, 0.08%)</title><rect x="1.8657%" y="549" width="0.0829%" height="15" fill="rgb(235,182,43)" fg:x="585" fg:w="26"/><text x="2.1157%" y="559.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.01%)</title><rect x="1.9359%" y="533" width="0.0128%" height="15" fill="rgb(242,16,51)" fg:x="607" fg:w="4"/><text x="2.1859%" y="543.50"></text></g><g><title>AppKit`+[NSDisplayTiming(NSDisplayTimingCreation) displayTimingsForActiveScreens] (5 samples, 0.02%)</title><rect x="1.9518%" y="533" width="0.0159%" height="15" fill="rgb(248,9,4)" fg:x="612" fg:w="5"/><text x="2.2018%" y="543.50"></text></g><g><title>CoreFoundation`CFRunLoopCopyAllModes (6 samples, 0.02%)</title><rect x="1.9742%" y="517" width="0.0191%" height="15" fill="rgb(210,31,22)" fg:x="619" fg:w="6"/><text x="2.2242%" y="527.50"></text></g><g><title>CoreFoundation`CFSetApplyFunction (5 samples, 0.02%)</title><rect x="1.9774%" y="501" width="0.0159%" height="15" fill="rgb(239,54,39)" fg:x="620" fg:w="5"/><text x="2.2274%" y="511.50"></text></g><g><title>CoreFoundation`CFBasicHashApply (5 samples, 0.02%)</title><rect x="1.9774%" y="485" width="0.0159%" height="15" fill="rgb(230,99,41)" fg:x="620" fg:w="5"/><text x="2.2274%" y="495.50"></text></g><g><title>CoreFoundation`CFRunLoopRemoveObserver (9 samples, 0.03%)</title><rect x="1.9933%" y="517" width="0.0287%" height="15" fill="rgb(253,106,12)" fg:x="625" fg:w="9"/><text x="2.2433%" y="527.50"></text></g><g><title>CoreFoundation`CFRunLoopObserverInvalidate (22 samples, 0.07%)</title><rect x="1.9678%" y="533" width="0.0702%" height="15" fill="rgb(213,46,41)" fg:x="617" fg:w="22"/><text x="2.2178%" y="543.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (5 samples, 0.02%)</title><rect x="2.0220%" y="517" width="0.0159%" height="15" fill="rgb(215,133,35)" fg:x="634" fg:w="5"/><text x="2.2720%" y="527.50"></text></g><g><title>AppKit`-[NSControl updateLayer] (4 samples, 0.01%)</title><rect x="2.0698%" y="405" width="0.0128%" height="15" fill="rgb(213,28,5)" fg:x="649" fg:w="4"/><text x="2.3198%" y="415.50"></text></g><g><title>AppKit`-[_NSThemeWidgetCell updateLayerWithFrame:inView:] (4 samples, 0.01%)</title><rect x="2.0698%" y="389" width="0.0128%" height="15" fill="rgb(215,77,49)" fg:x="649" fg:w="4"/><text x="2.3198%" y="399.50"></text></g><g><title>AppKit`-[NSLayerContentsProvider facetForIdentifier:scale:colorSpace:drawingRect:flipped:appearanceIdentifier:drawHandler:] (4 samples, 0.01%)</title><rect x="2.0698%" y="373" width="0.0128%" height="15" fill="rgb(248,100,22)" fg:x="649" fg:w="4"/><text x="2.3198%" y="383.50"></text></g><g><title>QuartzCore`CA::Layer::display_if_needed (8 samples, 0.03%)</title><rect x="2.0603%" y="501" width="0.0255%" height="15" fill="rgb(208,67,9)" fg:x="646" fg:w="8"/><text x="2.3103%" y="511.50"></text></g><g><title>AppKit`-[_NSViewBackingLayer display] (6 samples, 0.02%)</title><rect x="2.0667%" y="485" width="0.0191%" height="15" fill="rgb(219,133,21)" fg:x="648" fg:w="6"/><text x="2.3167%" y="495.50"></text></g><g><title>AppKit`-[NSFocusStack performWithFocusView:inWindow:usingBlock:] (6 samples, 0.02%)</title><rect x="2.0667%" y="469" width="0.0191%" height="15" fill="rgb(246,46,29)" fg:x="648" fg:w="6"/><text x="2.3167%" y="479.50"></text></g><g><title>AppKit`__30-[_NSViewBackingLayer display]_block_invoke (5 samples, 0.02%)</title><rect x="2.0698%" y="453" width="0.0159%" height="15" fill="rgb(246,185,52)" fg:x="649" fg:w="5"/><text x="2.3198%" y="463.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (5 samples, 0.02%)</title><rect x="2.0698%" y="437" width="0.0159%" height="15" fill="rgb(252,136,11)" fg:x="649" fg:w="5"/><text x="2.3198%" y="447.50"></text></g><g><title>AppKit`_NSViewUpdateLayer (5 samples, 0.02%)</title><rect x="2.0698%" y="421" width="0.0159%" height="15" fill="rgb(219,138,53)" fg:x="649" fg:w="5"/><text x="2.3198%" y="431.50"></text></g><g><title>QuartzCore`CA::Render::Encoder::send_message (20 samples, 0.06%)</title><rect x="2.0890%" y="501" width="0.0638%" height="15" fill="rgb(211,51,23)" fg:x="655" fg:w="20"/><text x="2.3390%" y="511.50"></text></g><g><title>QuartzCore`CA::Render::Message::send_message (20 samples, 0.06%)</title><rect x="2.0890%" y="485" width="0.0638%" height="15" fill="rgb(247,221,28)" fg:x="655" fg:w="20"/><text x="2.3390%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (20 samples, 0.06%)</title><rect x="2.0890%" y="469" width="0.0638%" height="15" fill="rgb(251,222,45)" fg:x="655" fg:w="20"/><text x="2.3390%" y="479.50"></text></g><g><title>QuartzCore`CA::Transaction::run_commit_handlers (5 samples, 0.02%)</title><rect x="2.1528%" y="501" width="0.0159%" height="15" fill="rgb(217,162,53)" fg:x="675" fg:w="5"/><text x="2.4028%" y="511.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (4 samples, 0.01%)</title><rect x="2.1560%" y="485" width="0.0128%" height="15" fill="rgb(229,93,14)" fg:x="676" fg:w="4"/><text x="2.4060%" y="495.50"></text></g><g><title>AppKit`-[NSDisplayCycle dealloc] (4 samples, 0.01%)</title><rect x="2.1560%" y="469" width="0.0128%" height="15" fill="rgb(209,67,49)" fg:x="676" fg:w="4"/><text x="2.4060%" y="479.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (7 samples, 0.02%)</title><rect x="2.1783%" y="501" width="0.0223%" height="15" fill="rgb(213,87,29)" fg:x="683" fg:w="7"/><text x="2.4283%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (6 samples, 0.02%)</title><rect x="2.1815%" y="485" width="0.0191%" height="15" fill="rgb(205,151,52)" fg:x="684" fg:w="6"/><text x="2.4315%" y="495.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (54 samples, 0.17%)</title><rect x="2.0411%" y="517" width="0.1722%" height="15" fill="rgb(253,215,39)" fg:x="640" fg:w="54"/><text x="2.2911%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (4 samples, 0.01%)</title><rect x="2.2006%" y="501" width="0.0128%" height="15" fill="rgb(221,220,41)" fg:x="690" fg:w="4"/><text x="2.4506%" y="511.50"></text></g><g><title>Foundation`-[NSPointerArray(NSArrayConveniences) allObjects] (4 samples, 0.01%)</title><rect x="2.2229%" y="469" width="0.0128%" height="15" fill="rgb(218,133,21)" fg:x="697" fg:w="4"/><text x="2.4729%" y="479.50"></text></g><g><title>AppKit`-[NSDisplayCyclePhaseCollection orderedPhases] (7 samples, 0.02%)</title><rect x="2.2197%" y="485" width="0.0223%" height="15" fill="rgb(221,193,43)" fg:x="696" fg:w="7"/><text x="2.4697%" y="495.50"></text></g><g><title>AppKit`_CFXNotificationRegistrarRemoveNames (4 samples, 0.01%)</title><rect x="2.2867%" y="373" width="0.0128%" height="15" fill="rgb(240,128,52)" fg:x="717" fg:w="4"/><text x="2.5367%" y="383.50"></text></g><g><title>AppKit`CFXNotificationRegistrarRemove (7 samples, 0.02%)</title><rect x="2.2835%" y="389" width="0.0223%" height="15" fill="rgb(253,114,12)" fg:x="716" fg:w="7"/><text x="2.5335%" y="399.50"></text></g><g><title>Foundation`-[NSConcreteMapTable removeObjectForKey:] (5 samples, 0.02%)</title><rect x="2.3122%" y="373" width="0.0159%" height="15" fill="rgb(215,223,47)" fg:x="725" fg:w="5"/><text x="2.5622%" y="383.50"></text></g><g><title>SkyLight`SLSRemoveStructuralRegion (8 samples, 0.03%)</title><rect x="2.3409%" y="373" width="0.0255%" height="15" fill="rgb(248,225,23)" fg:x="734" fg:w="8"/><text x="2.5909%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (6 samples, 0.02%)</title><rect x="2.3473%" y="357" width="0.0191%" height="15" fill="rgb(250,108,0)" fg:x="736" fg:w="6"/><text x="2.5973%" y="367.50"></text></g><g><title>AppKit`_NXDiscardCursorRect (19 samples, 0.06%)</title><rect x="2.3122%" y="389" width="0.0606%" height="15" fill="rgb(228,208,7)" fg:x="725" fg:w="19"/><text x="2.5622%" y="399.50"></text></g><g><title>AppKit`-[NSWindow(NSCursorRects) _discardCursorRectsForView:] (30 samples, 0.10%)</title><rect x="2.2835%" y="405" width="0.0957%" height="15" fill="rgb(244,45,10)" fg:x="716" fg:w="30"/><text x="2.5335%" y="415.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (10 samples, 0.03%)</title><rect x="2.3856%" y="405" width="0.0319%" height="15" fill="rgb(207,125,25)" fg:x="748" fg:w="10"/><text x="2.6356%" y="415.50"></text></g><g><title>AppKit`-[NSWindow _titlebarContainerView] (4 samples, 0.01%)</title><rect x="2.4334%" y="357" width="0.0128%" height="15" fill="rgb(210,195,18)" fg:x="763" fg:w="4"/><text x="2.6834%" y="367.50"></text></g><g><title>AppKit`-[NSWindow contentLayoutRect] (4 samples, 0.01%)</title><rect x="2.4462%" y="357" width="0.0128%" height="15" fill="rgb(249,80,12)" fg:x="767" fg:w="4"/><text x="2.6962%" y="367.50"></text></g><g><title>AppKit`-[NSWindow _layerHostedContext] (4 samples, 0.01%)</title><rect x="2.4845%" y="341" width="0.0128%" height="15" fill="rgb(221,65,9)" fg:x="779" fg:w="4"/><text x="2.7345%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_allocate_trap (10 samples, 0.03%)</title><rect x="2.5195%" y="261" width="0.0319%" height="15" fill="rgb(235,49,36)" fg:x="790" fg:w="10"/><text x="2.7695%" y="271.50"></text></g><g><title>SkyLight`SLSCopyRegionSerializedBytes (30 samples, 0.10%)</title><rect x="2.5100%" y="277" width="0.0957%" height="15" fill="rgb(225,32,20)" fg:x="787" fg:w="30"/><text x="2.7600%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (17 samples, 0.05%)</title><rect x="2.5514%" y="261" width="0.0542%" height="15" fill="rgb(215,141,46)" fg:x="800" fg:w="17"/><text x="2.8014%" y="271.50"></text></g><g><title>SkyLight`add_structural_region_of_type (42 samples, 0.13%)</title><rect x="2.5100%" y="325" width="0.1339%" height="15" fill="rgb(250,160,47)" fg:x="787" fg:w="42"/><text x="2.7600%" y="335.50"></text></g><g><title>SkyLight`add_structural_region (42 samples, 0.13%)</title><rect x="2.5100%" y="309" width="0.1339%" height="15" fill="rgb(216,222,40)" fg:x="787" fg:w="42"/><text x="2.7600%" y="319.50"></text></g><g><title>SkyLight`SLSRegionPerformWithSerializedBytes (42 samples, 0.13%)</title><rect x="2.5100%" y="293" width="0.1339%" height="15" fill="rgb(234,217,39)" fg:x="787" fg:w="42"/><text x="2.7600%" y="303.50"></text></g><g><title>SkyLight`__add_structural_region_block_invoke (12 samples, 0.04%)</title><rect x="2.6056%" y="277" width="0.0383%" height="15" fill="rgb(207,178,40)" fg:x="817" fg:w="12"/><text x="2.8556%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (12 samples, 0.04%)</title><rect x="2.6056%" y="261" width="0.0383%" height="15" fill="rgb(221,136,13)" fg:x="817" fg:w="12"/><text x="2.8556%" y="271.50"></text></g><g><title>AppKit`_NXSetCursorRect (46 samples, 0.15%)</title><rect x="2.5004%" y="341" width="0.1467%" height="15" fill="rgb(249,199,10)" fg:x="784" fg:w="46"/><text x="2.7504%" y="351.50"></text></g><g><title>AppKit`_NSSetWindowCursorRect (59 samples, 0.19%)</title><rect x="2.4685%" y="357" width="0.1882%" height="15" fill="rgb(249,222,13)" fg:x="774" fg:w="59"/><text x="2.7185%" y="367.50"></text></g><g><title>AppKit`-[NSWindow(NSCursorRects) _addCursorRect:cursor:forView:] (77 samples, 0.25%)</title><rect x="2.4207%" y="373" width="0.2456%" height="15" fill="rgb(244,185,38)" fg:x="759" fg:w="77"/><text x="2.6707%" y="383.50"></text></g><g><title>AppKit`-[NSView addCursorRect:cursor:] (78 samples, 0.25%)</title><rect x="2.4207%" y="389" width="0.2488%" height="15" fill="rgb(236,202,9)" fg:x="759" fg:w="78"/><text x="2.6707%" y="399.50"></text></g><g><title>libobjc.A.dylib`_class_getVariable (4 samples, 0.01%)</title><rect x="2.6758%" y="357" width="0.0128%" height="15" fill="rgb(250,229,37)" fg:x="839" fg:w="4"/><text x="2.9258%" y="367.50"></text></g><g><title>libobjc.A.dylib`getIvar(objc_class*, char const*) (4 samples, 0.01%)</title><rect x="2.6758%" y="341" width="0.0128%" height="15" fill="rgb(206,174,23)" fg:x="839" fg:w="4"/><text x="2.9258%" y="351.50"></text></g><g><title>meg`objc::runtime::Object::get_ivar (6 samples, 0.02%)</title><rect x="2.6726%" y="389" width="0.0191%" height="15" fill="rgb(211,33,43)" fg:x="838" fg:w="6"/><text x="2.9226%" y="399.50"></text></g><g><title>meg`objc::runtime::Class::instance_variable (5 samples, 0.02%)</title><rect x="2.6758%" y="373" width="0.0159%" height="15" fill="rgb(245,58,50)" fg:x="839" fg:w="5"/><text x="2.9258%" y="383.50"></text></g><g><title>AppKit`-[NSView _updateTrackingAreasWithInvalidCursorRects:] (133 samples, 0.42%)</title><rect x="2.2708%" y="421" width="0.4242%" height="15" fill="rgb(244,68,36)" fg:x="712" fg:w="133"/><text x="2.5208%" y="431.50"></text></g><g><title>meg`winit::platform_impl::platform::view::reset_cursor_rects (86 samples, 0.27%)</title><rect x="2.4207%" y="405" width="0.2743%" height="15" fill="rgb(232,229,15)" fg:x="759" fg:w="86"/><text x="2.6707%" y="415.50"></text></g><g><title>AppKit`-[NSView _updateTrackingAreasWithInvalidCursorRects:] (139 samples, 0.44%)</title><rect x="2.2644%" y="437" width="0.4433%" height="15" fill="rgb(254,30,23)" fg:x="710" fg:w="139"/><text x="2.5144%" y="447.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences copyAppValueForKey:identifier:container:configurationURL:] (10 samples, 0.03%)</title><rect x="2.7077%" y="341" width="0.0319%" height="15" fill="rgb(235,160,14)" fg:x="849" fg:w="10"/><text x="2.9577%" y="351.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences withSearchListForIdentifier:container:cloudConfigurationURL:perform:] (10 samples, 0.03%)</title><rect x="2.7077%" y="325" width="0.0319%" height="15" fill="rgb(212,155,44)" fg:x="849" fg:w="10"/><text x="2.9577%" y="335.50"></text></g><g><title>CoreFoundation`__108-[_CFXPreferences(SearchListAdditions) withSearchListForIdentifier:container:cloudConfigurationURL:perform:]_block_invoke (7 samples, 0.02%)</title><rect x="2.7173%" y="309" width="0.0223%" height="15" fill="rgb(226,2,50)" fg:x="852" fg:w="7"/><text x="2.9673%" y="319.50"></text></g><g><title>CoreFoundation`__76-[_CFXPreferences copyAppValueForKey:identifier:container:configurationURL:]_block_invoke (5 samples, 0.02%)</title><rect x="2.7236%" y="293" width="0.0159%" height="15" fill="rgb(234,177,6)" fg:x="854" fg:w="5"/><text x="2.9736%" y="303.50"></text></g><g><title>CoreFoundation`-[CFPrefsSource copyValueForKey:] (5 samples, 0.02%)</title><rect x="2.7236%" y="277" width="0.0159%" height="15" fill="rgb(217,24,9)" fg:x="854" fg:w="5"/><text x="2.9736%" y="287.50"></text></g><g><title>CoreFoundation`-[CFPrefsSearchListSource alreadylocked_copyValueForKey:] (5 samples, 0.02%)</title><rect x="2.7236%" y="261" width="0.0159%" height="15" fill="rgb(220,13,46)" fg:x="854" fg:w="5"/><text x="2.9736%" y="271.50"></text></g><g><title>CoreFoundation`-[_CFXPreferencesHandle copyPrefs] (5 samples, 0.02%)</title><rect x="2.7396%" y="341" width="0.0159%" height="15" fill="rgb(239,221,27)" fg:x="859" fg:w="5"/><text x="2.9896%" y="351.50"></text></g><g><title>CoreFoundation`_CFGetEUID (5 samples, 0.02%)</title><rect x="2.7396%" y="325" width="0.0159%" height="15" fill="rgb(222,198,25)" fg:x="859" fg:w="5"/><text x="2.9896%" y="335.50"></text></g><g><title>CoreFoundation`__CFGetUGIDs (5 samples, 0.02%)</title><rect x="2.7396%" y="309" width="0.0159%" height="15" fill="rgb(211,99,13)" fg:x="859" fg:w="5"/><text x="2.9896%" y="319.50"></text></g><g><title>AppKit`-[NSCursor _reallySet] (16 samples, 0.05%)</title><rect x="2.7077%" y="405" width="0.0510%" height="15" fill="rgb(232,111,31)" fg:x="849" fg:w="16"/><text x="2.9577%" y="415.50"></text></g><g><title>HIServices`_AXInterfaceCursorIsOverridden (16 samples, 0.05%)</title><rect x="2.7077%" y="389" width="0.0510%" height="15" fill="rgb(245,82,37)" fg:x="849" fg:w="16"/><text x="2.9577%" y="399.50"></text></g><g><title>CoreFoundation`_CFPreferencesGetAppBooleanValueWithContainer (16 samples, 0.05%)</title><rect x="2.7077%" y="373" width="0.0510%" height="15" fill="rgb(227,149,46)" fg:x="849" fg:w="16"/><text x="2.9577%" y="383.50"></text></g><g><title>CoreFoundation`_CFPreferencesCopyAppValueWithContainerAndConfiguration (16 samples, 0.05%)</title><rect x="2.7077%" y="357" width="0.0510%" height="15" fill="rgb(218,36,50)" fg:x="849" fg:w="16"/><text x="2.9577%" y="367.50"></text></g><g><title>AppKit`-[NSCursor set] (18 samples, 0.06%)</title><rect x="2.7077%" y="421" width="0.0574%" height="15" fill="rgb(226,80,48)" fg:x="849" fg:w="18"/><text x="2.9577%" y="431.50"></text></g><g><title>AppKit`-[NSView hitTest:] (7 samples, 0.02%)</title><rect x="2.7651%" y="405" width="0.0223%" height="15" fill="rgb(238,224,15)" fg:x="867" fg:w="7"/><text x="3.0151%" y="415.50"></text></g><g><title>AppKit`-[NSThemeFrame _hitTest:ignoringResizeRegion:] (8 samples, 0.03%)</title><rect x="2.7651%" y="421" width="0.0255%" height="15" fill="rgb(241,136,10)" fg:x="867" fg:w="8"/><text x="3.0151%" y="431.50"></text></g><g><title>AppKit`-[NSScreen _layoutMenuBarHeight] (4 samples, 0.01%)</title><rect x="2.8066%" y="357" width="0.0128%" height="15" fill="rgb(208,32,45)" fg:x="880" fg:w="4"/><text x="3.0566%" y="367.50"></text></g><g><title>CoreFoundation`CFUUIDCreateFromString (4 samples, 0.01%)</title><rect x="2.8289%" y="309" width="0.0128%" height="15" fill="rgb(207,135,9)" fg:x="887" fg:w="4"/><text x="3.0789%" y="319.50"></text></g><g><title>AppKit`_NSScreenFrameByAdjustingFrameForDaisy (10 samples, 0.03%)</title><rect x="2.8193%" y="357" width="0.0319%" height="15" fill="rgb(206,86,44)" fg:x="884" fg:w="10"/><text x="3.0693%" y="367.50"></text></g><g><title>AppKit`-[NSScreen _daisyFrame] (9 samples, 0.03%)</title><rect x="2.8225%" y="341" width="0.0287%" height="15" fill="rgb(245,177,15)" fg:x="885" fg:w="9"/><text x="3.0725%" y="351.50"></text></g><g><title>SkyLight`SLSManagedDisplayGetCurrentSpace (8 samples, 0.03%)</title><rect x="2.8257%" y="325" width="0.0255%" height="15" fill="rgb(206,64,50)" fg:x="886" fg:w="8"/><text x="3.0757%" y="335.50"></text></g><g><title>AppKit`-[NSScreen visibleFrame] (16 samples, 0.05%)</title><rect x="2.8066%" y="389" width="0.0510%" height="15" fill="rgb(234,36,40)" fg:x="880" fg:w="16"/><text x="3.0566%" y="399.50"></text></g><g><title>AppKit`-[NSScreen _layoutFrame] (16 samples, 0.05%)</title><rect x="2.8066%" y="373" width="0.0510%" height="15" fill="rgb(213,64,8)" fg:x="880" fg:w="16"/><text x="3.0566%" y="383.50"></text></g><g><title>AppKit`-[NSWindow(NSWindowResizing) _getEdgeResizingRects:allowedEdges:] (4 samples, 0.01%)</title><rect x="2.8608%" y="389" width="0.0128%" height="15" fill="rgb(210,75,36)" fg:x="897" fg:w="4"/><text x="3.1108%" y="399.50"></text></g><g><title>AppKit`-[NSWindow(NSWindowResizing) _resizeDirectionForMouseLocation:] (23 samples, 0.07%)</title><rect x="2.8034%" y="405" width="0.0734%" height="15" fill="rgb(229,88,21)" fg:x="879" fg:w="23"/><text x="3.0534%" y="415.50"></text></g><g><title>AppKit`-[NSWindow(NSWindowResizing) _edgeResizingCursorUpdate:atLocation:] (27 samples, 0.09%)</title><rect x="2.7970%" y="421" width="0.0861%" height="15" fill="rgb(252,204,47)" fg:x="877" fg:w="27"/><text x="3.0470%" y="431.50"></text></g><g><title>AppKit`-[NSWindow(NSCursorRects) _setCursorForMouseLocation:] (56 samples, 0.18%)</title><rect x="2.7077%" y="437" width="0.1786%" height="15" fill="rgb(208,77,27)" fg:x="849" fg:w="56"/><text x="2.9577%" y="447.50"></text></g><g><title>AppKit`_NSCurrentMouseLocationInWindow (5 samples, 0.02%)</title><rect x="2.8895%" y="437" width="0.0159%" height="15" fill="rgb(221,76,26)" fg:x="906" fg:w="5"/><text x="3.1395%" y="447.50"></text></g><g><title>AppKit`_NSWindowDisplayCycleUpdateStructuralRegions (203 samples, 0.65%)</title><rect x="2.2644%" y="453" width="0.6474%" height="15" fill="rgb(225,139,18)" fg:x="710" fg:w="203"/><text x="2.5144%" y="463.50"></text></g><g><title>AppKit`__NSWindowGetDisplayCycleObserverForUpdateStructuralRegions_block_invoke (212 samples, 0.68%)</title><rect x="2.2516%" y="469" width="0.6761%" height="15" fill="rgb(230,137,11)" fg:x="706" fg:w="212"/><text x="2.5016%" y="479.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.01%)</title><rect x="2.9150%" y="453" width="0.0128%" height="15" fill="rgb(212,28,1)" fg:x="914" fg:w="4"/><text x="3.1650%" y="463.50"></text></g><g><title>AppKit`NSDisplayCycleObserverInvoke (218 samples, 0.70%)</title><rect x="2.2421%" y="485" width="0.6953%" height="15" fill="rgb(248,164,17)" fg:x="703" fg:w="218"/><text x="2.4921%" y="495.50"></text></g><g><title>AppKit`NSDisplayCycleFlush (230 samples, 0.73%)</title><rect x="2.2197%" y="501" width="0.7335%" height="15" fill="rgb(222,171,42)" fg:x="696" fg:w="230"/><text x="2.4697%" y="511.50"></text></g><g><title>QuartzCore`CA::Transaction::run_commit_handlers (234 samples, 0.75%)</title><rect x="2.2197%" y="517" width="0.7463%" height="15" fill="rgb(243,84,45)" fg:x="696" fg:w="234"/><text x="2.4697%" y="527.50"></text></g><g><title>libsystem_trace.dylib`_os_signpost_emit_unreliably_with_name_impl (4 samples, 0.01%)</title><rect x="2.9820%" y="517" width="0.0128%" height="15" fill="rgb(252,49,23)" fg:x="935" fg:w="4"/><text x="3.2320%" y="527.50"></text></g><g><title>libsystem_trace.dylib`__os_signpost_emit_impl (4 samples, 0.01%)</title><rect x="2.9820%" y="501" width="0.0128%" height="15" fill="rgb(215,19,7)" fg:x="935" fg:w="4"/><text x="3.2320%" y="511.50"></text></g><g><title>libsystem_trace.dylib`_os_log_impl_flatten_and_send (4 samples, 0.01%)</title><rect x="2.9820%" y="485" width="0.0128%" height="15" fill="rgb(238,81,41)" fg:x="935" fg:w="4"/><text x="3.2320%" y="495.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (301 samples, 0.96%)</title><rect x="2.0411%" y="533" width="0.9600%" height="15" fill="rgb(210,199,37)" fg:x="640" fg:w="301"/><text x="2.2911%" y="543.50"></text></g><g><title>AppKit`__62+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink]_block_invoke (333 samples, 1.06%)</title><rect x="1.9487%" y="549" width="1.0620%" height="15" fill="rgb(244,192,49)" fg:x="611" fg:w="333"/><text x="2.1987%" y="559.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (362 samples, 1.15%)</title><rect x="1.8657%" y="565" width="1.1545%" height="15" fill="rgb(226,211,11)" fg:x="585" fg:w="362"/><text x="2.1157%" y="575.50"></text></g><g><title>meg`&lt;kintaro::op_stream::OpReceiver as kintaro::op_stream::GetOps&gt;::receive (7 samples, 0.02%)</title><rect x="3.1127%" y="453" width="0.0223%" height="15" fill="rgb(236,162,54)" fg:x="976" fg:w="7"/><text x="3.3627%" y="463.50"></text></g><g><title>meg`opmap::OpMap&lt;T&gt;::join (6 samples, 0.02%)</title><rect x="3.1159%" y="437" width="0.0191%" height="15" fill="rgb(220,229,9)" fg:x="977" fg:w="6"/><text x="3.3659%" y="447.50"></text></g><g><title>meg`&lt;wgpu_hal::metal::Queue as wgpu_hal::Queue&lt;wgpu_hal::metal::Api&gt;&gt;::submit (5 samples, 0.02%)</title><rect x="3.1701%" y="421" width="0.0159%" height="15" fill="rgb(250,87,22)" fg:x="994" fg:w="5"/><text x="3.4201%" y="431.50"></text></g><g><title>meg`objc::rc::autorelease::autoreleasepool (5 samples, 0.02%)</title><rect x="3.1701%" y="405" width="0.0159%" height="15" fill="rgb(239,43,17)" fg:x="994" fg:w="5"/><text x="3.4201%" y="415.50"></text></g><g><title>meg`wgpu_core::command::memory_init::_&lt;impl wgpu_core::command::BakedCommands&lt;A&gt;&gt;::initialize_texture_memory (4 samples, 0.01%)</title><rect x="3.2020%" y="421" width="0.0128%" height="15" fill="rgb(231,177,25)" fg:x="1004" fg:w="4"/><text x="3.4520%" y="431.50"></text></g><g><title>CoreFoundation`_CFRelease (4 samples, 0.01%)</title><rect x="3.2276%" y="357" width="0.0128%" height="15" fill="rgb(219,179,1)" fg:x="1012" fg:w="4"/><text x="3.4776%" y="367.50"></text></g><g><title>IOAccelerator`ioAccelResourceFinalize (4 samples, 0.01%)</title><rect x="3.2276%" y="341" width="0.0128%" height="15" fill="rgb(238,219,53)" fg:x="1012" fg:w="4"/><text x="3.4776%" y="351.50"></text></g><g><title>IOKit`IOConnectCallMethod (4 samples, 0.01%)</title><rect x="3.2276%" y="325" width="0.0128%" height="15" fill="rgb(232,167,36)" fg:x="1012" fg:w="4"/><text x="3.4776%" y="335.50"></text></g><g><title>IOKit`io_connect_method (4 samples, 0.01%)</title><rect x="3.2276%" y="309" width="0.0128%" height="15" fill="rgb(244,19,51)" fg:x="1012" fg:w="4"/><text x="3.4776%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (4 samples, 0.01%)</title><rect x="3.2276%" y="293" width="0.0128%" height="15" fill="rgb(224,6,22)" fg:x="1012" fg:w="4"/><text x="3.4776%" y="303.50"></text></g><g><title>meg`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::cleanup (7 samples, 0.02%)</title><rect x="3.2212%" y="405" width="0.0223%" height="15" fill="rgb(224,145,5)" fg:x="1010" fg:w="7"/><text x="3.4712%" y="415.50"></text></g><g><title>Metal`-[MTLIOAccelBuffer dealloc] (7 samples, 0.02%)</title><rect x="3.2212%" y="389" width="0.0223%" height="15" fill="rgb(234,130,49)" fg:x="1010" fg:w="7"/><text x="3.4712%" y="399.50"></text></g><g><title>Metal`-[MTLIOAccelResource dealloc] (7 samples, 0.02%)</title><rect x="3.2212%" y="373" width="0.0223%" height="15" fill="rgb(254,6,2)" fg:x="1010" fg:w="7"/><text x="3.4712%" y="383.50"></text></g><g><title>meg`wgpu_core::device::Device&lt;A&gt;::maintain (13 samples, 0.04%)</title><rect x="3.2148%" y="421" width="0.0415%" height="15" fill="rgb(208,96,46)" fg:x="1008" fg:w="13"/><text x="3.4648%" y="431.50"></text></g><g><title>meg`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (42 samples, 0.13%)</title><rect x="3.1414%" y="453" width="0.1339%" height="15" fill="rgb(239,3,39)" fg:x="985" fg:w="42"/><text x="3.3914%" y="463.50"></text></g><g><title>meg`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (39 samples, 0.12%)</title><rect x="3.1510%" y="437" width="0.1244%" height="15" fill="rgb(233,210,1)" fg:x="988" fg:w="39"/><text x="3.4010%" y="447.50"></text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (5 samples, 0.02%)</title><rect x="3.2594%" y="421" width="0.0159%" height="15" fill="rgb(244,137,37)" fg:x="1022" fg:w="5"/><text x="3.5094%" y="431.50"></text></g><g><title>meg`&lt;kintaro::op_stream::OpReceiver as kintaro::op_stream::GetOps&gt;::clear_cache (5 samples, 0.02%)</title><rect x="3.3105%" y="437" width="0.0159%" height="15" fill="rgb(240,136,2)" fg:x="1038" fg:w="5"/><text x="3.5605%" y="447.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.01%)</title><rect x="3.4731%" y="389" width="0.0128%" height="15" fill="rgb(239,18,37)" fg:x="1089" fg:w="4"/><text x="3.7231%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="3.5369%" y="277" width="0.0128%" height="15" fill="rgb(218,185,22)" fg:x="1109" fg:w="4"/><text x="3.7869%" y="287.50"></text></g><g><title>CoreFoundation`-[__NSArrayM insertObject:atIndex:] (13 samples, 0.04%)</title><rect x="3.5369%" y="293" width="0.0415%" height="15" fill="rgb(225,218,4)" fg:x="1109" fg:w="13"/><text x="3.7869%" y="303.50"></text></g><g><title>Metal`-[_MTLCommandQueue enqueueCommandBuffer:] (20 samples, 0.06%)</title><rect x="3.5337%" y="309" width="0.0638%" height="15" fill="rgb(230,182,32)" fg:x="1108" fg:w="20"/><text x="3.7837%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (5 samples, 0.02%)</title><rect x="3.5816%" y="293" width="0.0159%" height="15" fill="rgb(242,56,43)" fg:x="1123" fg:w="5"/><text x="3.8316%" y="303.50"></text></g><g><title>Metal`-[_MTLCommandBuffer commit] (26 samples, 0.08%)</title><rect x="3.5242%" y="325" width="0.0829%" height="15" fill="rgb(233,99,24)" fg:x="1105" fg:w="26"/><text x="3.7742%" y="335.50"></text></g><g><title>Metal`-[_MTLCommandQueue commitCommandBuffer:wake:] (5 samples, 0.02%)</title><rect x="3.6071%" y="325" width="0.0159%" height="15" fill="rgb(234,209,42)" fg:x="1131" fg:w="5"/><text x="3.8571%" y="335.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStorageFinalizeShmemHeader (8 samples, 0.03%)</title><rect x="3.6230%" y="325" width="0.0255%" height="15" fill="rgb(227,7,12)" fg:x="1136" fg:w="8"/><text x="3.8730%" y="335.50"></text></g><g><title>Metal`_mtlIOAccelCommandBufferStorageBeginSegmentList (4 samples, 0.01%)</title><rect x="3.6358%" y="309" width="0.0128%" height="15" fill="rgb(245,203,43)" fg:x="1140" fg:w="4"/><text x="3.8858%" y="319.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer commit] (45 samples, 0.14%)</title><rect x="3.5146%" y="341" width="0.1435%" height="15" fill="rgb(238,205,33)" fg:x="1102" fg:w="45"/><text x="3.7646%" y="351.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer commit] (49 samples, 0.16%)</title><rect x="3.5082%" y="357" width="0.1563%" height="15" fill="rgb(231,56,7)" fg:x="1100" fg:w="49"/><text x="3.7582%" y="367.50"></text></g><g><title>meg`&lt;wgpu_hal::metal::Queue as wgpu_hal::Queue&lt;wgpu_hal::metal::Api&gt;&gt;::submit (63 samples, 0.20%)</title><rect x="3.4986%" y="389" width="0.2009%" height="15" fill="rgb(244,186,29)" fg:x="1097" fg:w="63"/><text x="3.7486%" y="399.50"></text></g><g><title>meg`objc::rc::autorelease::autoreleasepool (60 samples, 0.19%)</title><rect x="3.5082%" y="373" width="0.1914%" height="15" fill="rgb(234,111,31)" fg:x="1100" fg:w="60"/><text x="3.7582%" y="383.50"></text></g><g><title>meg`metal::commandbuffer::CommandBufferRef::set_label (5 samples, 0.02%)</title><rect x="3.6836%" y="357" width="0.0159%" height="15" fill="rgb(241,149,10)" fg:x="1155" fg:w="5"/><text x="3.9336%" y="367.50"></text></g><g><title>meg`core::ptr::drop_in_place&lt;wgpu_core::track::TrackerSet&gt; (11 samples, 0.04%)</title><rect x="3.7155%" y="389" width="0.0351%" height="15" fill="rgb(249,206,44)" fg:x="1165" fg:w="11"/><text x="3.9655%" y="399.50"></text></g><g><title>meg`wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers (15 samples, 0.05%)</title><rect x="3.7570%" y="389" width="0.0478%" height="15" fill="rgb(251,153,30)" fg:x="1178" fg:w="15"/><text x="4.0070%" y="399.50"></text></g><g><title>meg`wgpu_core::track::ResourceTracker&lt;S&gt;::merge_replace (15 samples, 0.05%)</title><rect x="3.7570%" y="373" width="0.0478%" height="15" fill="rgb(239,152,38)" fg:x="1178" fg:w="15"/><text x="4.0070%" y="383.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (19 samples, 0.06%)</title><rect x="3.8367%" y="373" width="0.0606%" height="15" fill="rgb(249,139,47)" fg:x="1203" fg:w="19"/><text x="4.0867%" y="383.50"></text></g><g><title>CoreFoundation`CFGetAllocator (7 samples, 0.02%)</title><rect x="4.0121%" y="325" width="0.0223%" height="15" fill="rgb(244,64,35)" fg:x="1258" fg:w="7"/><text x="4.2621%" y="335.50"></text></g><g><title>CoreFoundation`CFRelease (17 samples, 0.05%)</title><rect x="4.0344%" y="325" width="0.0542%" height="15" fill="rgb(216,46,15)" fg:x="1265" fg:w="17"/><text x="4.2844%" y="335.50"></text></g><g><title>CoreFoundation`CFRelease (4 samples, 0.01%)</title><rect x="4.3215%" y="293" width="0.0128%" height="15" fill="rgb(250,74,19)" fg:x="1355" fg:w="4"/><text x="4.5715%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (9 samples, 0.03%)</title><rect x="4.3853%" y="261" width="0.0287%" height="15" fill="rgb(249,42,33)" fg:x="1375" fg:w="9"/><text x="4.6353%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1,585 samples, 5.06%)</title><rect x="4.4140%" y="261" width="5.0550%" height="15" fill="rgb(242,149,17)" fg:x="1384" fg:w="1585"/><text x="4.6640%" y="271.50">libsys..</text></g><g><title>IOKit`io_connect_method (1,606 samples, 5.12%)</title><rect x="4.3502%" y="277" width="5.1220%" height="15" fill="rgb(244,29,21)" fg:x="1364" fg:w="1606"/><text x="4.6002%" y="287.50">IOKit`..</text></g><g><title>IOAccelerator`ioAccelResourceFinalize (1,667 samples, 5.32%)</title><rect x="4.1652%" y="309" width="5.3165%" height="15" fill="rgb(220,130,37)" fg:x="1306" fg:w="1667"/><text x="4.4152%" y="319.50">IOAccel..</text></g><g><title>IOKit`IOConnectCallMethod (1,611 samples, 5.14%)</title><rect x="4.3438%" y="293" width="5.1379%" height="15" fill="rgb(211,67,2)" fg:x="1362" fg:w="1611"/><text x="4.5938%" y="303.50">IOKit`..</text></g><g><title>CoreFoundation`_CFRelease (1,705 samples, 5.44%)</title><rect x="4.0887%" y="325" width="5.4377%" height="15" fill="rgb(235,68,52)" fg:x="1282" fg:w="1705"/><text x="4.3387%" y="335.50">CoreFou..</text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.02%)</title><rect x="9.5104%" y="309" width="0.0159%" height="15" fill="rgb(246,142,3)" fg:x="2982" fg:w="5"/><text x="9.7604%" y="319.50"></text></g><g><title>libobjc.A.dylib`cache_getImp (6 samples, 0.02%)</title><rect x="9.5455%" y="261" width="0.0191%" height="15" fill="rgb(241,25,7)" fg:x="2993" fg:w="6"/><text x="9.7955%" y="271.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (42 samples, 0.13%)</title><rect x="9.5296%" y="309" width="0.1339%" height="15" fill="rgb(242,119,39)" fg:x="2988" fg:w="42"/><text x="9.7796%" y="319.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (42 samples, 0.13%)</title><rect x="9.5296%" y="293" width="0.1339%" height="15" fill="rgb(241,98,45)" fg:x="2988" fg:w="42"/><text x="9.7796%" y="303.50"></text></g><g><title>libobjc.A.dylib`object_cxxDestructFromClass(objc_object*, objc_class*) (41 samples, 0.13%)</title><rect x="9.5328%" y="277" width="0.1308%" height="15" fill="rgb(254,28,30)" fg:x="2989" fg:w="41"/><text x="9.7828%" y="287.50"></text></g><g><title>libobjc.A.dylib`objc_destroyWeak (30 samples, 0.10%)</title><rect x="9.5679%" y="261" width="0.0957%" height="15" fill="rgb(241,142,54)" fg:x="3000" fg:w="30"/><text x="9.8179%" y="271.50"></text></g><g><title>libobjc.A.dylib`weak_unregister_no_lock (24 samples, 0.08%)</title><rect x="9.5870%" y="245" width="0.0765%" height="15" fill="rgb(222,85,15)" fg:x="3006" fg:w="24"/><text x="9.8370%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.02%)</title><rect x="9.6635%" y="309" width="0.0159%" height="15" fill="rgb(210,85,47)" fg:x="3030" fg:w="5"/><text x="9.9135%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (4 samples, 0.01%)</title><rect x="9.6667%" y="293" width="0.0128%" height="15" fill="rgb(224,206,25)" fg:x="3031" fg:w="4"/><text x="9.9167%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (4 samples, 0.01%)</title><rect x="9.7146%" y="293" width="0.0128%" height="15" fill="rgb(243,201,19)" fg:x="3046" fg:w="4"/><text x="9.9646%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.02%)</title><rect x="9.7783%" y="277" width="0.0191%" height="15" fill="rgb(236,59,4)" fg:x="3066" fg:w="6"/><text x="10.0283%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (48 samples, 0.15%)</title><rect x="9.6795%" y="309" width="0.1531%" height="15" fill="rgb(254,179,45)" fg:x="3035" fg:w="48"/><text x="9.9295%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (33 samples, 0.11%)</title><rect x="9.7273%" y="293" width="0.1052%" height="15" fill="rgb(226,14,10)" fg:x="3050" fg:w="33"/><text x="9.9773%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (11 samples, 0.04%)</title><rect x="9.7975%" y="277" width="0.0351%" height="15" fill="rgb(244,27,41)" fg:x="3072" fg:w="11"/><text x="10.0475%" y="287.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel dealloc] (96 samples, 0.31%)</title><rect x="9.5296%" y="325" width="0.3062%" height="15" fill="rgb(235,35,32)" fg:x="2988" fg:w="96"/><text x="9.7796%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free (5 samples, 0.02%)</title><rect x="9.8581%" y="325" width="0.0159%" height="15" fill="rgb(218,68,31)" fg:x="3091" fg:w="5"/><text x="10.1081%" y="335.50"></text></g><g><title>Metal`-[MTLIOAccelResource dealloc] (1,850 samples, 5.90%)</title><rect x="3.9866%" y="341" width="5.9002%" height="15" fill="rgb(207,120,37)" fg:x="1250" fg:w="1850"/><text x="4.2366%" y="351.50">Metal`-[..</text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.02%)</title><rect x="9.8900%" y="341" width="0.0159%" height="15" fill="rgb(227,98,0)" fg:x="3101" fg:w="5"/><text x="10.1400%" y="351.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (12 samples, 0.04%)</title><rect x="9.9059%" y="341" width="0.0383%" height="15" fill="rgb(207,7,3)" fg:x="3106" fg:w="12"/><text x="10.1559%" y="351.50"></text></g><g><title>libobjc.A.dylib`objc_release (18 samples, 0.06%)</title><rect x="9.9442%" y="341" width="0.0574%" height="15" fill="rgb(206,98,19)" fg:x="3118" fg:w="18"/><text x="10.1942%" y="351.50"></text></g><g><title>Metal`-[MTLIOAccelBuffer dealloc] (1,908 samples, 6.09%)</title><rect x="3.9324%" y="357" width="6.0852%" height="15" fill="rgb(217,5,26)" fg:x="1233" fg:w="1908"/><text x="4.1824%" y="367.50">Metal`-[..</text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock (5 samples, 0.02%)</title><rect x="10.0016%" y="341" width="0.0159%" height="15" fill="rgb(235,190,38)" fg:x="3136" fg:w="5"/><text x="10.2516%" y="351.50"></text></g><g><title>meg`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::cleanup (1,917 samples, 6.11%)</title><rect x="3.9069%" y="373" width="6.1139%" height="15" fill="rgb(247,86,24)" fg:x="1225" fg:w="1917"/><text x="4.1569%" y="383.50">meg`wgpu..</text></g><g><title>libobjc.A.dylib`objc_msgSend (11 samples, 0.04%)</title><rect x="10.0654%" y="357" width="0.0351%" height="15" fill="rgb(205,101,16)" fg:x="3156" fg:w="11"/><text x="10.3154%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.01%)</title><rect x="10.1164%" y="357" width="0.0128%" height="15" fill="rgb(246,168,33)" fg:x="3172" fg:w="4"/><text x="10.3664%" y="367.50"></text></g><g><title>meg`&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="10.1292%" y="357" width="0.0128%" height="15" fill="rgb(231,114,1)" fg:x="3176" fg:w="4"/><text x="10.3792%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.01%)</title><rect x="10.1292%" y="341" width="0.0128%" height="15" fill="rgb(207,184,53)" fg:x="3176" fg:w="4"/><text x="10.3792%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.01%)</title><rect x="10.2121%" y="309" width="0.0128%" height="15" fill="rgb(224,95,51)" fg:x="3202" fg:w="4"/><text x="10.4621%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer deleteContextStateDescriptor:] (24 samples, 0.08%)</title><rect x="10.1770%" y="325" width="0.0765%" height="15" fill="rgb(212,188,45)" fg:x="3191" fg:w="24"/><text x="10.4270%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_small (9 samples, 0.03%)</title><rect x="10.2248%" y="309" width="0.0287%" height="15" fill="rgb(223,154,38)" fg:x="3206" fg:w="9"/><text x="10.4748%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IntelStateHeaps::terminate (70 samples, 0.22%)</title><rect x="10.2567%" y="325" width="0.2232%" height="15" fill="rgb(251,22,52)" fg:x="3216" fg:w="70"/><text x="10.5067%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (48 samples, 0.15%)</title><rect x="10.3269%" y="309" width="0.1531%" height="15" fill="rgb(229,209,22)" fg:x="3238" fg:w="48"/><text x="10.5769%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.01%)</title><rect x="10.5502%" y="309" width="0.0128%" height="15" fill="rgb(234,138,34)" fg:x="3308" fg:w="4"/><text x="10.8002%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt;, std::__1::__unordered_map_hasher&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt;, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, true&gt;, std::__1::__unordered_map_equal&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::hash&lt;unsigned int&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt; &gt; &gt;::~__hash_table (32 samples, 0.10%)</title><rect x="10.4800%" y="325" width="0.1021%" height="15" fill="rgb(212,95,11)" fg:x="3286" fg:w="32"/><text x="10.7300%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (6 samples, 0.02%)</title><rect x="10.5629%" y="309" width="0.0191%" height="15" fill="rgb(240,179,47)" fg:x="3312" fg:w="6"/><text x="10.8129%" y="319.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (6 samples, 0.02%)</title><rect x="10.6267%" y="293" width="0.0191%" height="15" fill="rgb(240,163,11)" fg:x="3332" fg:w="6"/><text x="10.8767%" y="303.50"></text></g><g><title>CoreFoundation`_CFRelease (9 samples, 0.03%)</title><rect x="10.6522%" y="277" width="0.0287%" height="15" fill="rgb(236,37,12)" fg:x="3340" fg:w="9"/><text x="10.9022%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.02%)</title><rect x="10.6809%" y="277" width="0.0159%" height="15" fill="rgb(232,164,16)" fg:x="3349" fg:w="5"/><text x="10.9309%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (4 samples, 0.01%)</title><rect x="10.6841%" y="261" width="0.0128%" height="15" fill="rgb(244,205,15)" fg:x="3350" fg:w="4"/><text x="10.9341%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (4 samples, 0.01%)</title><rect x="10.6841%" y="245" width="0.0128%" height="15" fill="rgb(223,117,47)" fg:x="3350" fg:w="4"/><text x="10.9341%" y="255.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel dealloc] (32 samples, 0.10%)</title><rect x="10.6490%" y="293" width="0.1021%" height="15" fill="rgb(244,107,35)" fg:x="3339" fg:w="32"/><text x="10.8990%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (17 samples, 0.05%)</title><rect x="10.6969%" y="277" width="0.0542%" height="15" fill="rgb(205,140,8)" fg:x="3354" fg:w="17"/><text x="10.9469%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (12 samples, 0.04%)</title><rect x="10.7128%" y="261" width="0.0383%" height="15" fill="rgb(228,84,46)" fg:x="3359" fg:w="12"/><text x="10.9628%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (5 samples, 0.02%)</title><rect x="10.7351%" y="245" width="0.0159%" height="15" fill="rgb(254,188,9)" fg:x="3366" fg:w="5"/><text x="10.9851%" y="255.50"></text></g><g><title>libobjc.A.dylib`objc_release (4 samples, 0.01%)</title><rect x="10.7543%" y="293" width="0.0128%" height="15" fill="rgb(206,112,54)" fg:x="3372" fg:w="4"/><text x="11.0043%" y="303.50"></text></g><g><title>Metal`-[_MTLCommandBuffer dealloc] (58 samples, 0.18%)</title><rect x="10.5948%" y="309" width="0.1850%" height="15" fill="rgb(216,84,49)" fg:x="3322" fg:w="58"/><text x="10.8448%" y="319.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer dealloc] (70 samples, 0.22%)</title><rect x="10.5820%" y="325" width="0.2232%" height="15" fill="rgb(214,194,35)" fg:x="3318" fg:w="70"/><text x="10.8320%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (4 samples, 0.01%)</title><rect x="10.8117%" y="309" width="0.0128%" height="15" fill="rgb(249,28,3)" fg:x="3390" fg:w="4"/><text x="11.0617%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.03%)</title><rect x="10.8085%" y="325" width="0.0255%" height="15" fill="rgb(222,56,52)" fg:x="3389" fg:w="8"/><text x="11.0585%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_small (19 samples, 0.06%)</title><rect x="10.8340%" y="325" width="0.0606%" height="15" fill="rgb(245,217,50)" fg:x="3397" fg:w="19"/><text x="11.0840%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (6 samples, 0.02%)</title><rect x="10.8755%" y="309" width="0.0191%" height="15" fill="rgb(213,201,24)" fg:x="3410" fg:w="6"/><text x="11.1255%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer dealloc] (235 samples, 0.75%)</title><rect x="10.1515%" y="341" width="0.7495%" height="15" fill="rgb(248,116,28)" fg:x="3183" fg:w="235"/><text x="10.4015%" y="351.50"></text></g><g><title>meg`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_submissions (276 samples, 0.88%)</title><rect x="10.0271%" y="373" width="0.8802%" height="15" fill="rgb(219,72,43)" fg:x="3144" fg:w="276"/><text x="10.2771%" y="383.50"></text></g><g><title>meg`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (240 samples, 0.77%)</title><rect x="10.1419%" y="357" width="0.7654%" height="15" fill="rgb(209,138,14)" fg:x="3180" fg:w="240"/><text x="10.3919%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (4 samples, 0.01%)</title><rect x="10.9456%" y="293" width="0.0128%" height="15" fill="rgb(222,18,33)" fg:x="3432" fg:w="4"/><text x="11.1956%" y="303.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="10.9456%" y="357" width="0.0159%" height="15" fill="rgb(213,199,7)" fg:x="3432" fg:w="5"/><text x="11.1956%" y="367.50"></text></g><g><title>meg`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.02%)</title><rect x="10.9456%" y="341" width="0.0159%" height="15" fill="rgb(250,110,10)" fg:x="3432" fg:w="5"/><text x="11.1956%" y="351.50"></text></g><g><title>meg`alloc::raw_vec::finish_grow (5 samples, 0.02%)</title><rect x="10.9456%" y="325" width="0.0159%" height="15" fill="rgb(248,123,6)" fg:x="3432" fg:w="5"/><text x="11.1956%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`realloc (5 samples, 0.02%)</title><rect x="10.9456%" y="309" width="0.0159%" height="15" fill="rgb(206,91,31)" fg:x="3432" fg:w="5"/><text x="11.1956%" y="319.50"></text></g><g><title>meg`wgpu_core::hub::Registry&lt;T,I,F&gt;::unregister_locked (9 samples, 0.03%)</title><rect x="10.9679%" y="357" width="0.0287%" height="15" fill="rgb(211,154,13)" fg:x="3439" fg:w="9"/><text x="11.2179%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (7 samples, 0.02%)</title><rect x="10.9743%" y="341" width="0.0223%" height="15" fill="rgb(225,148,7)" fg:x="3441" fg:w="7"/><text x="11.2243%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.01%)</title><rect x="11.0062%" y="341" width="0.0128%" height="15" fill="rgb(220,160,43)" fg:x="3451" fg:w="4"/><text x="11.2562%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (4 samples, 0.01%)</title><rect x="11.0062%" y="325" width="0.0128%" height="15" fill="rgb(213,52,39)" fg:x="3451" fg:w="4"/><text x="11.2562%" y="335.50"></text></g><g><title>meg`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected (37 samples, 0.12%)</title><rect x="10.9074%" y="373" width="0.1180%" height="15" fill="rgb(243,137,7)" fg:x="3420" fg:w="37"/><text x="11.1574%" y="383.50"></text></g><g><title>meg`wgpu_core::track::ResourceTracker&lt;S&gt;::remove_abandoned (9 samples, 0.03%)</title><rect x="10.9967%" y="357" width="0.0287%" height="15" fill="rgb(230,79,13)" fg:x="3448" fg:w="9"/><text x="11.2467%" y="367.50"></text></g><g><title>meg`wgpu_core::device::Device&lt;A&gt;::maintain (2,263 samples, 7.22%)</title><rect x="3.8176%" y="389" width="7.2173%" height="15" fill="rgb(247,105,23)" fg:x="1197" fg:w="2263"/><text x="4.0676%" y="399.50">meg`wgpu_c..</text></g><g><title>meg`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::track_submission (11 samples, 0.04%)</title><rect x="11.0477%" y="389" width="0.0351%" height="15" fill="rgb(223,179,41)" fg:x="3464" fg:w="11"/><text x="11.2977%" y="399.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelBlitCommandEncoder::endEncoding (12 samples, 0.04%)</title><rect x="11.1083%" y="341" width="0.0383%" height="15" fill="rgb(218,9,34)" fg:x="3483" fg:w="12"/><text x="11.3583%" y="351.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`void IntelCommandBuffer::commit&lt;(IntelConstants::eEngineID)2&gt; (8 samples, 0.03%)</title><rect x="11.1210%" y="325" width="0.0255%" height="15" fill="rgb(222,106,8)" fg:x="3487" fg:w="8"/><text x="11.3710%" y="335.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IntelMTLRender::sCommandBufferEnd::sCommandBufferEnd (7 samples, 0.02%)</title><rect x="11.1242%" y="309" width="0.0223%" height="15" fill="rgb(211,220,0)" fg:x="3488" fg:w="7"/><text x="11.3742%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelBlitCommandEncoder endEncoding] (20 samples, 0.06%)</title><rect x="11.1083%" y="357" width="0.0638%" height="15" fill="rgb(229,52,16)" fg:x="3483" fg:w="20"/><text x="11.3583%" y="367.50"></text></g><g><title>meg`wgpu_core::device::queue::PendingWrites&lt;A&gt;::pre_submit (26 samples, 0.08%)</title><rect x="11.0955%" y="389" width="0.0829%" height="15" fill="rgb(212,155,18)" fg:x="3479" fg:w="26"/><text x="11.3455%" y="399.50"></text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::end_encoding (22 samples, 0.07%)</title><rect x="11.1083%" y="373" width="0.0702%" height="15" fill="rgb(242,21,14)" fg:x="3483" fg:w="22"/><text x="11.3583%" y="383.50"></text></g><g><title>meg`wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (7 samples, 0.02%)</title><rect x="11.1848%" y="389" width="0.0223%" height="15" fill="rgb(222,19,48)" fg:x="3507" fg:w="7"/><text x="11.4348%" y="399.50"></text></g><g><title>meg`metal::commandbuffer::CommandBufferRef::set_label (4 samples, 0.01%)</title><rect x="11.2199%" y="373" width="0.0128%" height="15" fill="rgb(232,45,27)" fg:x="3518" fg:w="4"/><text x="11.4699%" y="383.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (7 samples, 0.02%)</title><rect x="11.2327%" y="341" width="0.0223%" height="15" fill="rgb(249,103,42)" fg:x="3522" fg:w="7"/><text x="11.4827%" y="351.50"></text></g><g><title>meg`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (2,459 samples, 7.84%)</title><rect x="3.4157%" y="405" width="7.8424%" height="15" fill="rgb(246,81,33)" fg:x="1071" fg:w="2459"/><text x="3.6657%" y="415.50">meg`wgpu_co..</text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (13 samples, 0.04%)</title><rect x="11.2167%" y="389" width="0.0415%" height="15" fill="rgb(252,33,42)" fg:x="3517" fg:w="13"/><text x="11.4667%" y="399.50"></text></g><g><title>meg`objc::rc::autorelease::autoreleasepool (8 samples, 0.03%)</title><rect x="11.2327%" y="373" width="0.0255%" height="15" fill="rgb(209,212,41)" fg:x="3522" fg:w="8"/><text x="11.4827%" y="383.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandQueue commandBufferWithUnretainedReferences] (8 samples, 0.03%)</title><rect x="11.2327%" y="357" width="0.0255%" height="15" fill="rgb(207,154,6)" fg:x="3522" fg:w="8"/><text x="11.4827%" y="367.50"></text></g><g><title>meg`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (2,472 samples, 7.88%)</title><rect x="3.3775%" y="421" width="7.8839%" height="15" fill="rgb(223,64,47)" fg:x="1059" fg:w="2472"/><text x="3.6275%" y="431.50">meg`&lt;wgpu::..</text></g><g><title>meg`core::hash::BuildHasher::hash_one (5 samples, 0.02%)</title><rect x="11.2614%" y="421" width="0.0159%" height="15" fill="rgb(211,161,38)" fg:x="3531" fg:w="5"/><text x="11.5114%" y="431.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder endEncoding] (9 samples, 0.03%)</title><rect x="11.3220%" y="341" width="0.0287%" height="15" fill="rgb(219,138,40)" fg:x="3550" fg:w="9"/><text x="11.5720%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (4 samples, 0.01%)</title><rect x="11.3379%" y="325" width="0.0128%" height="15" fill="rgb(241,228,46)" fg:x="3555" fg:w="4"/><text x="11.5879%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`madvise (4 samples, 0.01%)</title><rect x="11.3379%" y="309" width="0.0128%" height="15" fill="rgb(223,209,38)" fg:x="3555" fg:w="4"/><text x="11.5879%" y="319.50"></text></g><g><title>meg`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::finish (12 samples, 0.04%)</title><rect x="11.3156%" y="373" width="0.0383%" height="15" fill="rgb(236,164,45)" fg:x="3548" fg:w="12"/><text x="11.5656%" y="383.50"></text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::end_render_pass (10 samples, 0.03%)</title><rect x="11.3220%" y="357" width="0.0319%" height="15" fill="rgb(231,15,5)" fg:x="3550" fg:w="10"/><text x="11.5720%" y="367.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGRenderStateBindingTable::IGRenderStateBindingTable (7 samples, 0.02%)</title><rect x="11.3921%" y="277" width="0.0223%" height="15" fill="rgb(252,35,15)" fg:x="3572" fg:w="7"/><text x="11.6421%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (6 samples, 0.02%)</title><rect x="11.3953%" y="261" width="0.0191%" height="15" fill="rgb(248,181,18)" fg:x="3573" fg:w="6"/><text x="11.6453%" y="271.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::IGAccelRenderCommandEncoder (11 samples, 0.04%)</title><rect x="11.3826%" y="293" width="0.0351%" height="15" fill="rgb(233,39,42)" fg:x="3569" fg:w="11"/><text x="11.6326%" y="303.50"></text></g><g><title>dyld`dyld4::APIs::dyld_get_program_sdk_version (5 samples, 0.02%)</title><rect x="11.4400%" y="229" width="0.0159%" height="15" fill="rgb(238,110,33)" fg:x="3587" fg:w="5"/><text x="11.6900%" y="239.50"></text></g><g><title>dyld`dyld4::APIs::getSdkVersion (4 samples, 0.01%)</title><rect x="11.4432%" y="213" width="0.0128%" height="15" fill="rgb(233,195,10)" fg:x="3588" fg:w="4"/><text x="11.6932%" y="223.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::initializeHWState (10 samples, 0.03%)</title><rect x="11.4272%" y="277" width="0.0319%" height="15" fill="rgb(254,105,3)" fg:x="3583" fg:w="10"/><text x="11.6772%" y="287.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGRenderStateVertexFetch::init (6 samples, 0.02%)</title><rect x="11.4400%" y="261" width="0.0191%" height="15" fill="rgb(221,225,9)" fg:x="3587" fg:w="6"/><text x="11.6900%" y="271.50"></text></g><g><title>Metal`+[_MTLDevice useNewPrimitiveRestartBehavior] (6 samples, 0.02%)</title><rect x="11.4400%" y="245" width="0.0191%" height="15" fill="rgb(224,227,45)" fg:x="3587" fg:w="6"/><text x="11.6900%" y="255.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::initializeRenderPassState (4 samples, 0.01%)</title><rect x="11.4591%" y="277" width="0.0128%" height="15" fill="rgb(229,198,43)" fg:x="3593" fg:w="4"/><text x="11.7091%" y="287.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IntelStateHeaps::initialize (8 samples, 0.03%)</title><rect x="11.4719%" y="277" width="0.0255%" height="15" fill="rgb(206,209,35)" fg:x="3597" fg:w="8"/><text x="11.7219%" y="287.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IntelStateHeaps::acquireHeap (8 samples, 0.03%)</title><rect x="11.4719%" y="261" width="0.0255%" height="15" fill="rgb(245,195,53)" fg:x="3597" fg:w="8"/><text x="11.7219%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (5 samples, 0.02%)</title><rect x="11.4814%" y="245" width="0.0159%" height="15" fill="rgb(240,92,26)" fg:x="3600" fg:w="5"/><text x="11.7314%" y="255.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::initialize (30 samples, 0.10%)</title><rect x="11.4176%" y="293" width="0.0957%" height="15" fill="rgb(207,40,23)" fg:x="3580" fg:w="30"/><text x="11.6676%" y="303.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`bool IntelCommandBuffer::initialize&lt;(IntelConstants::eEngineID)1&gt; (5 samples, 0.02%)</title><rect x="11.4974%" y="277" width="0.0159%" height="15" fill="rgb(223,111,35)" fg:x="3605" fg:w="5"/><text x="11.7474%" y="287.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder initWithCommandBuffer:descriptor:stateDescriptor:] (46 samples, 0.15%)</title><rect x="11.3730%" y="309" width="0.1467%" height="15" fill="rgb(229,147,28)" fg:x="3566" fg:w="46"/><text x="11.6230%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer renderCommandEncoderWithDescriptor:] (50 samples, 0.16%)</title><rect x="11.3634%" y="325" width="0.1595%" height="15" fill="rgb(211,29,28)" fg:x="3563" fg:w="50"/><text x="11.6134%" y="335.50"></text></g><g><title>Metal`-[MTLRenderPassDescriptorInternal init] (4 samples, 0.01%)</title><rect x="11.5293%" y="309" width="0.0128%" height="15" fill="rgb(228,72,33)" fg:x="3615" fg:w="4"/><text x="11.7793%" y="319.50"></text></g><g><title>Metal`+[MTLRenderPassDescriptor renderPassDescriptor] (7 samples, 0.02%)</title><rect x="11.5229%" y="325" width="0.0223%" height="15" fill="rgb(205,214,31)" fg:x="3613" fg:w="7"/><text x="11.7729%" y="335.50"></text></g><g><title>meg`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (64 samples, 0.20%)</title><rect x="11.3539%" y="373" width="0.2041%" height="15" fill="rgb(224,111,15)" fg:x="3560" fg:w="64"/><text x="11.6039%" y="383.50"></text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_render_pass (61 samples, 0.19%)</title><rect x="11.3634%" y="357" width="0.1945%" height="15" fill="rgb(253,21,26)" fg:x="3563" fg:w="61"/><text x="11.6134%" y="367.50"></text></g><g><title>meg`objc::rc::autorelease::autoreleasepool (61 samples, 0.19%)</title><rect x="11.3634%" y="341" width="0.1945%" height="15" fill="rgb(245,139,43)" fg:x="3563" fg:w="61"/><text x="11.6134%" y="351.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.01%)</title><rect x="11.5707%" y="341" width="0.0128%" height="15" fill="rgb(252,170,7)" fg:x="3628" fg:w="4"/><text x="11.8207%" y="351.50"></text></g><g><title>meg`metal::commandbuffer::CommandBufferRef::set_label (6 samples, 0.02%)</title><rect x="11.5707%" y="357" width="0.0191%" height="15" fill="rgb(231,118,14)" fg:x="3628" fg:w="6"/><text x="11.8207%" y="367.50"></text></g><g><title>Metal`-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (4 samples, 0.01%)</title><rect x="11.5962%" y="293" width="0.0128%" height="15" fill="rgb(238,83,0)" fg:x="3636" fg:w="4"/><text x="11.8462%" y="303.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (10 samples, 0.03%)</title><rect x="11.5899%" y="309" width="0.0319%" height="15" fill="rgb(221,39,39)" fg:x="3634" fg:w="10"/><text x="11.8399%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (12 samples, 0.04%)</title><rect x="11.5899%" y="325" width="0.0383%" height="15" fill="rgb(222,119,46)" fg:x="3634" fg:w="12"/><text x="11.8399%" y="335.50"></text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (27 samples, 0.09%)</title><rect x="11.5580%" y="373" width="0.0861%" height="15" fill="rgb(222,165,49)" fg:x="3624" fg:w="27"/><text x="11.8080%" y="383.50"></text></g><g><title>meg`objc::rc::autorelease::autoreleasepool (17 samples, 0.05%)</title><rect x="11.5899%" y="357" width="0.0542%" height="15" fill="rgb(219,113,52)" fg:x="3634" fg:w="17"/><text x="11.8399%" y="367.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandQueue commandBufferWithUnretainedReferences] (17 samples, 0.05%)</title><rect x="11.5899%" y="341" width="0.0542%" height="15" fill="rgb(214,7,15)" fg:x="3634" fg:w="17"/><text x="11.8399%" y="351.50"></text></g><g><title>meg`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (113 samples, 0.36%)</title><rect x="11.2869%" y="405" width="0.3604%" height="15" fill="rgb(235,32,4)" fg:x="3539" fg:w="113"/><text x="11.5369%" y="415.50"></text></g><g><title>meg`wgpu_core::command::render::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (112 samples, 0.36%)</title><rect x="11.2901%" y="389" width="0.3572%" height="15" fill="rgb(238,90,54)" fg:x="3540" fg:w="112"/><text x="11.5401%" y="399.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStorageFinalizeShmemHeader (4 samples, 0.01%)</title><rect x="11.6919%" y="309" width="0.0128%" height="15" fill="rgb(213,208,19)" fg:x="3666" fg:w="4"/><text x="11.9419%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer commit] (10 samples, 0.03%)</title><rect x="11.6823%" y="341" width="0.0319%" height="15" fill="rgb(233,156,4)" fg:x="3663" fg:w="10"/><text x="11.9323%" y="351.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer commit] (10 samples, 0.03%)</title><rect x="11.6823%" y="325" width="0.0319%" height="15" fill="rgb(207,194,5)" fg:x="3663" fg:w="10"/><text x="11.9323%" y="335.50"></text></g><g><title>meg`&lt;wgpu_hal::metal::Queue as wgpu_hal::Queue&lt;wgpu_hal::metal::Api&gt;&gt;::submit (12 samples, 0.04%)</title><rect x="11.6792%" y="373" width="0.0383%" height="15" fill="rgb(206,111,30)" fg:x="3662" fg:w="12"/><text x="11.9292%" y="383.50"></text></g><g><title>meg`objc::rc::autorelease::autoreleasepool (11 samples, 0.04%)</title><rect x="11.6823%" y="357" width="0.0351%" height="15" fill="rgb(243,70,54)" fg:x="3663" fg:w="11"/><text x="11.9323%" y="367.50"></text></g><g><title>meg`wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers (5 samples, 0.02%)</title><rect x="11.7206%" y="373" width="0.0159%" height="15" fill="rgb(242,28,8)" fg:x="3675" fg:w="5"/><text x="11.9706%" y="383.50"></text></g><g><title>meg`wgpu_core::track::ResourceTracker&lt;S&gt;::merge_replace (5 samples, 0.02%)</title><rect x="11.7206%" y="357" width="0.0159%" height="15" fill="rgb(219,106,18)" fg:x="3675" fg:w="5"/><text x="11.9706%" y="367.50"></text></g><g><title>CoreFoundation`_CFRelease (27 samples, 0.09%)</title><rect x="11.7461%" y="309" width="0.0861%" height="15" fill="rgb(244,222,10)" fg:x="3683" fg:w="27"/><text x="11.9961%" y="319.50"></text></g><g><title>IOAccelerator`ioAccelResourceFinalize (27 samples, 0.09%)</title><rect x="11.7461%" y="293" width="0.0861%" height="15" fill="rgb(236,179,52)" fg:x="3683" fg:w="27"/><text x="11.9961%" y="303.50"></text></g><g><title>IOKit`IOConnectCallMethod (27 samples, 0.09%)</title><rect x="11.7461%" y="277" width="0.0861%" height="15" fill="rgb(213,23,39)" fg:x="3683" fg:w="27"/><text x="11.9961%" y="287.50"></text></g><g><title>IOKit`io_connect_method (27 samples, 0.09%)</title><rect x="11.7461%" y="261" width="0.0861%" height="15" fill="rgb(238,48,10)" fg:x="3683" fg:w="27"/><text x="11.9961%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (26 samples, 0.08%)</title><rect x="11.7493%" y="245" width="0.0829%" height="15" fill="rgb(251,196,23)" fg:x="3684" fg:w="26"/><text x="11.9993%" y="255.50"></text></g><g><title>meg`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::cleanup (29 samples, 0.09%)</title><rect x="11.7461%" y="357" width="0.0925%" height="15" fill="rgb(250,152,24)" fg:x="3683" fg:w="29"/><text x="11.9961%" y="367.50"></text></g><g><title>Metal`-[MTLIOAccelBuffer dealloc] (29 samples, 0.09%)</title><rect x="11.7461%" y="341" width="0.0925%" height="15" fill="rgb(209,150,17)" fg:x="3683" fg:w="29"/><text x="11.9961%" y="351.50"></text></g><g><title>Metal`-[MTLIOAccelResource dealloc] (29 samples, 0.09%)</title><rect x="11.7461%" y="325" width="0.0925%" height="15" fill="rgb(234,202,34)" fg:x="3683" fg:w="29"/><text x="11.9961%" y="335.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IntelStateHeaps::terminate (8 samples, 0.03%)</title><rect x="11.8578%" y="309" width="0.0255%" height="15" fill="rgb(253,148,53)" fg:x="3718" fg:w="8"/><text x="12.1078%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (6 samples, 0.02%)</title><rect x="11.8641%" y="293" width="0.0191%" height="15" fill="rgb(218,129,16)" fg:x="3720" fg:w="6"/><text x="12.1141%" y="303.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer dealloc] (5 samples, 0.02%)</title><rect x="11.8897%" y="309" width="0.0159%" height="15" fill="rgb(216,85,19)" fg:x="3728" fg:w="5"/><text x="12.1397%" y="319.50"></text></g><g><title>meg`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_submissions (23 samples, 0.07%)</title><rect x="11.8386%" y="357" width="0.0734%" height="15" fill="rgb(235,228,7)" fg:x="3712" fg:w="23"/><text x="12.0886%" y="367.50"></text></g><g><title>meg`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.06%)</title><rect x="11.8514%" y="341" width="0.0606%" height="15" fill="rgb(245,175,0)" fg:x="3716" fg:w="19"/><text x="12.1014%" y="351.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer dealloc] (19 samples, 0.06%)</title><rect x="11.8514%" y="325" width="0.0606%" height="15" fill="rgb(208,168,36)" fg:x="3716" fg:w="19"/><text x="12.1014%" y="335.50"></text></g><g><title>meg`wgpu_core::device::Device&lt;A&gt;::maintain (57 samples, 0.18%)</title><rect x="11.7366%" y="373" width="0.1818%" height="15" fill="rgb(246,171,24)" fg:x="3680" fg:w="57"/><text x="11.9866%" y="383.50"></text></g><g><title>meg`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (91 samples, 0.29%)</title><rect x="11.6536%" y="389" width="0.2902%" height="15" fill="rgb(215,142,24)" fg:x="3654" fg:w="91"/><text x="11.9036%" y="399.50"></text></g><g><title>meg`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (94 samples, 0.30%)</title><rect x="11.6473%" y="405" width="0.2998%" height="15" fill="rgb(250,187,7)" fg:x="3652" fg:w="94"/><text x="11.8973%" y="415.50"></text></g><g><title>meg`futures_executor::local_pool::LocalPool::run_until_stalled (4 samples, 0.01%)</title><rect x="11.9502%" y="405" width="0.0128%" height="15" fill="rgb(228,66,33)" fg:x="3747" fg:w="4"/><text x="12.2002%" y="415.50"></text></g><g><title>meg`alloc::fmt::format (4 samples, 0.01%)</title><rect x="11.9726%" y="389" width="0.0128%" height="15" fill="rgb(234,215,21)" fg:x="3754" fg:w="4"/><text x="12.2226%" y="399.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.02%)</title><rect x="11.9949%" y="373" width="0.0223%" height="15" fill="rgb(222,191,20)" fg:x="3761" fg:w="7"/><text x="12.2449%" y="383.50"></text></g><g><title>meg`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.01%)</title><rect x="12.0045%" y="357" width="0.0128%" height="15" fill="rgb(245,79,54)" fg:x="3764" fg:w="4"/><text x="12.2545%" y="367.50"></text></g><g><title>meg`alloc::sync::Arc&lt;T&gt;::drop_slow (8 samples, 0.03%)</title><rect x="12.0172%" y="357" width="0.0255%" height="15" fill="rgb(240,10,37)" fg:x="3768" fg:w="8"/><text x="12.2672%" y="367.50"></text></g><g><title>meg`core::ptr::drop_in_place&lt;regex::prog::Program&gt; (6 samples, 0.02%)</title><rect x="12.0236%" y="341" width="0.0191%" height="15" fill="rgb(214,192,32)" fg:x="3770" fg:w="6"/><text x="12.2736%" y="351.50"></text></g><g><title>meg`core::ptr::drop_in_place&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;core::cell::RefCell&lt;regex::exec::ProgramCacheInner&gt;&gt;&gt; (5 samples, 0.02%)</title><rect x="12.0427%" y="357" width="0.0159%" height="15" fill="rgb(209,36,54)" fg:x="3776" fg:w="5"/><text x="12.2927%" y="367.50"></text></g><g><title>meg`core::ptr::drop_in_place&lt;regex::dfa::Cache&gt; (5 samples, 0.02%)</title><rect x="12.0427%" y="341" width="0.0159%" height="15" fill="rgb(220,10,11)" fg:x="3776" fg:w="5"/><text x="12.2927%" y="351.50"></text></g><g><title>meg`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;regex::pool::Pool&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;core::cell::RefCell&lt;regex::exec::ProgramCacheInner&gt;&gt;&gt;&gt;&gt; (14 samples, 0.04%)</title><rect x="12.0172%" y="373" width="0.0446%" height="15" fill="rgb(221,106,17)" fg:x="3768" fg:w="14"/><text x="12.2672%" y="383.50"></text></g><g><title>meg`regex::dfa::Fsm::cached_state (5 samples, 0.02%)</title><rect x="12.0810%" y="341" width="0.0159%" height="15" fill="rgb(251,142,44)" fg:x="3788" fg:w="5"/><text x="12.3310%" y="351.50"></text></g><g><title>meg`regex::dfa::Fsm::add_state (5 samples, 0.02%)</title><rect x="12.1161%" y="309" width="0.0159%" height="15" fill="rgb(238,13,15)" fg:x="3799" fg:w="5"/><text x="12.3661%" y="319.50"></text></g><g><title>meg`regex::dfa::Fsm::cached_state (11 samples, 0.04%)</title><rect x="12.1097%" y="325" width="0.0351%" height="15" fill="rgb(208,107,27)" fg:x="3797" fg:w="11"/><text x="12.3597%" y="335.50"></text></g><g><title>meg`regex::re_unicode::Regex::is_match (28 samples, 0.09%)</title><rect x="12.0683%" y="373" width="0.0893%" height="15" fill="rgb(205,136,37)" fg:x="3784" fg:w="28"/><text x="12.3183%" y="383.50"></text></g><g><title>meg`regex::re_unicode::Regex::shortest_match_at (28 samples, 0.09%)</title><rect x="12.0683%" y="357" width="0.0893%" height="15" fill="rgb(250,205,27)" fg:x="3784" fg:w="28"/><text x="12.3183%" y="367.50"></text></g><g><title>meg`regex::dfa::Fsm::next_state (19 samples, 0.06%)</title><rect x="12.0970%" y="341" width="0.0606%" height="15" fill="rgb(210,80,43)" fg:x="3793" fg:w="19"/><text x="12.3470%" y="351.50"></text></g><g><title>meg`regex::dfa::Fsm::follow_epsilons (4 samples, 0.01%)</title><rect x="12.1448%" y="325" width="0.0128%" height="15" fill="rgb(247,160,36)" fg:x="3808" fg:w="4"/><text x="12.3948%" y="335.50"></text></g><g><title>meg`regex::compile::Compiler::c_class (8 samples, 0.03%)</title><rect x="12.2469%" y="277" width="0.0255%" height="15" fill="rgb(234,13,49)" fg:x="3840" fg:w="8"/><text x="12.4969%" y="287.50"></text></g><g><title>meg`regex::compile::CompileClass::c_utf8_seq (5 samples, 0.02%)</title><rect x="12.2564%" y="261" width="0.0159%" height="15" fill="rgb(234,122,0)" fg:x="3843" fg:w="5"/><text x="12.5064%" y="271.50"></text></g><g><title>meg`regex::compile::Compiler::c (10 samples, 0.03%)</title><rect x="12.2437%" y="325" width="0.0319%" height="15" fill="rgb(207,146,38)" fg:x="3839" fg:w="10"/><text x="12.4937%" y="335.50"></text></g><g><title>meg`regex::compile::Compiler::c_repeat_range (10 samples, 0.03%)</title><rect x="12.2437%" y="309" width="0.0319%" height="15" fill="rgb(207,177,25)" fg:x="3839" fg:w="10"/><text x="12.4937%" y="319.50"></text></g><g><title>meg`regex::compile::Compiler::c_concat (10 samples, 0.03%)</title><rect x="12.2437%" y="293" width="0.0319%" height="15" fill="rgb(211,178,42)" fg:x="3839" fg:w="10"/><text x="12.4937%" y="303.50"></text></g><g><title>meg`regex::compile::Compiler::c_capture (15 samples, 0.05%)</title><rect x="12.2756%" y="325" width="0.0478%" height="15" fill="rgb(230,69,54)" fg:x="3849" fg:w="15"/><text x="12.5256%" y="335.50"></text></g><g><title>meg`regex::compile::Compiler::c (14 samples, 0.04%)</title><rect x="12.2787%" y="309" width="0.0446%" height="15" fill="rgb(214,135,41)" fg:x="3850" fg:w="14"/><text x="12.5287%" y="319.50"></text></g><g><title>meg`regex::compile::Compiler::c_capture (10 samples, 0.03%)</title><rect x="12.2915%" y="293" width="0.0319%" height="15" fill="rgb(237,67,25)" fg:x="3854" fg:w="10"/><text x="12.5415%" y="303.50"></text></g><g><title>meg`regex::compile::Compiler::c_repeat_range (9 samples, 0.03%)</title><rect x="12.2947%" y="277" width="0.0287%" height="15" fill="rgb(222,189,50)" fg:x="3855" fg:w="9"/><text x="12.5447%" y="287.50"></text></g><g><title>meg`regex::compile::Compiler::c_concat (8 samples, 0.03%)</title><rect x="12.2979%" y="261" width="0.0255%" height="15" fill="rgb(245,148,34)" fg:x="3856" fg:w="8"/><text x="12.5479%" y="271.50"></text></g><g><title>meg`regex::compile::Compiler::c_class (7 samples, 0.02%)</title><rect x="12.3011%" y="245" width="0.0223%" height="15" fill="rgb(222,29,6)" fg:x="3857" fg:w="7"/><text x="12.5511%" y="255.50"></text></g><g><title>meg`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (7 samples, 0.02%)</title><rect x="12.3011%" y="229" width="0.0223%" height="15" fill="rgb(221,189,43)" fg:x="3857" fg:w="7"/><text x="12.5511%" y="239.50"></text></g><g><title>meg`alloc::raw_vec::finish_grow (7 samples, 0.02%)</title><rect x="12.3011%" y="213" width="0.0223%" height="15" fill="rgb(207,36,27)" fg:x="3857" fg:w="7"/><text x="12.5511%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`realloc (7 samples, 0.02%)</title><rect x="12.3011%" y="197" width="0.0223%" height="15" fill="rgb(217,90,24)" fg:x="3857" fg:w="7"/><text x="12.5511%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (7 samples, 0.02%)</title><rect x="12.3011%" y="181" width="0.0223%" height="15" fill="rgb(224,66,35)" fg:x="3857" fg:w="7"/><text x="12.5511%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (5 samples, 0.02%)</title><rect x="12.3074%" y="165" width="0.0159%" height="15" fill="rgb(221,13,50)" fg:x="3859" fg:w="5"/><text x="12.5574%" y="175.50"></text></g><g><title>meg`regex::compile::Compiler::c_dotstar (10 samples, 0.03%)</title><rect x="12.3234%" y="325" width="0.0319%" height="15" fill="rgb(236,68,49)" fg:x="3864" fg:w="10"/><text x="12.5734%" y="335.50"></text></g><g><title>meg`regex::compile::Compiler::c_repeat_zero_or_more (7 samples, 0.02%)</title><rect x="12.3330%" y="309" width="0.0223%" height="15" fill="rgb(229,146,28)" fg:x="3867" fg:w="7"/><text x="12.5830%" y="319.50"></text></g><g><title>meg`regex::compile::Compiler::c_class (7 samples, 0.02%)</title><rect x="12.3330%" y="293" width="0.0223%" height="15" fill="rgb(225,31,38)" fg:x="3867" fg:w="7"/><text x="12.5830%" y="303.50"></text></g><g><title>meg`regex::compile::Compiler::compile_finish (13 samples, 0.04%)</title><rect x="12.3553%" y="325" width="0.0415%" height="15" fill="rgb(250,208,3)" fg:x="3874" fg:w="13"/><text x="12.6053%" y="335.50"></text></g><g><title>meg`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (7 samples, 0.02%)</title><rect x="12.3744%" y="309" width="0.0223%" height="15" fill="rgb(246,54,23)" fg:x="3880" fg:w="7"/><text x="12.6244%" y="319.50"></text></g><g><title>meg`regex::compile::Compiler::compile (51 samples, 0.16%)</title><rect x="12.2373%" y="341" width="0.1627%" height="15" fill="rgb(243,76,11)" fg:x="3837" fg:w="51"/><text x="12.4873%" y="351.50"></text></g><g><title>meg`regex::compile::Compiler::new (11 samples, 0.04%)</title><rect x="12.3999%" y="341" width="0.0351%" height="15" fill="rgb(245,21,50)" fg:x="3888" fg:w="11"/><text x="12.6499%" y="351.50"></text></g><g><title>meg`regex::prog::Program::new (5 samples, 0.02%)</title><rect x="12.4191%" y="325" width="0.0159%" height="15" fill="rgb(228,9,43)" fg:x="3894" fg:w="5"/><text x="12.6691%" y="335.50"></text></g><g><title>meg`regex::exec::ExecReadOnly::new_pool::_{{closure}} (8 samples, 0.03%)</title><rect x="12.4382%" y="309" width="0.0255%" height="15" fill="rgb(208,100,47)" fg:x="3900" fg:w="8"/><text x="12.6882%" y="319.50"></text></g><g><title>meg`regex::dfa::Cache::new (8 samples, 0.03%)</title><rect x="12.4382%" y="293" width="0.0255%" height="15" fill="rgb(232,26,8)" fg:x="3900" fg:w="8"/><text x="12.6882%" y="303.50"></text></g><g><title>meg`regex::sparse::SparseSet::new (5 samples, 0.02%)</title><rect x="12.4478%" y="277" width="0.0159%" height="15" fill="rgb(216,166,38)" fg:x="3903" fg:w="5"/><text x="12.6978%" y="287.50"></text></g><g><title>meg`regex::pool::Pool&lt;T&gt;::new (10 samples, 0.03%)</title><rect x="12.4350%" y="325" width="0.0319%" height="15" fill="rgb(251,202,51)" fg:x="3899" fg:w="10"/><text x="12.6850%" y="335.50"></text></g><g><title>meg`regex::exec::ExecReadOnly::new_pool (12 samples, 0.04%)</title><rect x="12.4350%" y="341" width="0.0383%" height="15" fill="rgb(254,216,34)" fg:x="3899" fg:w="12"/><text x="12.6850%" y="351.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.03%)</title><rect x="12.4988%" y="293" width="0.0255%" height="15" fill="rgb(251,32,27)" fg:x="3919" fg:w="8"/><text x="12.7488%" y="303.50"></text></g><g><title>meg`&lt;regex_syntax::hir::Hir as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="12.5084%" y="277" width="0.0159%" height="15" fill="rgb(208,127,28)" fg:x="3922" fg:w="5"/><text x="12.7584%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.02%)</title><rect x="12.5084%" y="261" width="0.0159%" height="15" fill="rgb(224,137,22)" fg:x="3922" fg:w="5"/><text x="12.7584%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.02%)</title><rect x="12.5084%" y="245" width="0.0159%" height="15" fill="rgb(254,70,32)" fg:x="3922" fg:w="5"/><text x="12.7584%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.02%)</title><rect x="12.5084%" y="229" width="0.0159%" height="15" fill="rgb(229,75,37)" fg:x="3922" fg:w="5"/><text x="12.7584%" y="239.50"></text></g><g><title>meg`regex_syntax::hir::literal::Literals::union_prefixes (18 samples, 0.06%)</title><rect x="12.4860%" y="341" width="0.0574%" height="15" fill="rgb(252,64,23)" fg:x="3915" fg:w="18"/><text x="12.7360%" y="351.50"></text></g><g><title>meg`regex_syntax::hir::literal::prefixes (17 samples, 0.05%)</title><rect x="12.4892%" y="325" width="0.0542%" height="15" fill="rgb(232,162,48)" fg:x="3916" fg:w="17"/><text x="12.7392%" y="335.50"></text></g><g><title>meg`regex_syntax::hir::literal::prefixes (14 samples, 0.04%)</title><rect x="12.4988%" y="309" width="0.0446%" height="15" fill="rgb(246,160,12)" fg:x="3919" fg:w="14"/><text x="12.7488%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (4 samples, 0.01%)</title><rect x="12.5562%" y="229" width="0.0128%" height="15" fill="rgb(247,166,0)" fg:x="3937" fg:w="4"/><text x="12.8062%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (4 samples, 0.01%)</title><rect x="12.5562%" y="213" width="0.0128%" height="15" fill="rgb(249,219,21)" fg:x="3937" fg:w="4"/><text x="12.8062%" y="223.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="12.5562%" y="293" width="0.0159%" height="15" fill="rgb(205,209,3)" fg:x="3937" fg:w="5"/><text x="12.8062%" y="303.50"></text></g><g><title>meg`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.02%)</title><rect x="12.5562%" y="277" width="0.0159%" height="15" fill="rgb(243,44,1)" fg:x="3937" fg:w="5"/><text x="12.8062%" y="287.50"></text></g><g><title>meg`alloc::raw_vec::finish_grow (5 samples, 0.02%)</title><rect x="12.5562%" y="261" width="0.0159%" height="15" fill="rgb(206,159,16)" fg:x="3937" fg:w="5"/><text x="12.8062%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`realloc (5 samples, 0.02%)</title><rect x="12.5562%" y="245" width="0.0159%" height="15" fill="rgb(244,77,30)" fg:x="3937" fg:w="5"/><text x="12.8062%" y="255.50"></text></g><g><title>meg`core::ptr::drop_in_place&lt;regex_syntax::ast::Ast&gt; (11 samples, 0.04%)</title><rect x="12.5498%" y="325" width="0.0351%" height="15" fill="rgb(218,69,12)" fg:x="3935" fg:w="11"/><text x="12.7998%" y="335.50"></text></g><g><title>meg`&lt;regex_syntax::ast::Ast as core::ops::drop::Drop&gt;::drop (11 samples, 0.04%)</title><rect x="12.5498%" y="309" width="0.0351%" height="15" fill="rgb(212,87,7)" fg:x="3935" fg:w="11"/><text x="12.7998%" y="319.50"></text></g><g><title>meg`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.01%)</title><rect x="12.6168%" y="309" width="0.0128%" height="15" fill="rgb(245,114,25)" fg:x="3956" fg:w="4"/><text x="12.8668%" y="319.50"></text></g><g><title>meg`regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_counted_repetition (4 samples, 0.01%)</title><rect x="12.6359%" y="309" width="0.0128%" height="15" fill="rgb(210,61,42)" fg:x="3962" fg:w="4"/><text x="12.8859%" y="319.50"></text></g><g><title>meg`regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_set_class_item (4 samples, 0.01%)</title><rect x="12.6519%" y="293" width="0.0128%" height="15" fill="rgb(211,52,33)" fg:x="3967" fg:w="4"/><text x="12.9019%" y="303.50"></text></g><g><title>meg`regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_set_class (9 samples, 0.03%)</title><rect x="12.6519%" y="309" width="0.0287%" height="15" fill="rgb(234,58,33)" fg:x="3967" fg:w="9"/><text x="12.9019%" y="319.50"></text></g><g><title>meg`regex_syntax::ast::parse::ParserI&lt;P&gt;::pop_group (4 samples, 0.01%)</title><rect x="12.6806%" y="309" width="0.0128%" height="15" fill="rgb(220,115,36)" fg:x="3976" fg:w="4"/><text x="12.9306%" y="319.50"></text></g><g><title>meg`regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_with_comments (36 samples, 0.11%)</title><rect x="12.6009%" y="325" width="0.1148%" height="15" fill="rgb(243,153,54)" fg:x="3951" fg:w="36"/><text x="12.8509%" y="335.50"></text></g><g><title>meg`&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_class_set_item_post (9 samples, 0.03%)</title><rect x="12.7221%" y="309" width="0.0287%" height="15" fill="rgb(251,47,18)" fg:x="3989" fg:w="9"/><text x="12.9721%" y="319.50"></text></g><g><title>meg`regex_syntax::hir::interval::IntervalSet&lt;I&gt;::canonicalize (4 samples, 0.01%)</title><rect x="12.7380%" y="293" width="0.0128%" height="15" fill="rgb(242,102,42)" fg:x="3994" fg:w="4"/><text x="12.9880%" y="303.50"></text></g><g><title>meg`&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_post (10 samples, 0.03%)</title><rect x="12.7508%" y="309" width="0.0319%" height="15" fill="rgb(234,31,38)" fg:x="3998" fg:w="10"/><text x="13.0008%" y="319.50"></text></g><g><title>meg`regex::exec::ExecBuilder::build (197 samples, 0.63%)</title><rect x="12.1639%" y="357" width="0.6283%" height="15" fill="rgb(221,117,51)" fg:x="3814" fg:w="197"/><text x="12.4139%" y="367.50"></text></g><g><title>meg`regex_syntax::parser::Parser::parse (77 samples, 0.25%)</title><rect x="12.5466%" y="341" width="0.2456%" height="15" fill="rgb(212,20,18)" fg:x="3934" fg:w="77"/><text x="12.7966%" y="351.50"></text></g><g><title>meg`regex_syntax::ast::visitor::visit (24 samples, 0.08%)</title><rect x="12.7157%" y="325" width="0.0765%" height="15" fill="rgb(245,133,36)" fg:x="3987" fg:w="24"/><text x="12.9657%" y="335.50"></text></g><g><title>meg`kintaro::glyphy::_&lt;impl kintaro::renderable::GlyphyConfig&gt;::render (261 samples, 0.83%)</title><rect x="11.9662%" y="405" width="0.8324%" height="15" fill="rgb(212,6,19)" fg:x="3752" fg:w="261"/><text x="12.2162%" y="415.50"></text></g><g><title>meg`kintaro::glyphy::hex_str_to_rgba (252 samples, 0.80%)</title><rect x="11.9949%" y="389" width="0.8037%" height="15" fill="rgb(218,1,36)" fg:x="3761" fg:w="252"/><text x="12.2449%" y="399.50"></text></g><g><title>meg`regex::re_unicode::Regex::new (201 samples, 0.64%)</title><rect x="12.1576%" y="373" width="0.6410%" height="15" fill="rgb(246,84,54)" fg:x="3812" fg:w="201"/><text x="12.4076%" y="383.50"></text></g><g><title>meg`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_command_encoder (4 samples, 0.01%)</title><rect x="12.8050%" y="373" width="0.0128%" height="15" fill="rgb(242,110,6)" fg:x="4015" fg:w="4"/><text x="13.0550%" y="383.50"></text></g><g><title>meg`wgpu::Device::create_command_encoder (6 samples, 0.02%)</title><rect x="12.8018%" y="405" width="0.0191%" height="15" fill="rgb(214,47,5)" fg:x="4014" fg:w="6"/><text x="13.0518%" y="415.50"></text></g><g><title>meg`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_command_encoder (5 samples, 0.02%)</title><rect x="12.8050%" y="389" width="0.0159%" height="15" fill="rgb(218,159,25)" fg:x="4015" fg:w="5"/><text x="13.0550%" y="399.50"></text></g><g><title>meg`wgpu_glyph::GlyphBrush&lt;D,F,H&gt;::process_queued (4 samples, 0.01%)</title><rect x="12.8369%" y="405" width="0.0128%" height="15" fill="rgb(215,211,28)" fg:x="4025" fg:w="4"/><text x="13.0869%" y="415.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::preparePipeline (5 samples, 0.02%)</title><rect x="12.8783%" y="309" width="0.0159%" height="15" fill="rgb(238,59,32)" fg:x="4038" fg:w="5"/><text x="13.1283%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::writePSState (5 samples, 0.02%)</title><rect x="12.8975%" y="309" width="0.0159%" height="15" fill="rgb(226,82,3)" fg:x="4044" fg:w="5"/><text x="13.1475%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::programPipeline (22 samples, 0.07%)</title><rect x="12.8751%" y="325" width="0.0702%" height="15" fill="rgb(240,164,32)" fg:x="4037" fg:w="22"/><text x="13.1251%" y="335.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder drawPrimitives:vertexStart:vertexCount:instanceCount:] (26 samples, 0.08%)</title><rect x="12.8688%" y="357" width="0.0829%" height="15" fill="rgb(232,46,7)" fg:x="4035" fg:w="26"/><text x="13.1188%" y="367.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::drawPrimitives (25 samples, 0.08%)</title><rect x="12.8720%" y="341" width="0.0797%" height="15" fill="rgb(229,129,53)" fg:x="4036" fg:w="25"/><text x="13.1220%" y="351.50"></text></g><g><title>meg`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::finish (13 samples, 0.04%)</title><rect x="12.9836%" y="357" width="0.0415%" height="15" fill="rgb(234,188,29)" fg:x="4071" fg:w="13"/><text x="13.2336%" y="367.50"></text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::end_render_pass (10 samples, 0.03%)</title><rect x="12.9931%" y="341" width="0.0319%" height="15" fill="rgb(246,141,4)" fg:x="4074" fg:w="10"/><text x="13.2431%" y="351.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder endEncoding] (9 samples, 0.03%)</title><rect x="12.9963%" y="325" width="0.0287%" height="15" fill="rgb(229,23,39)" fg:x="4075" fg:w="9"/><text x="13.2463%" y="335.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::IGAccelRenderCommandEncoder (5 samples, 0.02%)</title><rect x="13.0314%" y="277" width="0.0159%" height="15" fill="rgb(206,12,3)" fg:x="4086" fg:w="5"/><text x="13.2814%" y="287.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::initializeHWState (4 samples, 0.01%)</title><rect x="13.0506%" y="261" width="0.0128%" height="15" fill="rgb(252,226,20)" fg:x="4092" fg:w="4"/><text x="13.3006%" y="271.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::initializeRenderPassState (5 samples, 0.02%)</title><rect x="13.0633%" y="261" width="0.0159%" height="15" fill="rgb(216,123,35)" fg:x="4096" fg:w="5"/><text x="13.3133%" y="271.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IntelStateHeaps::initialize (6 samples, 0.02%)</title><rect x="13.0824%" y="261" width="0.0191%" height="15" fill="rgb(212,68,40)" fg:x="4102" fg:w="6"/><text x="13.3324%" y="271.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IntelStateHeaps::acquireHeap (6 samples, 0.02%)</title><rect x="13.0824%" y="245" width="0.0191%" height="15" fill="rgb(254,125,32)" fg:x="4102" fg:w="6"/><text x="13.3324%" y="255.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::initialize (19 samples, 0.06%)</title><rect x="13.0474%" y="277" width="0.0606%" height="15" fill="rgb(253,97,22)" fg:x="4091" fg:w="19"/><text x="13.2974%" y="287.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer renderCommandEncoderWithDescriptor:] (27 samples, 0.09%)</title><rect x="13.0314%" y="309" width="0.0861%" height="15" fill="rgb(241,101,14)" fg:x="4086" fg:w="27"/><text x="13.2814%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder initWithCommandBuffer:descriptor:stateDescriptor:] (27 samples, 0.09%)</title><rect x="13.0314%" y="293" width="0.0861%" height="15" fill="rgb(238,103,29)" fg:x="4086" fg:w="27"/><text x="13.2814%" y="303.50"></text></g><g><title>meg`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (35 samples, 0.11%)</title><rect x="13.0250%" y="357" width="0.1116%" height="15" fill="rgb(233,195,47)" fg:x="4084" fg:w="35"/><text x="13.2750%" y="367.50"></text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_render_pass (34 samples, 0.11%)</title><rect x="13.0282%" y="341" width="0.1084%" height="15" fill="rgb(246,218,30)" fg:x="4085" fg:w="34"/><text x="13.2782%" y="351.50"></text></g><g><title>meg`objc::rc::autorelease::autoreleasepool (33 samples, 0.11%)</title><rect x="13.0314%" y="325" width="0.1052%" height="15" fill="rgb(219,145,47)" fg:x="4086" fg:w="33"/><text x="13.2814%" y="335.50"></text></g><g><title>meg`wgpu_core::track::StatefulTrackerSubset::merge_extend (9 samples, 0.03%)</title><rect x="13.1399%" y="357" width="0.0287%" height="15" fill="rgb(243,12,26)" fg:x="4120" fg:w="9"/><text x="13.3899%" y="367.50"></text></g><g><title>meg`wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (8 samples, 0.03%)</title><rect x="13.1430%" y="341" width="0.0255%" height="15" fill="rgb(214,87,16)" fg:x="4121" fg:w="8"/><text x="13.3930%" y="351.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.01%)</title><rect x="13.1749%" y="325" width="0.0128%" height="15" fill="rgb(208,99,42)" fg:x="4131" fg:w="4"/><text x="13.4249%" y="335.50"></text></g><g><title>meg`metal::commandbuffer::CommandBufferRef::set_label (7 samples, 0.02%)</title><rect x="13.1749%" y="341" width="0.0223%" height="15" fill="rgb(253,99,2)" fg:x="4131" fg:w="7"/><text x="13.4249%" y="351.50"></text></g><g><title>Metal`-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (7 samples, 0.02%)</title><rect x="13.2036%" y="277" width="0.0223%" height="15" fill="rgb(220,168,23)" fg:x="4140" fg:w="7"/><text x="13.4536%" y="287.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (13 samples, 0.04%)</title><rect x="13.2036%" y="293" width="0.0415%" height="15" fill="rgb(242,38,24)" fg:x="4140" fg:w="13"/><text x="13.4536%" y="303.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (18 samples, 0.06%)</title><rect x="13.2004%" y="309" width="0.0574%" height="15" fill="rgb(225,182,9)" fg:x="4139" fg:w="18"/><text x="13.4504%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="13.2451%" y="293" width="0.0128%" height="15" fill="rgb(243,178,37)" fg:x="4153" fg:w="4"/><text x="13.4951%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.01%)</title><rect x="13.2451%" y="277" width="0.0128%" height="15" fill="rgb(232,139,19)" fg:x="4153" fg:w="4"/><text x="13.4951%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (4 samples, 0.01%)</title><rect x="13.2451%" y="261" width="0.0128%" height="15" fill="rgb(225,201,24)" fg:x="4153" fg:w="4"/><text x="13.4951%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (4 samples, 0.01%)</title><rect x="13.2451%" y="245" width="0.0128%" height="15" fill="rgb(221,47,46)" fg:x="4153" fg:w="4"/><text x="13.4951%" y="255.50"></text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (29 samples, 0.09%)</title><rect x="13.1686%" y="357" width="0.0925%" height="15" fill="rgb(249,23,13)" fg:x="4129" fg:w="29"/><text x="13.4186%" y="367.50"></text></g><g><title>meg`objc::rc::autorelease::autoreleasepool (20 samples, 0.06%)</title><rect x="13.1973%" y="341" width="0.0638%" height="15" fill="rgb(219,9,5)" fg:x="4138" fg:w="20"/><text x="13.4473%" y="351.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandQueue commandBufferWithUnretainedReferences] (20 samples, 0.06%)</title><rect x="13.1973%" y="325" width="0.0638%" height="15" fill="rgb(254,171,16)" fg:x="4138" fg:w="20"/><text x="13.4473%" y="335.50"></text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::set_bind_group (5 samples, 0.02%)</title><rect x="13.2610%" y="357" width="0.0159%" height="15" fill="rgb(230,171,20)" fg:x="4158" fg:w="5"/><text x="13.5110%" y="367.50"></text></g><g><title>meg`wgpu_core::command::render::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (137 samples, 0.44%)</title><rect x="12.8560%" y="373" width="0.4369%" height="15" fill="rgb(210,71,41)" fg:x="4031" fg:w="137"/><text x="13.1060%" y="383.50"></text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::set_render_pipeline (5 samples, 0.02%)</title><rect x="13.2770%" y="357" width="0.0159%" height="15" fill="rgb(206,173,20)" fg:x="4163" fg:w="5"/><text x="13.5270%" y="367.50"></text></g><g><title>meg`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (142 samples, 0.45%)</title><rect x="12.8496%" y="389" width="0.4529%" height="15" fill="rgb(233,88,34)" fg:x="4029" fg:w="142"/><text x="13.0996%" y="399.50"></text></g><g><title>meg`kintaro::glyphy::Glyphy::render (634 samples, 2.02%)</title><rect x="11.2837%" y="421" width="2.0220%" height="15" fill="rgb(223,209,46)" fg:x="3538" fg:w="634"/><text x="11.5337%" y="431.50">m..</text></g><g><title>meg`wgpu_glyph::pipeline::Pipeline&lt;()&gt;::draw (143 samples, 0.46%)</title><rect x="12.8496%" y="405" width="0.4561%" height="15" fill="rgb(250,43,18)" fg:x="4029" fg:w="143"/><text x="13.0996%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="13.3216%" y="405" width="0.0128%" height="15" fill="rgb(208,13,10)" fg:x="4177" fg:w="4"/><text x="13.5716%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.01%)</title><rect x="13.3216%" y="389" width="0.0128%" height="15" fill="rgb(212,200,36)" fg:x="4177" fg:w="4"/><text x="13.5716%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (4 samples, 0.01%)</title><rect x="13.3216%" y="373" width="0.0128%" height="15" fill="rgb(225,90,30)" fg:x="4177" fg:w="4"/><text x="13.5716%" y="383.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder setVertexBuffer:offset:atIndex:] (8 samples, 0.03%)</title><rect x="13.4939%" y="373" width="0.0255%" height="15" fill="rgb(236,182,39)" fg:x="4231" fg:w="8"/><text x="13.7439%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.01%)</title><rect x="13.5289%" y="373" width="0.0128%" height="15" fill="rgb(212,144,35)" fg:x="4242" fg:w="4"/><text x="13.7789%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.01%)</title><rect x="13.5449%" y="373" width="0.0128%" height="15" fill="rgb(228,63,44)" fg:x="4247" fg:w="4"/><text x="13.7949%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.02%)</title><rect x="13.6023%" y="357" width="0.0159%" height="15" fill="rgb(228,109,6)" fg:x="4265" fg:w="5"/><text x="13.8523%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.02%)</title><rect x="13.6023%" y="341" width="0.0159%" height="15" fill="rgb(238,117,24)" fg:x="4265" fg:w="5"/><text x="13.8523%" y="351.50"></text></g><g><title>meg`core::ptr::drop_in_place&lt;wgpu_core::track::StatefulTrackerSubset&gt; (13 samples, 0.04%)</title><rect x="13.5800%" y="373" width="0.0415%" height="15" fill="rgb(242,26,26)" fg:x="4258" fg:w="13"/><text x="13.8300%" y="383.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (8 samples, 0.03%)</title><rect x="13.6980%" y="325" width="0.0255%" height="15" fill="rgb(221,92,48)" fg:x="4295" fg:w="8"/><text x="13.9480%" y="335.50"></text></g><g><title>meg`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.02%)</title><rect x="13.7012%" y="309" width="0.0223%" height="15" fill="rgb(209,209,32)" fg:x="4296" fg:w="7"/><text x="13.9512%" y="319.50"></text></g><g><title>meg`alloc::raw_vec::finish_grow (6 samples, 0.02%)</title><rect x="13.7044%" y="293" width="0.0191%" height="15" fill="rgb(221,70,22)" fg:x="4297" fg:w="6"/><text x="13.9544%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.02%)</title><rect x="13.7044%" y="277" width="0.0191%" height="15" fill="rgb(248,145,5)" fg:x="4297" fg:w="6"/><text x="13.9544%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.02%)</title><rect x="13.7075%" y="261" width="0.0159%" height="15" fill="rgb(226,116,26)" fg:x="4298" fg:w="5"/><text x="13.9575%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.02%)</title><rect x="13.7075%" y="245" width="0.0159%" height="15" fill="rgb(244,5,17)" fg:x="4298" fg:w="5"/><text x="13.9575%" y="255.50"></text></g><g><title>meg`&lt;wgpu_core::track::texture::TextureState as wgpu_core::track::ResourceState&gt;::merge (10 samples, 0.03%)</title><rect x="13.6948%" y="341" width="0.0319%" height="15" fill="rgb(252,159,33)" fg:x="4294" fg:w="10"/><text x="13.9448%" y="351.50"></text></g><g><title>meg`wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers (40 samples, 0.13%)</title><rect x="13.6342%" y="373" width="0.1276%" height="15" fill="rgb(206,71,0)" fg:x="4275" fg:w="40"/><text x="13.8842%" y="383.50"></text></g><g><title>meg`wgpu_core::track::ResourceTracker&lt;S&gt;::merge_replace (38 samples, 0.12%)</title><rect x="13.6406%" y="357" width="0.1212%" height="15" fill="rgb(233,118,54)" fg:x="4277" fg:w="38"/><text x="13.8906%" y="367.50"></text></g><g><title>meg`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (9 samples, 0.03%)</title><rect x="13.7331%" y="341" width="0.0287%" height="15" fill="rgb(234,83,48)" fg:x="4306" fg:w="9"/><text x="13.9831%" y="351.50"></text></g><g><title>meg`wgpu_core::command::CommandEncoder&lt;A&gt;::close (6 samples, 0.02%)</title><rect x="13.7618%" y="373" width="0.0191%" height="15" fill="rgb(228,3,54)" fg:x="4315" fg:w="6"/><text x="14.0118%" y="383.50"></text></g><g><title>meg`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.02%)</title><rect x="13.7649%" y="357" width="0.0159%" height="15" fill="rgb(226,155,13)" fg:x="4316" fg:w="5"/><text x="14.0149%" y="367.50"></text></g><g><title>meg`alloc::raw_vec::finish_grow (5 samples, 0.02%)</title><rect x="13.7649%" y="341" width="0.0159%" height="15" fill="rgb(241,28,37)" fg:x="4316" fg:w="5"/><text x="14.0149%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`realloc (4 samples, 0.01%)</title><rect x="13.7681%" y="325" width="0.0128%" height="15" fill="rgb(233,93,10)" fg:x="4317" fg:w="4"/><text x="14.0181%" y="335.50"></text></g><g><title>meg`wgpu_core::command::bind::Binder::assign_group (4 samples, 0.01%)</title><rect x="13.7809%" y="373" width="0.0128%" height="15" fill="rgb(225,113,19)" fg:x="4321" fg:w="4"/><text x="14.0309%" y="383.50"></text></g><g><title>meg`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.01%)</title><rect x="13.8160%" y="357" width="0.0128%" height="15" fill="rgb(241,2,18)" fg:x="4332" fg:w="4"/><text x="14.0660%" y="367.50"></text></g><g><title>meg`alloc::raw_vec::finish_grow (4 samples, 0.01%)</title><rect x="13.8160%" y="341" width="0.0128%" height="15" fill="rgb(228,207,21)" fg:x="4332" fg:w="4"/><text x="14.0660%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="13.8160%" y="325" width="0.0128%" height="15" fill="rgb(213,211,35)" fg:x="4332" fg:w="4"/><text x="14.0660%" y="335.50"></text></g><g><title>meg`wgpu_core::command::bind::Binder::change_pipeline_layout (15 samples, 0.05%)</title><rect x="13.7937%" y="373" width="0.0478%" height="15" fill="rgb(209,83,10)" fg:x="4325" fg:w="15"/><text x="14.0437%" y="383.50"></text></g><g><title>meg`wgpu_core::command::bind::compat::Manager&lt;T&gt;::update_expectations (4 samples, 0.01%)</title><rect x="13.8287%" y="357" width="0.0128%" height="15" fill="rgb(209,164,1)" fg:x="4336" fg:w="4"/><text x="14.0787%" y="367.50"></text></g><g><title>meg`wgpu_core::command::query::QueryResetMap&lt;A&gt;::reset_queries (4 samples, 0.01%)</title><rect x="13.8511%" y="373" width="0.0128%" height="15" fill="rgb(213,184,43)" fg:x="4343" fg:w="4"/><text x="14.1011%" y="383.50"></text></g><g><title>CoreFoundation`_CFRelease (8 samples, 0.03%)</title><rect x="13.8830%" y="309" width="0.0255%" height="15" fill="rgb(231,61,34)" fg:x="4353" fg:w="8"/><text x="14.1330%" y="319.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel dealloc] (14 samples, 0.04%)</title><rect x="13.8798%" y="325" width="0.0446%" height="15" fill="rgb(235,75,3)" fg:x="4352" fg:w="14"/><text x="14.1298%" y="335.50"></text></g><g><title>Metal`-[_MTLCommandEncoder dealloc] (21 samples, 0.07%)</title><rect x="13.8734%" y="341" width="0.0670%" height="15" fill="rgb(220,106,47)" fg:x="4350" fg:w="21"/><text x="14.1234%" y="351.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder dealloc] (23 samples, 0.07%)</title><rect x="13.8702%" y="357" width="0.0734%" height="15" fill="rgb(210,196,33)" fg:x="4349" fg:w="23"/><text x="14.1202%" y="367.50"></text></g><g><title>meg`&lt;wgpu_core::track::texture::TextureState as wgpu_core::track::ResourceState&gt;::change (6 samples, 0.02%)</title><rect x="13.9563%" y="357" width="0.0191%" height="15" fill="rgb(229,154,42)" fg:x="4376" fg:w="6"/><text x="14.2063%" y="367.50"></text></g><g><title>meg`wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (12 samples, 0.04%)</title><rect x="13.9818%" y="357" width="0.0383%" height="15" fill="rgb(228,114,26)" fg:x="4384" fg:w="12"/><text x="14.2318%" y="367.50"></text></g><g><title>meg`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.02%)</title><rect x="14.0010%" y="341" width="0.0191%" height="15" fill="rgb(208,144,1)" fg:x="4390" fg:w="6"/><text x="14.2510%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.02%)</title><rect x="14.0041%" y="325" width="0.0159%" height="15" fill="rgb(239,112,37)" fg:x="4391" fg:w="5"/><text x="14.2541%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.02%)</title><rect x="14.0041%" y="309" width="0.0159%" height="15" fill="rgb(210,96,50)" fg:x="4391" fg:w="5"/><text x="14.2541%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (5 samples, 0.02%)</title><rect x="14.0041%" y="293" width="0.0159%" height="15" fill="rgb(222,178,2)" fg:x="4391" fg:w="5"/><text x="14.2541%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.02%)</title><rect x="14.0360%" y="309" width="0.0191%" height="15" fill="rgb(226,74,18)" fg:x="4401" fg:w="6"/><text x="14.2860%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::~IGAccelRenderCommandEncoder (11 samples, 0.04%)</title><rect x="14.0360%" y="325" width="0.0351%" height="15" fill="rgb(225,67,54)" fg:x="4401" fg:w="11"/><text x="14.2860%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_small (5 samples, 0.02%)</title><rect x="14.0552%" y="309" width="0.0159%" height="15" fill="rgb(251,92,32)" fg:x="4407" fg:w="5"/><text x="14.3052%" y="319.50"></text></g><g><title>Metal`-[MTLRenderPassColorAttachmentDescriptorArrayInternal dealloc] (5 samples, 0.02%)</title><rect x="14.0711%" y="293" width="0.0159%" height="15" fill="rgb(228,149,22)" fg:x="4412" fg:w="5"/><text x="14.3211%" y="303.50"></text></g><g><title>Metal`-[MTLRenderPassDescriptorInternal dealloc] (12 samples, 0.04%)</title><rect x="14.0711%" y="309" width="0.0383%" height="15" fill="rgb(243,54,13)" fg:x="4412" fg:w="12"/><text x="14.3211%" y="319.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.02%)</title><rect x="14.1094%" y="309" width="0.0159%" height="15" fill="rgb(243,180,28)" fg:x="4424" fg:w="5"/><text x="14.3594%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGRenderPass::~IGRenderPass (19 samples, 0.06%)</title><rect x="14.0711%" y="325" width="0.0606%" height="15" fill="rgb(208,167,24)" fg:x="4412" fg:w="19"/><text x="14.3211%" y="335.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`void IntelCommandBuffer::commit&lt;(IntelConstants::eEngineID)1&gt; (14 samples, 0.04%)</title><rect x="14.1349%" y="325" width="0.0446%" height="15" fill="rgb(245,73,45)" fg:x="4432" fg:w="14"/><text x="14.3849%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.03%)</title><rect x="14.1477%" y="309" width="0.0319%" height="15" fill="rgb(237,203,48)" fg:x="4436" fg:w="10"/><text x="14.3977%" y="319.50"></text></g><g><title>Metal`-[MTLIOAccelCommandEncoder endEncoding] (8 samples, 0.03%)</title><rect x="14.1796%" y="325" width="0.0255%" height="15" fill="rgb(211,197,16)" fg:x="4446" fg:w="8"/><text x="14.4296%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.02%)</title><rect x="14.2306%" y="325" width="0.0191%" height="15" fill="rgb(243,99,51)" fg:x="4462" fg:w="6"/><text x="14.4806%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`madvise (223 samples, 0.71%)</title><rect x="14.2593%" y="309" width="0.7112%" height="15" fill="rgb(215,123,29)" fg:x="4471" fg:w="223"/><text x="14.5093%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (227 samples, 0.72%)</title><rect x="14.2497%" y="325" width="0.7240%" height="15" fill="rgb(239,186,37)" fg:x="4468" fg:w="227"/><text x="14.4997%" y="335.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder endEncoding] (297 samples, 0.95%)</title><rect x="14.0297%" y="341" width="0.9472%" height="15" fill="rgb(252,136,39)" fg:x="4399" fg:w="297"/><text x="14.2797%" y="351.50"></text></g><g><title>meg`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::finish (358 samples, 1.14%)</title><rect x="13.8638%" y="373" width="1.1418%" height="15" fill="rgb(223,213,32)" fg:x="4347" fg:w="358"/><text x="14.1138%" y="383.50"></text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::end_render_pass (306 samples, 0.98%)</title><rect x="14.0297%" y="357" width="0.9759%" height="15" fill="rgb(233,115,5)" fg:x="4399" fg:w="306"/><text x="14.2797%" y="367.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (4 samples, 0.01%)</title><rect x="14.9928%" y="341" width="0.0128%" height="15" fill="rgb(207,226,44)" fg:x="4701" fg:w="4"/><text x="15.2428%" y="351.50"></text></g><g><title>meg`wgpu_core::track::ResourceTracker&lt;S&gt;::use_extend (6 samples, 0.02%)</title><rect x="15.0439%" y="357" width="0.0191%" height="15" fill="rgb(208,126,0)" fg:x="4717" fg:w="6"/><text x="15.2939%" y="367.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.01%)</title><rect x="15.0789%" y="341" width="0.0128%" height="15" fill="rgb(244,66,21)" fg:x="4728" fg:w="4"/><text x="15.3289%" y="351.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IntelState::IntelState (30 samples, 0.10%)</title><rect x="15.1140%" y="293" width="0.0957%" height="15" fill="rgb(222,97,12)" fg:x="4739" fg:w="30"/><text x="15.3640%" y="303.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (10 samples, 0.03%)</title><rect x="15.2097%" y="293" width="0.0319%" height="15" fill="rgb(219,213,19)" fg:x="4769" fg:w="10"/><text x="15.4597%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.03%)</title><rect x="15.2097%" y="277" width="0.0319%" height="15" fill="rgb(252,169,30)" fg:x="4769" fg:w="10"/><text x="15.4597%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.03%)</title><rect x="15.2097%" y="261" width="0.0319%" height="15" fill="rgb(206,32,51)" fg:x="4769" fg:w="10"/><text x="15.4597%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (10 samples, 0.03%)</title><rect x="15.2097%" y="245" width="0.0319%" height="15" fill="rgb(250,172,42)" fg:x="4769" fg:w="10"/><text x="15.4597%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (7 samples, 0.02%)</title><rect x="15.2193%" y="229" width="0.0223%" height="15" fill="rgb(209,34,43)" fg:x="4772" fg:w="7"/><text x="15.4693%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (5 samples, 0.02%)</title><rect x="15.2256%" y="213" width="0.0159%" height="15" fill="rgb(223,11,35)" fg:x="4774" fg:w="5"/><text x="15.4756%" y="223.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer initContextStateDescriptorForEngine:] (47 samples, 0.15%)</title><rect x="15.1076%" y="309" width="0.1499%" height="15" fill="rgb(251,219,26)" fg:x="4737" fg:w="47"/><text x="15.3576%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.02%)</title><rect x="15.2416%" y="293" width="0.0159%" height="15" fill="rgb(231,119,3)" fg:x="4779" fg:w="5"/><text x="15.4916%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.02%)</title><rect x="15.2416%" y="277" width="0.0159%" height="15" fill="rgb(216,97,11)" fg:x="4779" fg:w="5"/><text x="15.4916%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.02%)</title><rect x="15.2416%" y="261" width="0.0159%" height="15" fill="rgb(223,59,9)" fg:x="4779" fg:w="5"/><text x="15.4916%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.01%)</title><rect x="15.2448%" y="245" width="0.0128%" height="15" fill="rgb(233,93,31)" fg:x="4780" fg:w="4"/><text x="15.4948%" y="255.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGRenderStateBindingTable::IGRenderStateBindingTable (23 samples, 0.07%)</title><rect x="15.3086%" y="277" width="0.0734%" height="15" fill="rgb(239,81,33)" fg:x="4800" fg:w="23"/><text x="15.5586%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (21 samples, 0.07%)</title><rect x="15.3149%" y="261" width="0.0670%" height="15" fill="rgb(213,120,34)" fg:x="4802" fg:w="21"/><text x="15.5649%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="15.3947%" y="261" width="0.0128%" height="15" fill="rgb(243,49,53)" fg:x="4827" fg:w="4"/><text x="15.6447%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.01%)</title><rect x="15.3947%" y="245" width="0.0128%" height="15" fill="rgb(247,216,33)" fg:x="4827" fg:w="4"/><text x="15.6447%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (4 samples, 0.01%)</title><rect x="15.3947%" y="229" width="0.0128%" height="15" fill="rgb(226,26,14)" fg:x="4827" fg:w="4"/><text x="15.6447%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (4 samples, 0.01%)</title><rect x="15.3947%" y="213" width="0.0128%" height="15" fill="rgb(215,49,53)" fg:x="4827" fg:w="4"/><text x="15.6447%" y="223.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGRenderStateBindless::IGRenderStateBindless (9 samples, 0.03%)</title><rect x="15.3819%" y="277" width="0.0287%" height="15" fill="rgb(245,162,40)" fg:x="4823" fg:w="9"/><text x="15.6319%" y="287.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGRenderStateSamplers::IGRenderStateSamplers (4 samples, 0.01%)</title><rect x="15.4170%" y="277" width="0.0128%" height="15" fill="rgb(229,68,17)" fg:x="4834" fg:w="4"/><text x="15.6670%" y="287.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::IGAccelRenderCommandEncoder (52 samples, 0.17%)</title><rect x="15.2799%" y="293" width="0.1658%" height="15" fill="rgb(213,182,10)" fg:x="4791" fg:w="52"/><text x="15.5299%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (4 samples, 0.01%)</title><rect x="15.4329%" y="277" width="0.0128%" height="15" fill="rgb(245,125,30)" fg:x="4839" fg:w="4"/><text x="15.6829%" y="287.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGRenderStateBindingTable::init (12 samples, 0.04%)</title><rect x="15.4808%" y="261" width="0.0383%" height="15" fill="rgb(232,202,2)" fg:x="4854" fg:w="12"/><text x="15.7308%" y="271.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`ShaderBindingStage::init (6 samples, 0.02%)</title><rect x="15.4999%" y="245" width="0.0191%" height="15" fill="rgb(237,140,51)" fg:x="4860" fg:w="6"/><text x="15.7499%" y="255.50"></text></g><g><title>libobjc.A.dylib`objc_retain (5 samples, 0.02%)</title><rect x="15.5031%" y="229" width="0.0159%" height="15" fill="rgb(236,157,25)" fg:x="4861" fg:w="5"/><text x="15.7531%" y="239.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::initializeHWState (29 samples, 0.09%)</title><rect x="15.4585%" y="277" width="0.0925%" height="15" fill="rgb(219,209,0)" fg:x="4847" fg:w="29"/><text x="15.7085%" y="287.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.01%)</title><rect x="15.5382%" y="261" width="0.0128%" height="15" fill="rgb(240,116,54)" fg:x="4872" fg:w="4"/><text x="15.7882%" y="271.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::setViewport (4 samples, 0.01%)</title><rect x="15.5669%" y="261" width="0.0128%" height="15" fill="rgb(216,10,36)" fg:x="4881" fg:w="4"/><text x="15.8169%" y="271.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGRenderPass::generateDepthStencilState (4 samples, 0.01%)</title><rect x="15.5924%" y="245" width="0.0128%" height="15" fill="rgb(222,72,44)" fg:x="4889" fg:w="4"/><text x="15.8424%" y="255.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGRenderPass::generateSurfaceState (7 samples, 0.02%)</title><rect x="15.6115%" y="245" width="0.0223%" height="15" fill="rgb(232,159,9)" fg:x="4895" fg:w="7"/><text x="15.8615%" y="255.50"></text></g><g><title>Metal`-[MTLRenderPassDescriptorInternal validate:width:height:] (5 samples, 0.02%)</title><rect x="15.6434%" y="245" width="0.0159%" height="15" fill="rgb(210,39,32)" fg:x="4905" fg:w="5"/><text x="15.8934%" y="255.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGRenderPass::initWithDescriptor (32 samples, 0.10%)</title><rect x="15.5828%" y="261" width="0.1021%" height="15" fill="rgb(216,194,45)" fg:x="4886" fg:w="32"/><text x="15.8328%" y="271.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (6 samples, 0.02%)</title><rect x="15.6658%" y="245" width="0.0191%" height="15" fill="rgb(218,18,35)" fg:x="4912" fg:w="6"/><text x="15.9158%" y="255.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::initializeRenderPassState (47 samples, 0.15%)</title><rect x="15.5509%" y="277" width="0.1499%" height="15" fill="rgb(207,83,51)" fg:x="4876" fg:w="47"/><text x="15.8009%" y="287.50"></text></g><g><title>IOAccelerator`IOAccelResourceListAddResource (9 samples, 0.03%)</title><rect x="15.7870%" y="245" width="0.0287%" height="15" fill="rgb(225,63,43)" fg:x="4950" fg:w="9"/><text x="16.0370%" y="255.50"></text></g><g><title>Metal`MTLResourceListAddResource (9 samples, 0.03%)</title><rect x="15.8188%" y="245" width="0.0287%" height="15" fill="rgb(207,57,36)" fg:x="4960" fg:w="9"/><text x="16.0688%" y="255.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IntelStateHeaps::acquireHeap (151 samples, 0.48%)</title><rect x="15.7200%" y="261" width="0.4816%" height="15" fill="rgb(216,99,33)" fg:x="4929" fg:w="151"/><text x="15.9700%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (111 samples, 0.35%)</title><rect x="15.8476%" y="245" width="0.3540%" height="15" fill="rgb(225,42,16)" fg:x="4969" fg:w="111"/><text x="16.0976%" y="255.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IntelStateHeaps::allocateHeap (11 samples, 0.04%)</title><rect x="16.2016%" y="261" width="0.0351%" height="15" fill="rgb(220,201,45)" fg:x="5080" fg:w="11"/><text x="16.4516%" y="271.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStorageAllocResourceAtIndex (10 samples, 0.03%)</title><rect x="16.2048%" y="245" width="0.0319%" height="15" fill="rgb(225,33,4)" fg:x="5081" fg:w="10"/><text x="16.4548%" y="255.50"></text></g><g><title>Metal`MTLIOAccelResourcePoolCreatePooledResource (10 samples, 0.03%)</title><rect x="16.2048%" y="229" width="0.0319%" height="15" fill="rgb(224,33,50)" fg:x="5081" fg:w="10"/><text x="16.4548%" y="239.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:options:args:argsSize:] (10 samples, 0.03%)</title><rect x="16.2048%" y="213" width="0.0319%" height="15" fill="rgb(246,198,51)" fg:x="5081" fg:w="10"/><text x="16.4548%" y="223.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:remoteStorageResource:options:args:argsSize:] (10 samples, 0.03%)</title><rect x="16.2048%" y="197" width="0.0319%" height="15" fill="rgb(205,22,4)" fg:x="5081" fg:w="10"/><text x="16.4548%" y="207.50"></text></g><g><title>IOAccelerator`IOAccelResourceCreate (9 samples, 0.03%)</title><rect x="16.2079%" y="181" width="0.0287%" height="15" fill="rgb(206,3,8)" fg:x="5082" fg:w="9"/><text x="16.4579%" y="191.50"></text></g><g><title>IOKit`IOConnectCallMethod (9 samples, 0.03%)</title><rect x="16.2079%" y="165" width="0.0287%" height="15" fill="rgb(251,23,15)" fg:x="5082" fg:w="9"/><text x="16.4579%" y="175.50"></text></g><g><title>IOKit`io_connect_method (9 samples, 0.03%)</title><rect x="16.2079%" y="149" width="0.0287%" height="15" fill="rgb(252,88,28)" fg:x="5082" fg:w="9"/><text x="16.4579%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (9 samples, 0.03%)</title><rect x="16.2079%" y="133" width="0.0287%" height="15" fill="rgb(212,127,14)" fg:x="5082" fg:w="9"/><text x="16.4579%" y="143.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.01%)</title><rect x="16.2462%" y="261" width="0.0128%" height="15" fill="rgb(247,145,37)" fg:x="5094" fg:w="4"/><text x="16.4962%" y="271.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IntelStateHeaps::initialize (183 samples, 0.58%)</title><rect x="15.7104%" y="277" width="0.5836%" height="15" fill="rgb(209,117,53)" fg:x="4926" fg:w="183"/><text x="15.9604%" y="287.50"></text></g><g><title>libobjc.A.dylib`objc_retain (11 samples, 0.04%)</title><rect x="16.2590%" y="261" width="0.0351%" height="15" fill="rgb(212,90,42)" fg:x="5098" fg:w="11"/><text x="16.5090%" y="271.50"></text></g><g><title>IOAccelerator`IOAccelResourceListAddResource (7 samples, 0.02%)</title><rect x="16.3100%" y="261" width="0.0223%" height="15" fill="rgb(218,164,37)" fg:x="5114" fg:w="7"/><text x="16.5600%" y="271.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStorageAllocResourceAtIndex (4 samples, 0.01%)</title><rect x="16.3323%" y="261" width="0.0128%" height="15" fill="rgb(246,65,34)" fg:x="5121" fg:w="4"/><text x="16.5823%" y="271.50"></text></g><g><title>Metal`MTLIOAccelResourcePoolCreatePooledResource (4 samples, 0.01%)</title><rect x="16.3323%" y="245" width="0.0128%" height="15" fill="rgb(231,100,33)" fg:x="5121" fg:w="4"/><text x="16.5823%" y="255.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:options:args:argsSize:] (4 samples, 0.01%)</title><rect x="16.3323%" y="229" width="0.0128%" height="15" fill="rgb(228,126,14)" fg:x="5121" fg:w="4"/><text x="16.5823%" y="239.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:remoteStorageResource:options:args:argsSize:] (4 samples, 0.01%)</title><rect x="16.3323%" y="213" width="0.0128%" height="15" fill="rgb(215,173,21)" fg:x="5121" fg:w="4"/><text x="16.5823%" y="223.50"></text></g><g><title>IOAccelerator`IOAccelResourceCreate (4 samples, 0.01%)</title><rect x="16.3323%" y="197" width="0.0128%" height="15" fill="rgb(210,6,40)" fg:x="5121" fg:w="4"/><text x="16.5823%" y="207.50"></text></g><g><title>IOKit`IOConnectCallMethod (4 samples, 0.01%)</title><rect x="16.3323%" y="181" width="0.0128%" height="15" fill="rgb(212,48,18)" fg:x="5121" fg:w="4"/><text x="16.5823%" y="191.50"></text></g><g><title>IOKit`io_connect_method (4 samples, 0.01%)</title><rect x="16.3323%" y="165" width="0.0128%" height="15" fill="rgb(230,214,11)" fg:x="5121" fg:w="4"/><text x="16.5823%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (4 samples, 0.01%)</title><rect x="16.3323%" y="149" width="0.0128%" height="15" fill="rgb(254,105,39)" fg:x="5121" fg:w="4"/><text x="16.5823%" y="159.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`bool IntelCommandBuffer::initialize&lt;(IntelConstants::eEngineID)1&gt; (28 samples, 0.09%)</title><rect x="16.2941%" y="277" width="0.0893%" height="15" fill="rgb(245,158,5)" fg:x="5109" fg:w="28"/><text x="16.5441%" y="287.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStorageBeginSegment (12 samples, 0.04%)</title><rect x="16.3451%" y="261" width="0.0383%" height="15" fill="rgb(249,208,11)" fg:x="5125" fg:w="12"/><text x="16.5951%" y="271.50"></text></g><g><title>Metal`_mtlIOAccelCommandBufferStorageBeginSegmentList (7 samples, 0.02%)</title><rect x="16.3610%" y="245" width="0.0223%" height="15" fill="rgb(210,39,28)" fg:x="5130" fg:w="7"/><text x="16.6110%" y="255.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::initialize (297 samples, 0.95%)</title><rect x="15.4457%" y="293" width="0.9472%" height="15" fill="rgb(211,56,53)" fg:x="4843" fg:w="297"/><text x="15.6957%" y="303.50"></text></g><g><title>Metal`-[_MTLCommandEncoder initWithCommandBuffer:] (4 samples, 0.01%)</title><rect x="16.4089%" y="261" width="0.0128%" height="15" fill="rgb(226,201,30)" fg:x="5145" fg:w="4"/><text x="16.6589%" y="271.50"></text></g><g><title>Metal`-[MTLIOAccelRenderCommandEncoder initWithCommandBuffer:descriptor:] (11 samples, 0.04%)</title><rect x="16.4089%" y="293" width="0.0351%" height="15" fill="rgb(239,101,34)" fg:x="5145" fg:w="11"/><text x="16.6589%" y="303.50"></text></g><g><title>Metal`-[MTLIOAccelCommandEncoder initWithCommandBuffer:] (11 samples, 0.04%)</title><rect x="16.4089%" y="277" width="0.0351%" height="15" fill="rgb(226,209,5)" fg:x="5145" fg:w="11"/><text x="16.6589%" y="287.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.02%)</title><rect x="16.4439%" y="293" width="0.0159%" height="15" fill="rgb(250,105,47)" fg:x="5156" fg:w="5"/><text x="16.6939%" y="303.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder initWithCommandBuffer:descriptor:stateDescriptor:] (379 samples, 1.21%)</title><rect x="15.2671%" y="309" width="1.2087%" height="15" fill="rgb(230,72,3)" fg:x="4787" fg:w="379"/><text x="15.5171%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.02%)</title><rect x="16.4599%" y="293" width="0.0159%" height="15" fill="rgb(232,218,39)" fg:x="5161" fg:w="5"/><text x="16.7099%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.02%)</title><rect x="16.4599%" y="277" width="0.0159%" height="15" fill="rgb(248,166,6)" fg:x="5161" fg:w="5"/><text x="16.7099%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`medium_malloc_should_clear (5 samples, 0.02%)</title><rect x="16.4599%" y="261" width="0.0159%" height="15" fill="rgb(247,89,20)" fg:x="5161" fg:w="5"/><text x="16.7099%" y="271.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer renderCommandEncoderWithDescriptor:] (436 samples, 1.39%)</title><rect x="15.1076%" y="325" width="1.3905%" height="15" fill="rgb(248,130,54)" fg:x="4737" fg:w="436"/><text x="15.3576%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (4 samples, 0.01%)</title><rect x="16.5173%" y="213" width="0.0128%" height="15" fill="rgb(234,196,4)" fg:x="5179" fg:w="4"/><text x="16.7673%" y="223.50"></text></g><g><title>Metal`+[MTLRenderPassSampleBufferAttachmentDescriptorArray allocWithZone:] (6 samples, 0.02%)</title><rect x="16.5141%" y="277" width="0.0191%" height="15" fill="rgb(250,143,31)" fg:x="5178" fg:w="6"/><text x="16.7641%" y="287.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (6 samples, 0.02%)</title><rect x="16.5141%" y="261" width="0.0191%" height="15" fill="rgb(211,110,34)" fg:x="5178" fg:w="6"/><text x="16.7641%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (5 samples, 0.02%)</title><rect x="16.5173%" y="245" width="0.0159%" height="15" fill="rgb(215,124,48)" fg:x="5179" fg:w="5"/><text x="16.7673%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (5 samples, 0.02%)</title><rect x="16.5173%" y="229" width="0.0159%" height="15" fill="rgb(216,46,13)" fg:x="5179" fg:w="5"/><text x="16.7673%" y="239.50"></text></g><g><title>libobjc.A.dylib`objc_alloc_init (13 samples, 0.04%)</title><rect x="16.4982%" y="293" width="0.0415%" height="15" fill="rgb(205,184,25)" fg:x="5173" fg:w="13"/><text x="16.7482%" y="303.50"></text></g><g><title>Metal`-[MTLRenderPassDescriptorInternal init] (16 samples, 0.05%)</title><rect x="16.4982%" y="309" width="0.0510%" height="15" fill="rgb(228,1,10)" fg:x="5173" fg:w="16"/><text x="16.7482%" y="319.50"></text></g><g><title>Metal`+[MTLRenderPassDescriptor allocWithZone:] (5 samples, 0.02%)</title><rect x="16.5492%" y="293" width="0.0159%" height="15" fill="rgb(213,116,27)" fg:x="5189" fg:w="5"/><text x="16.7992%" y="303.50"></text></g><g><title>libobjc.A.dylib`objc_alloc_init (6 samples, 0.02%)</title><rect x="16.5492%" y="309" width="0.0191%" height="15" fill="rgb(241,95,50)" fg:x="5189" fg:w="6"/><text x="16.7992%" y="319.50"></text></g><g><title>Metal`+[MTLRenderPassDescriptor renderPassDescriptor] (26 samples, 0.08%)</title><rect x="16.4982%" y="325" width="0.0829%" height="15" fill="rgb(238,48,32)" fg:x="5173" fg:w="26"/><text x="16.7482%" y="335.50"></text></g><g><title>libobjc.A.dylib`objc_alloc_init (11 samples, 0.04%)</title><rect x="16.6034%" y="309" width="0.0351%" height="15" fill="rgb(235,113,49)" fg:x="5206" fg:w="11"/><text x="16.8534%" y="319.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (4 samples, 0.01%)</title><rect x="16.6257%" y="293" width="0.0128%" height="15" fill="rgb(205,127,43)" fg:x="5213" fg:w="4"/><text x="16.8757%" y="303.50"></text></g><g><title>Metal`-[MTLRenderPassColorAttachmentDescriptorArrayInternal objectAtIndexedSubscript:] (19 samples, 0.06%)</title><rect x="16.5811%" y="325" width="0.0606%" height="15" fill="rgb(250,162,2)" fg:x="5199" fg:w="19"/><text x="16.8311%" y="335.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (5 samples, 0.02%)</title><rect x="16.6513%" y="325" width="0.0159%" height="15" fill="rgb(220,13,41)" fg:x="5221" fg:w="5"/><text x="16.9013%" y="335.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.01%)</title><rect x="16.6800%" y="309" width="0.0128%" height="15" fill="rgb(249,221,25)" fg:x="5230" fg:w="4"/><text x="16.9300%" y="319.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (12 samples, 0.04%)</title><rect x="16.7150%" y="261" width="0.0383%" height="15" fill="rgb(215,208,19)" fg:x="5241" fg:w="12"/><text x="16.9650%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (10 samples, 0.03%)</title><rect x="16.7214%" y="245" width="0.0319%" height="15" fill="rgb(236,175,2)" fg:x="5243" fg:w="10"/><text x="16.9714%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (9 samples, 0.03%)</title><rect x="16.7246%" y="229" width="0.0287%" height="15" fill="rgb(241,52,2)" fg:x="5244" fg:w="9"/><text x="16.9746%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (9 samples, 0.03%)</title><rect x="16.7246%" y="213" width="0.0287%" height="15" fill="rgb(248,140,14)" fg:x="5244" fg:w="9"/><text x="16.9746%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (9 samples, 0.03%)</title><rect x="16.7246%" y="197" width="0.0287%" height="15" fill="rgb(253,22,42)" fg:x="5244" fg:w="9"/><text x="16.9746%" y="207.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (21 samples, 0.07%)</title><rect x="16.6991%" y="293" width="0.0670%" height="15" fill="rgb(234,61,47)" fg:x="5236" fg:w="21"/><text x="16.9491%" y="303.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (21 samples, 0.07%)</title><rect x="16.6991%" y="277" width="0.0670%" height="15" fill="rgb(208,226,15)" fg:x="5236" fg:w="21"/><text x="16.9491%" y="287.50"></text></g><g><title>meg`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (556 samples, 1.77%)</title><rect x="15.0056%" y="373" width="1.7732%" height="15" fill="rgb(217,221,4)" fg:x="4705" fg:w="556"/><text x="15.2556%" y="383.50">m..</text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_render_pass (538 samples, 1.72%)</title><rect x="15.0630%" y="357" width="1.7158%" height="15" fill="rgb(212,174,34)" fg:x="4723" fg:w="538"/><text x="15.3130%" y="367.50"></text></g><g><title>meg`objc::rc::autorelease::autoreleasepool (527 samples, 1.68%)</title><rect x="15.0981%" y="341" width="1.6808%" height="15" fill="rgb(253,83,4)" fg:x="4734" fg:w="527"/><text x="15.3481%" y="351.50"></text></g><g><title>meg`metal::encoder::CommandEncoderRef::set_label (31 samples, 0.10%)</title><rect x="16.6800%" y="325" width="0.0989%" height="15" fill="rgb(250,195,49)" fg:x="5230" fg:w="31"/><text x="16.9300%" y="335.50"></text></g><g><title>meg`metal::nsstring_from_str (27 samples, 0.09%)</title><rect x="16.6927%" y="309" width="0.0861%" height="15" fill="rgb(241,192,25)" fg:x="5234" fg:w="27"/><text x="16.9427%" y="319.50"></text></g><g><title>meg`wgpu_core::command::render::State::is_ready (5 samples, 0.02%)</title><rect x="16.7788%" y="373" width="0.0159%" height="15" fill="rgb(208,124,10)" fg:x="5261" fg:w="5"/><text x="17.0288%" y="383.50"></text></g><g><title>meg`wgpu_core::hub::Storage&lt;T,I&gt;::get (10 samples, 0.03%)</title><rect x="16.8075%" y="373" width="0.0319%" height="15" fill="rgb(222,33,0)" fg:x="5270" fg:w="10"/><text x="17.0575%" y="383.50"></text></g><g><title>meg`&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (6 samples, 0.02%)</title><rect x="16.8649%" y="357" width="0.0191%" height="15" fill="rgb(234,209,28)" fg:x="5288" fg:w="6"/><text x="17.1149%" y="367.50"></text></g><g><title>meg`wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (19 samples, 0.06%)</title><rect x="16.8490%" y="373" width="0.0606%" height="15" fill="rgb(224,11,23)" fg:x="5283" fg:w="19"/><text x="17.0990%" y="383.50"></text></g><g><title>meg`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.03%)</title><rect x="16.8841%" y="357" width="0.0255%" height="15" fill="rgb(232,99,1)" fg:x="5294" fg:w="8"/><text x="17.1341%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.02%)</title><rect x="16.8904%" y="341" width="0.0191%" height="15" fill="rgb(237,95,45)" fg:x="5296" fg:w="6"/><text x="17.1404%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.02%)</title><rect x="16.8936%" y="325" width="0.0159%" height="15" fill="rgb(208,109,11)" fg:x="5297" fg:w="5"/><text x="17.1436%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.02%)</title><rect x="16.8936%" y="309" width="0.0159%" height="15" fill="rgb(216,190,48)" fg:x="5297" fg:w="5"/><text x="17.1436%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (4 samples, 0.01%)</title><rect x="16.8968%" y="293" width="0.0128%" height="15" fill="rgb(251,171,36)" fg:x="5298" fg:w="4"/><text x="17.1468%" y="303.50"></text></g><g><title>meg`&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="16.9415%" y="357" width="0.0128%" height="15" fill="rgb(230,62,22)" fg:x="5312" fg:w="4"/><text x="17.1915%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.02%)</title><rect x="16.9670%" y="325" width="0.0159%" height="15" fill="rgb(225,114,35)" fg:x="5320" fg:w="5"/><text x="17.2170%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.02%)</title><rect x="16.9670%" y="309" width="0.0159%" height="15" fill="rgb(215,118,42)" fg:x="5320" fg:w="5"/><text x="17.2170%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.01%)</title><rect x="16.9702%" y="293" width="0.0128%" height="15" fill="rgb(243,119,21)" fg:x="5321" fg:w="4"/><text x="17.2202%" y="303.50"></text></g><g><title>meg`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (9 samples, 0.03%)</title><rect x="16.9574%" y="357" width="0.0287%" height="15" fill="rgb(252,177,53)" fg:x="5317" fg:w="9"/><text x="17.2074%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.02%)</title><rect x="16.9670%" y="341" width="0.0191%" height="15" fill="rgb(237,209,29)" fg:x="5320" fg:w="6"/><text x="17.2170%" y="351.50"></text></g><g><title>meg`wgpu_core::track::ResourceTracker&lt;S&gt;::use_extend (27 samples, 0.09%)</title><rect x="16.9128%" y="373" width="0.0861%" height="15" fill="rgb(212,65,23)" fg:x="5303" fg:w="27"/><text x="17.1628%" y="383.50"></text></g><g><title>meg`wgpu_core::hub::Storage&lt;T,I&gt;::get (4 samples, 0.01%)</title><rect x="16.9861%" y="357" width="0.0128%" height="15" fill="rgb(230,222,46)" fg:x="5326" fg:w="4"/><text x="17.2361%" y="367.50"></text></g><g><title>meg`wgpu_core::track::StatefulTrackerSubset::merge_extend (13 samples, 0.04%)</title><rect x="16.9989%" y="373" width="0.0415%" height="15" fill="rgb(215,135,32)" fg:x="5330" fg:w="13"/><text x="17.2489%" y="383.50"></text></g><g><title>meg`wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (11 samples, 0.04%)</title><rect x="17.0053%" y="357" width="0.0351%" height="15" fill="rgb(246,101,22)" fg:x="5332" fg:w="11"/><text x="17.2553%" y="367.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer setLabel:] (6 samples, 0.02%)</title><rect x="17.0499%" y="357" width="0.0191%" height="15" fill="rgb(206,107,13)" fg:x="5346" fg:w="6"/><text x="17.2999%" y="367.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.01%)</title><rect x="17.0946%" y="341" width="0.0128%" height="15" fill="rgb(250,100,44)" fg:x="5360" fg:w="4"/><text x="17.3446%" y="351.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (6 samples, 0.02%)</title><rect x="17.1520%" y="293" width="0.0191%" height="15" fill="rgb(231,147,38)" fg:x="5378" fg:w="6"/><text x="17.4020%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (4 samples, 0.01%)</title><rect x="17.1583%" y="277" width="0.0128%" height="15" fill="rgb(229,8,40)" fg:x="5380" fg:w="4"/><text x="17.4083%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (4 samples, 0.01%)</title><rect x="17.1583%" y="261" width="0.0128%" height="15" fill="rgb(221,135,30)" fg:x="5380" fg:w="4"/><text x="17.4083%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (4 samples, 0.01%)</title><rect x="17.1583%" y="245" width="0.0128%" height="15" fill="rgb(249,193,18)" fg:x="5380" fg:w="4"/><text x="17.4083%" y="255.50"></text></g><g><title>CoreFoundation`__CFSearchStringROM (9 samples, 0.03%)</title><rect x="17.1743%" y="293" width="0.0287%" height="15" fill="rgb(209,133,39)" fg:x="5385" fg:w="9"/><text x="17.4243%" y="303.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (32 samples, 0.10%)</title><rect x="17.1137%" y="325" width="0.1021%" height="15" fill="rgb(232,100,14)" fg:x="5366" fg:w="32"/><text x="17.3637%" y="335.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (32 samples, 0.10%)</title><rect x="17.1137%" y="309" width="0.1021%" height="15" fill="rgb(224,185,1)" fg:x="5366" fg:w="32"/><text x="17.3637%" y="319.50"></text></g><g><title>meg`metal::commandbuffer::CommandBufferRef::set_label (41 samples, 0.13%)</title><rect x="17.0914%" y="357" width="0.1308%" height="15" fill="rgb(223,139,8)" fg:x="5359" fg:w="41"/><text x="17.3414%" y="367.50"></text></g><g><title>meg`metal::nsstring_from_str (34 samples, 0.11%)</title><rect x="17.1137%" y="341" width="0.1084%" height="15" fill="rgb(232,213,38)" fg:x="5366" fg:w="34"/><text x="17.3637%" y="351.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IntelStateHeaps::IntelStateHeaps (10 samples, 0.03%)</title><rect x="17.2700%" y="309" width="0.0319%" height="15" fill="rgb(207,94,22)" fg:x="5415" fg:w="10"/><text x="17.5200%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.01%)</title><rect x="17.3497%" y="181" width="0.0128%" height="15" fill="rgb(219,183,54)" fg:x="5440" fg:w="4"/><text x="17.5997%" y="191.50"></text></g><g><title>CoreFoundation`__CFAllocateObject (5 samples, 0.02%)</title><rect x="17.3497%" y="261" width="0.0159%" height="15" fill="rgb(216,185,54)" fg:x="5440" fg:w="5"/><text x="17.5997%" y="271.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (5 samples, 0.02%)</title><rect x="17.3497%" y="245" width="0.0159%" height="15" fill="rgb(254,217,39)" fg:x="5440" fg:w="5"/><text x="17.5997%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (5 samples, 0.02%)</title><rect x="17.3497%" y="229" width="0.0159%" height="15" fill="rgb(240,178,23)" fg:x="5440" fg:w="5"/><text x="17.5997%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (5 samples, 0.02%)</title><rect x="17.3497%" y="213" width="0.0159%" height="15" fill="rgb(218,11,47)" fg:x="5440" fg:w="5"/><text x="17.5997%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.02%)</title><rect x="17.3497%" y="197" width="0.0159%" height="15" fill="rgb(218,51,51)" fg:x="5440" fg:w="5"/><text x="17.5997%" y="207.50"></text></g><g><title>CoreFoundation`__NSArrayM_new (10 samples, 0.03%)</title><rect x="17.3369%" y="277" width="0.0319%" height="15" fill="rgb(238,126,27)" fg:x="5436" fg:w="10"/><text x="17.5869%" y="287.50"></text></g><g><title>Metal`-[_MTLCommandQueue getAndIncrementNumCommandBuffers] (4 samples, 0.01%)</title><rect x="17.3784%" y="277" width="0.0128%" height="15" fill="rgb(249,202,22)" fg:x="5449" fg:w="4"/><text x="17.6284%" y="287.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.01%)</title><rect x="17.4039%" y="277" width="0.0128%" height="15" fill="rgb(254,195,49)" fg:x="5457" fg:w="4"/><text x="17.6539%" y="287.50"></text></g><g><title>Metal`-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (38 samples, 0.12%)</title><rect x="17.3051%" y="293" width="0.1212%" height="15" fill="rgb(208,123,14)" fg:x="5426" fg:w="38"/><text x="17.5551%" y="303.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStoragePoolCreateStorage (8 samples, 0.03%)</title><rect x="17.4294%" y="293" width="0.0255%" height="15" fill="rgb(224,200,8)" fg:x="5465" fg:w="8"/><text x="17.6794%" y="303.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (9 samples, 0.03%)</title><rect x="17.4613%" y="293" width="0.0287%" height="15" fill="rgb(217,61,36)" fg:x="5475" fg:w="9"/><text x="17.7113%" y="303.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (70 samples, 0.22%)</title><rect x="17.3019%" y="309" width="0.2232%" height="15" fill="rgb(206,35,45)" fg:x="5425" fg:w="70"/><text x="17.5519%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (5 samples, 0.02%)</title><rect x="17.5506%" y="245" width="0.0159%" height="15" fill="rgb(217,65,33)" fg:x="5503" fg:w="5"/><text x="17.8006%" y="255.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (105 samples, 0.33%)</title><rect x="17.2508%" y="325" width="0.3349%" height="15" fill="rgb(222,158,48)" fg:x="5409" fg:w="105"/><text x="17.5008%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (17 samples, 0.05%)</title><rect x="17.5315%" y="309" width="0.0542%" height="15" fill="rgb(254,2,54)" fg:x="5497" fg:w="17"/><text x="17.7815%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (15 samples, 0.05%)</title><rect x="17.5379%" y="293" width="0.0478%" height="15" fill="rgb(250,143,38)" fg:x="5499" fg:w="15"/><text x="17.7879%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (15 samples, 0.05%)</title><rect x="17.5379%" y="277" width="0.0478%" height="15" fill="rgb(248,25,0)" fg:x="5499" fg:w="15"/><text x="17.7879%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (13 samples, 0.04%)</title><rect x="17.5443%" y="261" width="0.0415%" height="15" fill="rgb(206,152,27)" fg:x="5501" fg:w="13"/><text x="17.7943%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (4 samples, 0.01%)</title><rect x="17.5730%" y="245" width="0.0128%" height="15" fill="rgb(240,77,30)" fg:x="5510" fg:w="4"/><text x="17.8230%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (4 samples, 0.01%)</title><rect x="17.6176%" y="261" width="0.0128%" height="15" fill="rgb(231,5,3)" fg:x="5524" fg:w="4"/><text x="17.8676%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.04%)</title><rect x="17.5985%" y="277" width="0.0351%" height="15" fill="rgb(207,226,32)" fg:x="5518" fg:w="11"/><text x="17.8485%" y="287.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (12 samples, 0.04%)</title><rect x="17.5985%" y="325" width="0.0383%" height="15" fill="rgb(222,207,47)" fg:x="5518" fg:w="12"/><text x="17.8485%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (12 samples, 0.04%)</title><rect x="17.5985%" y="309" width="0.0383%" height="15" fill="rgb(229,115,45)" fg:x="5518" fg:w="12"/><text x="17.8485%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.04%)</title><rect x="17.5985%" y="293" width="0.0383%" height="15" fill="rgb(224,191,6)" fg:x="5518" fg:w="12"/><text x="17.8485%" y="303.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandQueue commandBufferWithUnretainedReferences] (128 samples, 0.41%)</title><rect x="17.2413%" y="341" width="0.4082%" height="15" fill="rgb(230,227,24)" fg:x="5406" fg:w="128"/><text x="17.4913%" y="351.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (5 samples, 0.02%)</title><rect x="17.6495%" y="341" width="0.0159%" height="15" fill="rgb(228,80,19)" fg:x="5534" fg:w="5"/><text x="17.8995%" y="351.50"></text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (201 samples, 0.64%)</title><rect x="17.0435%" y="373" width="0.6410%" height="15" fill="rgb(247,229,0)" fg:x="5344" fg:w="201"/><text x="17.2935%" y="383.50"></text></g><g><title>meg`objc::rc::autorelease::autoreleasepool (142 samples, 0.45%)</title><rect x="17.2317%" y="357" width="0.4529%" height="15" fill="rgb(237,194,15)" fg:x="5403" fg:w="142"/><text x="17.4817%" y="367.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::preparePipeline (15 samples, 0.05%)</title><rect x="17.7547%" y="293" width="0.0478%" height="15" fill="rgb(219,203,20)" fg:x="5567" fg:w="15"/><text x="18.0047%" y="303.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::writeHSState (4 samples, 0.01%)</title><rect x="17.8090%" y="293" width="0.0128%" height="15" fill="rgb(234,128,8)" fg:x="5584" fg:w="4"/><text x="18.0590%" y="303.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt;, std::__1::__unordered_map_hasher&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt;, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, true&gt;, std::__1::__unordered_map_equal&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::hash&lt;unsigned int&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt; &gt; &gt;::__rehash (4 samples, 0.01%)</title><rect x="17.8472%" y="261" width="0.0128%" height="15" fill="rgb(248,202,8)" fg:x="5596" fg:w="4"/><text x="18.0972%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.02%)</title><rect x="17.8664%" y="197" width="0.0159%" height="15" fill="rgb(206,104,37)" fg:x="5602" fg:w="5"/><text x="18.1164%" y="207.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (8 samples, 0.03%)</title><rect x="17.8600%" y="261" width="0.0255%" height="15" fill="rgb(223,8,27)" fg:x="5600" fg:w="8"/><text x="18.1100%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.03%)</title><rect x="17.8600%" y="245" width="0.0255%" height="15" fill="rgb(216,217,28)" fg:x="5600" fg:w="8"/><text x="18.1100%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (8 samples, 0.03%)</title><rect x="17.8600%" y="229" width="0.0255%" height="15" fill="rgb(249,199,1)" fg:x="5600" fg:w="8"/><text x="18.1100%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (8 samples, 0.03%)</title><rect x="17.8600%" y="213" width="0.0255%" height="15" fill="rgb(240,85,17)" fg:x="5600" fg:w="8"/><text x="18.1100%" y="223.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`std::__1::pair&lt;std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt;, void*&gt;*&gt;, bool&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt;, std::__1::__unordered_map_hasher&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt;, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, true&gt;, std::__1::__unordered_map_equal&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::hash&lt;unsigned int&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt; &gt; &gt;::__emplace_unique_key_args&lt;unsigned int, std::__1::pair&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt; &gt;(unsigned int const&amp;, std::__1::pair (13 samples, 0.04%)</title><rect x="17.8472%" y="277" width="0.0415%" height="15" fill="rgb(206,108,45)" fg:x="5596" fg:w="13"/><text x="18.0972%" y="287.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::writePSState (22 samples, 0.07%)</title><rect x="17.8281%" y="293" width="0.0702%" height="15" fill="rgb(245,210,41)" fg:x="5590" fg:w="22"/><text x="18.0781%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.02%)</title><rect x="17.9078%" y="245" width="0.0223%" height="15" fill="rgb(206,13,37)" fg:x="5615" fg:w="7"/><text x="18.1578%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.02%)</title><rect x="17.9110%" y="229" width="0.0191%" height="15" fill="rgb(250,61,18)" fg:x="5616" fg:w="6"/><text x="18.1610%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (6 samples, 0.02%)</title><rect x="17.9110%" y="213" width="0.0191%" height="15" fill="rgb(235,172,48)" fg:x="5616" fg:w="6"/><text x="18.1610%" y="223.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`std::__1::pair&lt;std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt;, void*&gt;*&gt;, bool&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt;, std::__1::__unordered_map_hasher&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt;, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, true&gt;, std::__1::__unordered_map_equal&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::hash&lt;unsigned int&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt; &gt; &gt;::__emplace_unique_key_args&lt;unsigned int, std::__1::pair&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt; &gt;(unsigned int const&amp;, std::__1::pair (9 samples, 0.03%)</title><rect x="17.9046%" y="277" width="0.0287%" height="15" fill="rgb(249,201,17)" fg:x="5614" fg:w="9"/><text x="18.1546%" y="287.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (8 samples, 0.03%)</title><rect x="17.9078%" y="261" width="0.0255%" height="15" fill="rgb(219,208,6)" fg:x="5615" fg:w="8"/><text x="18.1578%" y="271.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::writeVSState (17 samples, 0.05%)</title><rect x="17.9046%" y="293" width="0.0542%" height="15" fill="rgb(248,31,23)" fg:x="5614" fg:w="17"/><text x="18.1546%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.03%)</title><rect x="17.9333%" y="277" width="0.0255%" height="15" fill="rgb(245,15,42)" fg:x="5623" fg:w="8"/><text x="18.1833%" y="287.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGRenderStateConstants::writeConstantState (12 samples, 0.04%)</title><rect x="17.9684%" y="293" width="0.0383%" height="15" fill="rgb(222,217,39)" fg:x="5634" fg:w="12"/><text x="18.2184%" y="303.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGRenderStateConstants::simplePush(AIR::SCompilerOutputCommon const*, IGBufferMemory (10 samples, 0.03%)</title><rect x="17.9748%" y="277" width="0.0319%" height="15" fill="rgb(210,219,27)" fg:x="5636" fg:w="10"/><text x="18.2248%" y="287.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGRenderStateVertexFetch::write (5 samples, 0.02%)</title><rect x="18.0163%" y="293" width="0.0159%" height="15" fill="rgb(252,166,36)" fg:x="5649" fg:w="5"/><text x="18.2663%" y="303.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`ShaderBindingStage::writePointerIf (5 samples, 0.02%)</title><rect x="18.0386%" y="293" width="0.0159%" height="15" fill="rgb(245,132,34)" fg:x="5656" fg:w="5"/><text x="18.2886%" y="303.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`ShaderBindingStage::updateBindingTable (5 samples, 0.02%)</title><rect x="18.0386%" y="277" width="0.0159%" height="15" fill="rgb(236,54,3)" fg:x="5656" fg:w="5"/><text x="18.2886%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.02%)</title><rect x="18.0386%" y="261" width="0.0159%" height="15" fill="rgb(241,173,43)" fg:x="5656" fg:w="5"/><text x="18.2886%" y="271.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`PixelShaderBindingStage::updateBindingTableData (9 samples, 0.03%)</title><rect x="18.0545%" y="277" width="0.0287%" height="15" fill="rgb(215,190,9)" fg:x="5661" fg:w="9"/><text x="18.3045%" y="287.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`ShaderBindingStage::updateBindingTableData (6 samples, 0.02%)</title><rect x="18.0832%" y="277" width="0.0191%" height="15" fill="rgb(242,101,16)" fg:x="5670" fg:w="6"/><text x="18.3332%" y="287.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`ShaderBindingStage::writeTableIf (16 samples, 0.05%)</title><rect x="18.0545%" y="293" width="0.0510%" height="15" fill="rgb(223,190,21)" fg:x="5661" fg:w="16"/><text x="18.3045%" y="303.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::programPipeline (130 samples, 0.41%)</title><rect x="17.7037%" y="309" width="0.4146%" height="15" fill="rgb(215,228,25)" fg:x="5551" fg:w="130"/><text x="17.9537%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::drawIndexedPrimitives (139 samples, 0.44%)</title><rect x="17.6910%" y="325" width="0.4433%" height="15" fill="rgb(225,36,22)" fg:x="5547" fg:w="139"/><text x="17.9410%" y="335.50"></text></g><g><title>IOAccelerator`IOAccelResourceListAddResource (4 samples, 0.01%)</title><rect x="18.1215%" y="309" width="0.0128%" height="15" fill="rgb(251,106,46)" fg:x="5682" fg:w="4"/><text x="18.3715%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:] (145 samples, 0.46%)</title><rect x="17.6878%" y="341" width="0.4624%" height="15" fill="rgb(208,90,1)" fg:x="5546" fg:w="145"/><text x="17.9378%" y="351.50"></text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::draw_indexed (147 samples, 0.47%)</title><rect x="17.6846%" y="373" width="0.4688%" height="15" fill="rgb(243,10,4)" fg:x="5545" fg:w="147"/><text x="17.9346%" y="383.50"></text></g><g><title>meg`metal::encoder::RenderCommandEncoderRef::draw_indexed_primitives_instanced (146 samples, 0.47%)</title><rect x="17.6878%" y="357" width="0.4656%" height="15" fill="rgb(212,137,27)" fg:x="5546" fg:w="146"/><text x="17.9378%" y="367.50"></text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::set_bind_group (14 samples, 0.04%)</title><rect x="18.1534%" y="373" width="0.0446%" height="15" fill="rgb(231,220,49)" fg:x="5692" fg:w="14"/><text x="18.4034%" y="383.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder setVertexBuffer:offset:atIndex:] (4 samples, 0.01%)</title><rect x="18.1853%" y="357" width="0.0128%" height="15" fill="rgb(237,96,20)" fg:x="5702" fg:w="4"/><text x="18.4353%" y="367.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGRenderStateBindingTable::set (5 samples, 0.02%)</title><rect x="18.2810%" y="341" width="0.0159%" height="15" fill="rgb(239,229,30)" fg:x="5732" fg:w="5"/><text x="18.5310%" y="351.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGRenderStateConstants::set (14 samples, 0.04%)</title><rect x="18.2969%" y="341" width="0.0446%" height="15" fill="rgb(219,65,33)" fg:x="5737" fg:w="14"/><text x="18.5469%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (13 samples, 0.04%)</title><rect x="18.3001%" y="325" width="0.0415%" height="15" fill="rgb(243,134,7)" fg:x="5738" fg:w="13"/><text x="18.5501%" y="335.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::setPipelineState (46 samples, 0.15%)</title><rect x="18.2204%" y="357" width="0.1467%" height="15" fill="rgb(216,177,54)" fg:x="5713" fg:w="46"/><text x="18.4704%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.03%)</title><rect x="18.3416%" y="341" width="0.0255%" height="15" fill="rgb(211,160,20)" fg:x="5751" fg:w="8"/><text x="18.5916%" y="351.50"></text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::set_render_pipeline (58 samples, 0.18%)</title><rect x="18.1981%" y="373" width="0.1850%" height="15" fill="rgb(239,85,39)" fg:x="5706" fg:w="58"/><text x="18.4481%" y="383.50"></text></g><g><title>meg`wgpu_core::command::render::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (1,576 samples, 5.03%)</title><rect x="13.3599%" y="389" width="5.0263%" height="15" fill="rgb(232,125,22)" fg:x="4189" fg:w="1576"/><text x="13.6099%" y="399.50">meg`wg..</text></g><g><title>meg`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (1,587 samples, 5.06%)</title><rect x="13.3440%" y="405" width="5.0614%" height="15" fill="rgb(244,57,34)" fg:x="4184" fg:w="1587"/><text x="13.5940%" y="415.50">meg`&lt;w..</text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.01%)</title><rect x="18.4117%" y="389" width="0.0128%" height="15" fill="rgb(214,203,32)" fg:x="5773" fg:w="4"/><text x="18.6617%" y="399.50"></text></g><g><title>meg`core::ptr::drop_in_place&lt;wgpu_core::command::render::RenderPass&gt; (10 samples, 0.03%)</title><rect x="18.4085%" y="405" width="0.0319%" height="15" fill="rgb(207,58,43)" fg:x="5772" fg:w="10"/><text x="18.6585%" y="415.50"></text></g><g><title>meg`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_begin_render_pass (9 samples, 0.03%)</title><rect x="18.4404%" y="389" width="0.0287%" height="15" fill="rgb(215,193,15)" fg:x="5782" fg:w="9"/><text x="18.6904%" y="399.50"></text></g><g><title>meg`wgpu_core::command::render::RenderPass::new (7 samples, 0.02%)</title><rect x="18.4468%" y="373" width="0.0223%" height="15" fill="rgb(232,15,44)" fg:x="5784" fg:w="7"/><text x="18.6968%" y="383.50"></text></g><g><title>meg`wgpu::CommandEncoder::begin_render_pass (11 samples, 0.04%)</title><rect x="18.4404%" y="405" width="0.0351%" height="15" fill="rgb(212,3,48)" fg:x="5782" fg:w="11"/><text x="18.6904%" y="415.50"></text></g><g><title>meg`wgpu::RenderPass::set_pipeline (4 samples, 0.01%)</title><rect x="18.4915%" y="405" width="0.0128%" height="15" fill="rgb(218,128,7)" fg:x="5798" fg:w="4"/><text x="18.7415%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (6 samples, 0.02%)</title><rect x="18.5297%" y="341" width="0.0191%" height="15" fill="rgb(226,216,39)" fg:x="5810" fg:w="6"/><text x="18.7797%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (4 samples, 0.01%)</title><rect x="18.5361%" y="325" width="0.0128%" height="15" fill="rgb(243,47,51)" fg:x="5812" fg:w="4"/><text x="18.7861%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`realloc (9 samples, 0.03%)</title><rect x="18.5234%" y="357" width="0.0287%" height="15" fill="rgb(241,183,40)" fg:x="5808" fg:w="9"/><text x="18.7734%" y="367.50"></text></g><g><title>meg`wgpu_core::command::render::RenderPass::set_index_buffer (13 samples, 0.04%)</title><rect x="18.5138%" y="405" width="0.0415%" height="15" fill="rgb(231,217,32)" fg:x="5805" fg:w="13"/><text x="18.7638%" y="415.50"></text></g><g><title>meg`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (13 samples, 0.04%)</title><rect x="18.5138%" y="389" width="0.0415%" height="15" fill="rgb(229,61,38)" fg:x="5805" fg:w="13"/><text x="18.7638%" y="399.50"></text></g><g><title>meg`alloc::raw_vec::finish_grow (11 samples, 0.04%)</title><rect x="18.5202%" y="373" width="0.0351%" height="15" fill="rgb(225,210,5)" fg:x="5807" fg:w="11"/><text x="18.7702%" y="383.50"></text></g><g><title>meg`kintaro::shared::render_pass::RenderPassInput::render (1,651 samples, 5.27%)</title><rect x="13.3089%" y="421" width="5.2655%" height="15" fill="rgb(231,79,45)" fg:x="4173" fg:w="1651"/><text x="13.5589%" y="431.50">meg`ki..</text></g><g><title>meg`wgpu_render_pass_set_pipeline (4 samples, 0.01%)</title><rect x="18.5616%" y="405" width="0.0128%" height="15" fill="rgb(224,100,7)" fg:x="5820" fg:w="4"/><text x="18.8116%" y="415.50"></text></g><g><title>meg`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.01%)</title><rect x="18.5616%" y="389" width="0.0128%" height="15" fill="rgb(241,198,18)" fg:x="5820" fg:w="4"/><text x="18.8116%" y="399.50"></text></g><g><title>meg`alloc::raw_vec::finish_grow (4 samples, 0.01%)</title><rect x="18.5616%" y="373" width="0.0128%" height="15" fill="rgb(252,97,53)" fg:x="5820" fg:w="4"/><text x="18.8116%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="18.5616%" y="357" width="0.0128%" height="15" fill="rgb(220,88,7)" fg:x="5820" fg:w="4"/><text x="18.8116%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.01%)</title><rect x="18.5616%" y="341" width="0.0128%" height="15" fill="rgb(213,176,14)" fg:x="5820" fg:w="4"/><text x="18.8116%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (4 samples, 0.01%)</title><rect x="18.5616%" y="325" width="0.0128%" height="15" fill="rgb(246,73,7)" fg:x="5820" fg:w="4"/><text x="18.8116%" y="335.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder drawPrimitives:vertexStart:vertexCount:] (5 samples, 0.02%)</title><rect x="18.5967%" y="373" width="0.0159%" height="15" fill="rgb(245,64,36)" fg:x="5831" fg:w="5"/><text x="18.8467%" y="383.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::drawPrimitives (5 samples, 0.02%)</title><rect x="18.5967%" y="357" width="0.0159%" height="15" fill="rgb(245,80,10)" fg:x="5831" fg:w="5"/><text x="18.8467%" y="367.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::programPipeline (5 samples, 0.02%)</title><rect x="18.5967%" y="341" width="0.0159%" height="15" fill="rgb(232,107,50)" fg:x="5831" fg:w="5"/><text x="18.8467%" y="351.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`ShaderBindingStage::writeTableIf (4 samples, 0.01%)</title><rect x="18.5999%" y="325" width="0.0128%" height="15" fill="rgb(253,3,0)" fg:x="5832" fg:w="4"/><text x="18.8499%" y="335.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder endEncoding] (36 samples, 0.11%)</title><rect x="18.6414%" y="341" width="0.1148%" height="15" fill="rgb(212,99,53)" fg:x="5845" fg:w="36"/><text x="18.8914%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (27 samples, 0.09%)</title><rect x="18.6701%" y="325" width="0.0861%" height="15" fill="rgb(249,111,54)" fg:x="5854" fg:w="27"/><text x="18.9201%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`madvise (27 samples, 0.09%)</title><rect x="18.6701%" y="309" width="0.0861%" height="15" fill="rgb(249,55,30)" fg:x="5854" fg:w="27"/><text x="18.9201%" y="319.50"></text></g><g><title>meg`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::finish (40 samples, 0.13%)</title><rect x="18.6318%" y="373" width="0.1276%" height="15" fill="rgb(237,47,42)" fg:x="5842" fg:w="40"/><text x="18.8818%" y="383.50"></text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::end_render_pass (37 samples, 0.12%)</title><rect x="18.6414%" y="357" width="0.1180%" height="15" fill="rgb(211,20,18)" fg:x="5845" fg:w="37"/><text x="18.8914%" y="367.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::programClearPipeline (5 samples, 0.02%)</title><rect x="18.7849%" y="245" width="0.0159%" height="15" fill="rgb(231,203,46)" fg:x="5890" fg:w="5"/><text x="19.0349%" y="255.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::processActions (6 samples, 0.02%)</title><rect x="18.7849%" y="261" width="0.0191%" height="15" fill="rgb(237,142,3)" fg:x="5890" fg:w="6"/><text x="19.0349%" y="271.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::initializeRenderPassState (10 samples, 0.03%)</title><rect x="18.7849%" y="277" width="0.0319%" height="15" fill="rgb(241,107,1)" fg:x="5890" fg:w="10"/><text x="19.0349%" y="287.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGRenderPass::initWithDescriptor (4 samples, 0.01%)</title><rect x="18.8040%" y="261" width="0.0128%" height="15" fill="rgb(229,83,13)" fg:x="5896" fg:w="4"/><text x="19.0540%" y="271.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IntelStateHeaps::acquireHeap (4 samples, 0.01%)</title><rect x="18.8168%" y="261" width="0.0128%" height="15" fill="rgb(241,91,40)" fg:x="5900" fg:w="4"/><text x="19.0668%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (4 samples, 0.01%)</title><rect x="18.8168%" y="245" width="0.0128%" height="15" fill="rgb(225,3,45)" fg:x="5900" fg:w="4"/><text x="19.0668%" y="255.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IntelStateHeaps::initialize (7 samples, 0.02%)</title><rect x="18.8168%" y="277" width="0.0223%" height="15" fill="rgb(244,223,14)" fg:x="5900" fg:w="7"/><text x="19.0668%" y="287.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::initialize (19 samples, 0.06%)</title><rect x="18.7817%" y="293" width="0.0606%" height="15" fill="rgb(224,124,37)" fg:x="5889" fg:w="19"/><text x="19.0317%" y="303.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder initWithCommandBuffer:descriptor:stateDescriptor:] (24 samples, 0.08%)</title><rect x="18.7721%" y="309" width="0.0765%" height="15" fill="rgb(251,171,30)" fg:x="5886" fg:w="24"/><text x="19.0221%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer renderCommandEncoderWithDescriptor:] (27 samples, 0.09%)</title><rect x="18.7657%" y="325" width="0.0861%" height="15" fill="rgb(236,46,54)" fg:x="5884" fg:w="27"/><text x="19.0157%" y="335.50"></text></g><g><title>meg`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (33 samples, 0.11%)</title><rect x="18.7594%" y="373" width="0.1052%" height="15" fill="rgb(245,213,5)" fg:x="5882" fg:w="33"/><text x="19.0094%" y="383.50"></text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_render_pass (31 samples, 0.10%)</title><rect x="18.7657%" y="357" width="0.0989%" height="15" fill="rgb(230,144,27)" fg:x="5884" fg:w="31"/><text x="19.0157%" y="367.50"></text></g><g><title>meg`objc::rc::autorelease::autoreleasepool (31 samples, 0.10%)</title><rect x="18.7657%" y="341" width="0.0989%" height="15" fill="rgb(220,86,6)" fg:x="5884" fg:w="31"/><text x="19.0157%" y="351.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (4 samples, 0.01%)</title><rect x="18.8965%" y="309" width="0.0128%" height="15" fill="rgb(240,20,13)" fg:x="5925" fg:w="4"/><text x="19.1465%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (6 samples, 0.02%)</title><rect x="18.8933%" y="325" width="0.0191%" height="15" fill="rgb(217,89,34)" fg:x="5924" fg:w="6"/><text x="19.1433%" y="335.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandQueue commandBufferWithUnretainedReferences] (8 samples, 0.03%)</title><rect x="18.8933%" y="341" width="0.0255%" height="15" fill="rgb(229,13,5)" fg:x="5924" fg:w="8"/><text x="19.1433%" y="351.50"></text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (12 samples, 0.04%)</title><rect x="18.8838%" y="373" width="0.0383%" height="15" fill="rgb(244,67,35)" fg:x="5921" fg:w="12"/><text x="19.1338%" y="383.50"></text></g><g><title>meg`objc::rc::autorelease::autoreleasepool (9 samples, 0.03%)</title><rect x="18.8933%" y="357" width="0.0287%" height="15" fill="rgb(221,40,2)" fg:x="5924" fg:w="9"/><text x="19.1433%" y="367.50"></text></g><g><title>meg`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (110 samples, 0.35%)</title><rect x="18.5808%" y="405" width="0.3508%" height="15" fill="rgb(237,157,21)" fg:x="5826" fg:w="110"/><text x="18.8308%" y="415.50"></text></g><g><title>meg`wgpu_core::command::render::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (107 samples, 0.34%)</title><rect x="18.5903%" y="389" width="0.3413%" height="15" fill="rgb(222,94,11)" fg:x="5829" fg:w="107"/><text x="18.8403%" y="399.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer commit] (4 samples, 0.01%)</title><rect x="18.9571%" y="341" width="0.0128%" height="15" fill="rgb(249,113,6)" fg:x="5944" fg:w="4"/><text x="19.2071%" y="351.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer commit] (4 samples, 0.01%)</title><rect x="18.9571%" y="325" width="0.0128%" height="15" fill="rgb(238,137,36)" fg:x="5944" fg:w="4"/><text x="19.2071%" y="335.50"></text></g><g><title>meg`&lt;wgpu_hal::metal::Queue as wgpu_hal::Queue&lt;wgpu_hal::metal::Api&gt;&gt;::submit (9 samples, 0.03%)</title><rect x="18.9443%" y="373" width="0.0287%" height="15" fill="rgb(210,102,26)" fg:x="5940" fg:w="9"/><text x="19.1943%" y="383.50"></text></g><g><title>meg`objc::rc::autorelease::autoreleasepool (6 samples, 0.02%)</title><rect x="18.9539%" y="357" width="0.0191%" height="15" fill="rgb(218,30,30)" fg:x="5943" fg:w="6"/><text x="19.2039%" y="367.50"></text></g><g><title>CoreFoundation`_CFRelease (55 samples, 0.18%)</title><rect x="18.9954%" y="309" width="0.1754%" height="15" fill="rgb(214,67,26)" fg:x="5956" fg:w="55"/><text x="19.2454%" y="319.50"></text></g><g><title>IOAccelerator`ioAccelResourceFinalize (55 samples, 0.18%)</title><rect x="18.9954%" y="293" width="0.1754%" height="15" fill="rgb(251,9,53)" fg:x="5956" fg:w="55"/><text x="19.2454%" y="303.50"></text></g><g><title>IOKit`IOConnectCallMethod (54 samples, 0.17%)</title><rect x="18.9986%" y="277" width="0.1722%" height="15" fill="rgb(228,204,25)" fg:x="5957" fg:w="54"/><text x="19.2486%" y="287.50"></text></g><g><title>IOKit`io_connect_method (54 samples, 0.17%)</title><rect x="18.9986%" y="261" width="0.1722%" height="15" fill="rgb(207,153,8)" fg:x="5957" fg:w="54"/><text x="19.2486%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (53 samples, 0.17%)</title><rect x="19.0018%" y="245" width="0.1690%" height="15" fill="rgb(242,9,16)" fg:x="5958" fg:w="53"/><text x="19.2518%" y="255.50"></text></g><g><title>Metal`-[MTLIOAccelResource dealloc] (60 samples, 0.19%)</title><rect x="18.9922%" y="325" width="0.1914%" height="15" fill="rgb(217,211,10)" fg:x="5955" fg:w="60"/><text x="19.2422%" y="335.50"></text></g><g><title>meg`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::cleanup (62 samples, 0.20%)</title><rect x="18.9890%" y="357" width="0.1977%" height="15" fill="rgb(219,228,52)" fg:x="5954" fg:w="62"/><text x="19.2390%" y="367.50"></text></g><g><title>Metal`-[MTLIOAccelBuffer dealloc] (61 samples, 0.19%)</title><rect x="18.9922%" y="341" width="0.1945%" height="15" fill="rgb(231,92,29)" fg:x="5955" fg:w="61"/><text x="19.2422%" y="351.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer dealloc] (4 samples, 0.01%)</title><rect x="19.1995%" y="309" width="0.0128%" height="15" fill="rgb(232,8,23)" fg:x="6020" fg:w="4"/><text x="19.4495%" y="319.50"></text></g><g><title>meg`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_submissions (9 samples, 0.03%)</title><rect x="19.1899%" y="357" width="0.0287%" height="15" fill="rgb(216,211,34)" fg:x="6017" fg:w="9"/><text x="19.4399%" y="367.50"></text></g><g><title>meg`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.03%)</title><rect x="19.1899%" y="341" width="0.0287%" height="15" fill="rgb(236,151,0)" fg:x="6017" fg:w="9"/><text x="19.4399%" y="351.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer dealloc] (9 samples, 0.03%)</title><rect x="19.1899%" y="325" width="0.0287%" height="15" fill="rgb(209,168,3)" fg:x="6017" fg:w="9"/><text x="19.4399%" y="335.50"></text></g><g><title>meg`wgpu_core::device::Device&lt;A&gt;::maintain (76 samples, 0.24%)</title><rect x="18.9826%" y="373" width="0.2424%" height="15" fill="rgb(208,129,28)" fg:x="5952" fg:w="76"/><text x="19.2326%" y="383.50"></text></g><g><title>meg`wgpu_core::device::queue::PendingWrites&lt;A&gt;::pre_submit (8 samples, 0.03%)</title><rect x="19.2282%" y="373" width="0.0255%" height="15" fill="rgb(229,78,22)" fg:x="6029" fg:w="8"/><text x="19.4782%" y="383.50"></text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::end_encoding (4 samples, 0.01%)</title><rect x="19.2410%" y="357" width="0.0128%" height="15" fill="rgb(228,187,13)" fg:x="6033" fg:w="4"/><text x="19.4910%" y="367.50"></text></g><g><title>meg`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (103 samples, 0.33%)</title><rect x="18.9348%" y="405" width="0.3285%" height="15" fill="rgb(240,119,24)" fg:x="5937" fg:w="103"/><text x="19.1848%" y="415.50"></text></g><g><title>meg`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (102 samples, 0.33%)</title><rect x="18.9380%" y="389" width="0.3253%" height="15" fill="rgb(209,194,42)" fg:x="5938" fg:w="102"/><text x="19.1880%" y="399.50"></text></g><g><title>meg`wgpu_core::device::queue::PendingWrites&lt;A&gt;::activate (7 samples, 0.02%)</title><rect x="19.2760%" y="373" width="0.0223%" height="15" fill="rgb(247,200,46)" fg:x="6044" fg:w="7"/><text x="19.5260%" y="383.50"></text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (6 samples, 0.02%)</title><rect x="19.2792%" y="357" width="0.0191%" height="15" fill="rgb(218,76,16)" fg:x="6045" fg:w="6"/><text x="19.5292%" y="367.50"></text></g><g><title>meg`objc::rc::autorelease::autoreleasepool (4 samples, 0.01%)</title><rect x="19.2856%" y="341" width="0.0128%" height="15" fill="rgb(225,21,48)" fg:x="6047" fg:w="4"/><text x="19.5356%" y="351.50"></text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::copy_buffer_to_buffer (7 samples, 0.02%)</title><rect x="19.3047%" y="373" width="0.0223%" height="15" fill="rgb(239,223,50)" fg:x="6053" fg:w="7"/><text x="19.5547%" y="383.50"></text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::metal::CommandEncoder&gt;::enter_blit (7 samples, 0.02%)</title><rect x="19.3047%" y="357" width="0.0223%" height="15" fill="rgb(244,45,21)" fg:x="6053" fg:w="7"/><text x="19.5547%" y="367.50"></text></g><g><title>meg`objc::rc::autorelease::autoreleasepool (6 samples, 0.02%)</title><rect x="19.3079%" y="341" width="0.0191%" height="15" fill="rgb(232,33,43)" fg:x="6054" fg:w="6"/><text x="19.5579%" y="351.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer blitCommandEncoder] (6 samples, 0.02%)</title><rect x="19.3079%" y="325" width="0.0191%" height="15" fill="rgb(209,8,3)" fg:x="6054" fg:w="6"/><text x="19.5579%" y="335.50"></text></g><g><title>IOAccelerator`IOAccelResourceCreate (29 samples, 0.09%)</title><rect x="19.3430%" y="277" width="0.0925%" height="15" fill="rgb(214,25,53)" fg:x="6065" fg:w="29"/><text x="19.5930%" y="287.50"></text></g><g><title>IOKit`IOConnectCallMethod (25 samples, 0.08%)</title><rect x="19.3558%" y="261" width="0.0797%" height="15" fill="rgb(254,186,54)" fg:x="6069" fg:w="25"/><text x="19.6058%" y="271.50"></text></g><g><title>IOKit`io_connect_method (25 samples, 0.08%)</title><rect x="19.3558%" y="245" width="0.0797%" height="15" fill="rgb(208,174,49)" fg:x="6069" fg:w="25"/><text x="19.6058%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (24 samples, 0.08%)</title><rect x="19.3590%" y="229" width="0.0765%" height="15" fill="rgb(233,191,51)" fg:x="6070" fg:w="24"/><text x="19.6090%" y="239.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:remoteStorageResource:options:args:argsSize:] (33 samples, 0.11%)</title><rect x="19.3366%" y="293" width="0.1052%" height="15" fill="rgb(222,134,10)" fg:x="6063" fg:w="33"/><text x="19.5866%" y="303.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelDevice newBufferWithLength:options:] (36 samples, 0.11%)</title><rect x="19.3366%" y="357" width="0.1148%" height="15" fill="rgb(230,226,20)" fg:x="6063" fg:w="36"/><text x="19.5866%" y="367.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:args:argsSize:deallocator:] (36 samples, 0.11%)</title><rect x="19.3366%" y="341" width="0.1148%" height="15" fill="rgb(251,111,25)" fg:x="6063" fg:w="36"/><text x="19.5866%" y="351.50"></text></g><g><title>Metal`-[MTLIOAccelBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:args:argsSize:deallocator:] (36 samples, 0.11%)</title><rect x="19.3366%" y="325" width="0.1148%" height="15" fill="rgb(224,40,46)" fg:x="6063" fg:w="36"/><text x="19.5866%" y="335.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:options:args:argsSize:] (36 samples, 0.11%)</title><rect x="19.3366%" y="309" width="0.1148%" height="15" fill="rgb(236,108,47)" fg:x="6063" fg:w="36"/><text x="19.5866%" y="319.50"></text></g><g><title>meg`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (62 samples, 0.20%)</title><rect x="19.2633%" y="405" width="0.1977%" height="15" fill="rgb(234,93,0)" fg:x="6040" fg:w="62"/><text x="19.5133%" y="415.50"></text></g><g><title>meg`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (62 samples, 0.20%)</title><rect x="19.2633%" y="389" width="0.1977%" height="15" fill="rgb(224,213,32)" fg:x="6040" fg:w="62"/><text x="19.5133%" y="399.50"></text></g><g><title>meg`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (40 samples, 0.13%)</title><rect x="19.3334%" y="373" width="0.1276%" height="15" fill="rgb(251,11,48)" fg:x="6062" fg:w="40"/><text x="19.5834%" y="383.50"></text></g><g><title>meg`kintaro::toy::Toy::toy_renderpass (282 samples, 0.90%)</title><rect x="18.5744%" y="421" width="0.8994%" height="15" fill="rgb(236,173,5)" fg:x="5824" fg:w="282"/><text x="18.8244%" y="431.50"></text></g><g><title>meg`wgpu::Device::create_command_encoder (14 samples, 0.04%)</title><rect x="19.4770%" y="421" width="0.0446%" height="15" fill="rgb(230,95,12)" fg:x="6107" fg:w="14"/><text x="19.7270%" y="431.50"></text></g><g><title>meg`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_command_encoder (12 samples, 0.04%)</title><rect x="19.4833%" y="405" width="0.0383%" height="15" fill="rgb(232,209,1)" fg:x="6109" fg:w="12"/><text x="19.7333%" y="415.50"></text></g><g><title>meg`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_command_encoder (8 samples, 0.03%)</title><rect x="19.4961%" y="389" width="0.0255%" height="15" fill="rgb(232,6,1)" fg:x="6113" fg:w="8"/><text x="19.7461%" y="399.50"></text></g><g><title>meg`&lt;kintaro::renderable::RenderableEnum as kintaro::renderable::Renderable&gt;::render_pass (5,080 samples, 16.20%)</title><rect x="3.3264%" y="437" width="16.2016%" height="15" fill="rgb(210,224,50)" fg:x="1043" fg:w="5080"/><text x="3.5764%" y="447.50">meg`&lt;kintaro::renderable:..</text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (4 samples, 0.01%)</title><rect x="19.5886%" y="421" width="0.0128%" height="15" fill="rgb(228,127,35)" fg:x="6142" fg:w="4"/><text x="19.8386%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.02%)</title><rect x="19.6364%" y="373" width="0.0159%" height="15" fill="rgb(245,102,45)" fg:x="6157" fg:w="5"/><text x="19.8864%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.02%)</title><rect x="19.6364%" y="357" width="0.0159%" height="15" fill="rgb(214,1,49)" fg:x="6157" fg:w="5"/><text x="19.8864%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.02%)</title><rect x="19.6364%" y="341" width="0.0159%" height="15" fill="rgb(226,163,40)" fg:x="6157" fg:w="5"/><text x="19.8864%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.02%)</title><rect x="19.6364%" y="325" width="0.0159%" height="15" fill="rgb(239,212,28)" fg:x="6157" fg:w="5"/><text x="19.8864%" y="335.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.04%)</title><rect x="19.6269%" y="405" width="0.0446%" height="15" fill="rgb(220,20,13)" fg:x="6154" fg:w="14"/><text x="19.8769%" y="415.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.04%)</title><rect x="19.6364%" y="389" width="0.0351%" height="15" fill="rgb(210,164,35)" fg:x="6157" fg:w="11"/><text x="19.8864%" y="399.50"></text></g><g><title>meg`&lt;alloc::string::String as core::clone::Clone&gt;::clone (6 samples, 0.02%)</title><rect x="19.6524%" y="373" width="0.0191%" height="15" fill="rgb(248,109,41)" fg:x="6162" fg:w="6"/><text x="19.9024%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.02%)</title><rect x="19.6556%" y="357" width="0.0159%" height="15" fill="rgb(238,23,50)" fg:x="6163" fg:w="5"/><text x="19.9056%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.01%)</title><rect x="19.6587%" y="341" width="0.0128%" height="15" fill="rgb(211,48,49)" fg:x="6164" fg:w="4"/><text x="19.9087%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (4 samples, 0.01%)</title><rect x="19.6587%" y="325" width="0.0128%" height="15" fill="rgb(223,36,21)" fg:x="6164" fg:w="4"/><text x="19.9087%" y="335.50"></text></g><g><title>meg`hashbrown::map::make_hash (6 samples, 0.02%)</title><rect x="19.6779%" y="405" width="0.0191%" height="15" fill="rgb(207,123,46)" fg:x="6170" fg:w="6"/><text x="19.9279%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (5 samples, 0.02%)</title><rect x="19.7385%" y="389" width="0.0159%" height="15" fill="rgb(240,218,32)" fg:x="6189" fg:w="5"/><text x="19.9885%" y="399.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.02%)</title><rect x="19.7544%" y="389" width="0.0159%" height="15" fill="rgb(252,5,43)" fg:x="6194" fg:w="5"/><text x="20.0044%" y="399.50"></text></g><g><title>meg`&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="19.7704%" y="389" width="0.0159%" height="15" fill="rgb(252,84,19)" fg:x="6199" fg:w="5"/><text x="20.0204%" y="399.50"></text></g><g><title>meg`opmap::OpMap&lt;T&gt;::drain (42 samples, 0.13%)</title><rect x="19.6970%" y="405" width="0.1339%" height="15" fill="rgb(243,152,39)" fg:x="6176" fg:w="42"/><text x="19.9470%" y="415.50"></text></g><g><title>meg`hashbrown::map::make_hash (11 samples, 0.04%)</title><rect x="19.7959%" y="389" width="0.0351%" height="15" fill="rgb(234,160,15)" fg:x="6207" fg:w="11"/><text x="20.0459%" y="399.50"></text></g><g><title>meg`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.02%)</title><rect x="19.8118%" y="373" width="0.0191%" height="15" fill="rgb(237,34,20)" fg:x="6212" fg:w="6"/><text x="20.0618%" y="383.50"></text></g><g><title>meg`&lt;kintaro::op_stream::OpReceiver as kintaro::op_stream::GetOps&gt;::get_batch (69 samples, 0.22%)</title><rect x="19.6141%" y="421" width="0.2201%" height="15" fill="rgb(229,97,13)" fg:x="6150" fg:w="69"/><text x="19.8641%" y="431.50"></text></g><g><title>meg`&lt;meg::instancer2::Instancer2 as kintaro::instance::instancer::Instancer&gt;::update_instance (7 samples, 0.02%)</title><rect x="19.8342%" y="421" width="0.0223%" height="15" fill="rgb(234,71,50)" fg:x="6219" fg:w="7"/><text x="20.0842%" y="431.50"></text></g><g><title>meg`&lt;meg::instancer::Instancer1 as kintaro::instance::instancer::Instancer&gt;::update_instance (9 samples, 0.03%)</title><rect x="19.8565%" y="421" width="0.0287%" height="15" fill="rgb(253,155,4)" fg:x="6226" fg:w="9"/><text x="20.1065%" y="431.50"></text></g><g><title>meg`&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (4 samples, 0.01%)</title><rect x="19.8852%" y="421" width="0.0128%" height="15" fill="rgb(222,185,37)" fg:x="6235" fg:w="4"/><text x="20.1352%" y="431.50"></text></g><g><title>meg`core::ptr::drop_in_place&lt;wgpu::Buffer&gt; (6 samples, 0.02%)</title><rect x="19.9011%" y="421" width="0.0191%" height="15" fill="rgb(251,177,13)" fg:x="6240" fg:w="6"/><text x="20.1511%" y="431.50"></text></g><g><title>libsystem_m.dylib`0x00007ff80cceef32 (22 samples, 0.07%)</title><rect x="20.0287%" y="405" width="0.0702%" height="15" fill="rgb(250,179,40)" fg:x="6280" fg:w="22"/><text x="20.2787%" y="415.50"></text></g><g><title>libsystem_m.dylib`0x00007ff80ccf1fd0 (271 samples, 0.86%)</title><rect x="20.0989%" y="405" width="0.8643%" height="15" fill="rgb(242,44,2)" fg:x="6302" fg:w="271"/><text x="20.3489%" y="415.50"></text></g><g><title>libsystem_m.dylib`0x00007ff80ccf20b0 (181 samples, 0.58%)</title><rect x="20.9632%" y="405" width="0.5773%" height="15" fill="rgb(216,177,13)" fg:x="6573" fg:w="181"/><text x="21.2132%" y="415.50"></text></g><g><title>libsystem_m.dylib`DYLD-STUB$$cosf (4 samples, 0.01%)</title><rect x="21.5404%" y="405" width="0.0128%" height="15" fill="rgb(216,106,43)" fg:x="6754" fg:w="4"/><text x="21.7904%" y="415.50"></text></g><g><title>libsystem_m.dylib`tanf (185 samples, 0.59%)</title><rect x="21.5627%" y="405" width="0.5900%" height="15" fill="rgb(216,183,2)" fg:x="6761" fg:w="185"/><text x="21.8127%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`medium_size (7 samples, 0.02%)</title><rect x="22.1528%" y="389" width="0.0223%" height="15" fill="rgb(249,75,3)" fg:x="6946" fg:w="7"/><text x="22.4028%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (7 samples, 0.02%)</title><rect x="22.1751%" y="389" width="0.0223%" height="15" fill="rgb(219,67,39)" fg:x="6953" fg:w="7"/><text x="22.4251%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (23 samples, 0.07%)</title><rect x="22.1528%" y="405" width="0.0734%" height="15" fill="rgb(253,228,2)" fg:x="6946" fg:w="23"/><text x="22.4028%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (7 samples, 0.02%)</title><rect x="22.2038%" y="389" width="0.0223%" height="15" fill="rgb(235,138,27)" fg:x="6962" fg:w="7"/><text x="22.4538%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (6 samples, 0.02%)</title><rect x="22.2070%" y="373" width="0.0191%" height="15" fill="rgb(236,97,51)" fg:x="6963" fg:w="6"/><text x="22.4570%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`madvise (406 samples, 1.29%)</title><rect x="22.2484%" y="389" width="1.2948%" height="15" fill="rgb(240,80,30)" fg:x="6976" fg:w="406"/><text x="22.4984%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (417 samples, 1.33%)</title><rect x="22.2261%" y="405" width="1.3299%" height="15" fill="rgb(230,178,19)" fg:x="6969" fg:w="417"/><text x="22.4761%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_small (6 samples, 0.02%)</title><rect x="23.5561%" y="405" width="0.0191%" height="15" fill="rgb(210,190,27)" fg:x="7386" fg:w="6"/><text x="23.8061%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`medium_malloc_should_clear (20 samples, 0.06%)</title><rect x="23.6103%" y="357" width="0.0638%" height="15" fill="rgb(222,107,31)" fg:x="7403" fg:w="20"/><text x="23.8603%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`medium_malloc_from_free_list (11 samples, 0.04%)</title><rect x="23.6390%" y="341" width="0.0351%" height="15" fill="rgb(216,127,34)" fg:x="7412" fg:w="11"/><text x="23.8890%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (43 samples, 0.14%)</title><rect x="23.5943%" y="389" width="0.1371%" height="15" fill="rgb(234,116,52)" fg:x="7398" fg:w="43"/><text x="23.8443%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (40 samples, 0.13%)</title><rect x="23.6039%" y="373" width="0.1276%" height="15" fill="rgb(222,124,15)" fg:x="7401" fg:w="40"/><text x="23.8539%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (18 samples, 0.06%)</title><rect x="23.6741%" y="357" width="0.0574%" height="15" fill="rgb(231,179,28)" fg:x="7423" fg:w="18"/><text x="23.9241%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (13 samples, 0.04%)</title><rect x="23.6900%" y="341" width="0.0415%" height="15" fill="rgb(226,93,45)" fg:x="7428" fg:w="13"/><text x="23.9400%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (5 samples, 0.02%)</title><rect x="23.7155%" y="325" width="0.0159%" height="15" fill="rgb(215,8,51)" fg:x="7436" fg:w="5"/><text x="23.9655%" y="335.50"></text></g><g><title>meg`&lt;cgmath::matrix::Matrix4&lt;S&gt; as core::ops::arith::Mul&gt;::mul (10 samples, 0.03%)</title><rect x="23.7315%" y="389" width="0.0319%" height="15" fill="rgb(223,106,5)" fg:x="7441" fg:w="10"/><text x="23.9815%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="24.2992%" y="341" width="0.0128%" height="15" fill="rgb(250,191,5)" fg:x="7619" fg:w="4"/><text x="24.5492%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.01%)</title><rect x="24.2992%" y="325" width="0.0128%" height="15" fill="rgb(242,132,44)" fg:x="7619" fg:w="4"/><text x="24.5492%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (4 samples, 0.01%)</title><rect x="24.2992%" y="309" width="0.0128%" height="15" fill="rgb(251,152,29)" fg:x="7619" fg:w="4"/><text x="24.5492%" y="319.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="24.2928%" y="373" width="0.0223%" height="15" fill="rgb(218,179,5)" fg:x="7617" fg:w="7"/><text x="24.5428%" y="383.50"></text></g><g><title>meg`&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="24.2992%" y="357" width="0.0159%" height="15" fill="rgb(227,67,19)" fg:x="7619" fg:w="5"/><text x="24.5492%" y="367.50"></text></g><g><title>meg`&lt;cgmath::matrix::Matrix4&lt;S&gt; as core::ops::arith::Mul&gt;::mul (529 samples, 1.69%)</title><rect x="24.3151%" y="373" width="1.6871%" height="15" fill="rgb(233,119,31)" fg:x="7624" fg:w="529"/><text x="24.5651%" y="383.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (758 samples, 2.42%)</title><rect x="23.5879%" y="405" width="2.4175%" height="15" fill="rgb(241,120,22)" fg:x="7396" fg:w="758"/><text x="23.8379%" y="415.50">me..</text></g><g><title>meg`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (703 samples, 2.24%)</title><rect x="23.7634%" y="389" width="2.2421%" height="15" fill="rgb(224,102,30)" fg:x="7451" fg:w="703"/><text x="24.0134%" y="399.50">m..</text></g><g><title>libdyld.dylib`tlv_get_addr (13 samples, 0.04%)</title><rect x="26.7485%" y="389" width="0.0415%" height="15" fill="rgb(210,164,37)" fg:x="8387" fg:w="13"/><text x="26.9985%" y="399.50"></text></g><g><title>meg`&lt;meg::instancer2::Instancer2 as kintaro::instance::instancer::Instancer&gt;::update_instance (261 samples, 0.83%)</title><rect x="26.0150%" y="405" width="0.8324%" height="15" fill="rgb(226,191,16)" fg:x="8157" fg:w="261"/><text x="26.2650%" y="415.50"></text></g><g><title>meg`rand::rngs::thread::thread_rng (18 samples, 0.06%)</title><rect x="26.7900%" y="389" width="0.0574%" height="15" fill="rgb(214,40,45)" fg:x="8400" fg:w="18"/><text x="27.0400%" y="399.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (8 samples, 0.03%)</title><rect x="27.3290%" y="389" width="0.0255%" height="15" fill="rgb(244,29,26)" fg:x="8569" fg:w="8"/><text x="27.5790%" y="399.50"></text></g><g><title>meg`&lt;meg::instancer::Instancer1 as kintaro::instance::instancer::Instancer&gt;::update_instance (176 samples, 0.56%)</title><rect x="26.8474%" y="405" width="0.5613%" height="15" fill="rgb(216,16,5)" fg:x="8418" fg:w="176"/><text x="27.0974%" y="415.50"></text></g><g><title>meg`rand::rngs::thread::thread_rng (17 samples, 0.05%)</title><rect x="27.3545%" y="389" width="0.0542%" height="15" fill="rgb(249,76,35)" fg:x="8577" fg:w="17"/><text x="27.6045%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (306 samples, 0.98%)</title><rect x="27.4406%" y="389" width="0.9759%" height="15" fill="rgb(207,11,44)" fg:x="8604" fg:w="306"/><text x="27.6906%" y="399.50"></text></g><g><title>meg`&lt;wgpu::BufferViewMut as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="28.4165%" y="389" width="0.0223%" height="15" fill="rgb(228,190,49)" fg:x="8910" fg:w="7"/><text x="28.6665%" y="399.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelBlitCommandEncoder copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:] (5 samples, 0.02%)</title><rect x="28.4867%" y="357" width="0.0159%" height="15" fill="rgb(214,173,12)" fg:x="8932" fg:w="5"/><text x="28.7367%" y="367.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelBlitCommandEncoder::updateBlitKernels (11 samples, 0.04%)</title><rect x="28.7195%" y="277" width="0.0351%" height="15" fill="rgb(218,26,35)" fg:x="9005" fg:w="11"/><text x="28.9695%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.03%)</title><rect x="28.7259%" y="261" width="0.0287%" height="15" fill="rgb(220,200,19)" fg:x="9007" fg:w="9"/><text x="28.9759%" y="271.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IntelStateHeaps::acquireHeap (15 samples, 0.05%)</title><rect x="28.7546%" y="245" width="0.0478%" height="15" fill="rgb(239,95,49)" fg:x="9016" fg:w="15"/><text x="29.0046%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (10 samples, 0.03%)</title><rect x="28.7705%" y="229" width="0.0319%" height="15" fill="rgb(235,85,53)" fg:x="9021" fg:w="10"/><text x="29.0205%" y="239.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelEncoderBase::getStateHeaps (16 samples, 0.05%)</title><rect x="28.7546%" y="277" width="0.0510%" height="15" fill="rgb(233,133,31)" fg:x="9016" fg:w="16"/><text x="29.0046%" y="287.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IntelStateHeaps::initialize (16 samples, 0.05%)</title><rect x="28.7546%" y="261" width="0.0510%" height="15" fill="rgb(218,25,20)" fg:x="9016" fg:w="16"/><text x="29.0046%" y="271.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGBL::CBHeapAlloc (5 samples, 0.02%)</title><rect x="28.8311%" y="261" width="0.0159%" height="15" fill="rgb(252,210,38)" fg:x="9040" fg:w="5"/><text x="29.0811%" y="271.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGBL::blit3d_prepare_commands (12 samples, 0.04%)</title><rect x="28.8152%" y="277" width="0.0383%" height="15" fill="rgb(242,134,21)" fg:x="9035" fg:w="12"/><text x="29.0652%" y="287.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGBL::shouldUse2DBlit (6 samples, 0.02%)</title><rect x="28.8566%" y="277" width="0.0191%" height="15" fill="rgb(213,28,48)" fg:x="9048" fg:w="6"/><text x="29.1066%" y="287.50"></text></g><g><title>IOAccelerator`IOAccelResourceListAddResource (7 samples, 0.02%)</title><rect x="28.8822%" y="277" width="0.0223%" height="15" fill="rgb(250,196,2)" fg:x="9056" fg:w="7"/><text x="29.1322%" y="287.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelBlitCommandEncoder::programBlit (90 samples, 0.29%)</title><rect x="28.6366%" y="293" width="0.2870%" height="15" fill="rgb(227,5,17)" fg:x="8979" fg:w="90"/><text x="28.8866%" y="303.50"></text></g><g><title>IOAccelerator`ioAccelResourceListAddNewGroupAndResource (6 samples, 0.02%)</title><rect x="28.9045%" y="277" width="0.0191%" height="15" fill="rgb(221,226,24)" fg:x="9063" fg:w="6"/><text x="29.1545%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (13 samples, 0.04%)</title><rect x="28.9555%" y="197" width="0.0415%" height="15" fill="rgb(211,5,48)" fg:x="9079" fg:w="13"/><text x="29.2055%" y="207.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (20 samples, 0.06%)</title><rect x="28.9364%" y="261" width="0.0638%" height="15" fill="rgb(219,150,6)" fg:x="9073" fg:w="20"/><text x="29.1864%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (20 samples, 0.06%)</title><rect x="28.9364%" y="245" width="0.0638%" height="15" fill="rgb(251,46,16)" fg:x="9073" fg:w="20"/><text x="29.1864%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (19 samples, 0.06%)</title><rect x="28.9396%" y="229" width="0.0606%" height="15" fill="rgb(220,204,40)" fg:x="9074" fg:w="19"/><text x="29.1896%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (18 samples, 0.06%)</title><rect x="28.9428%" y="213" width="0.0574%" height="15" fill="rgb(211,85,2)" fg:x="9075" fg:w="18"/><text x="29.1928%" y="223.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`std::__1::__split_buffer&lt;IGBL::BlitRectPair, std::__1::allocator&lt;IGBL::BlitRectPair&gt;&amp;&gt;::__split_buffer(unsigned long, unsigned long, std::__1::allocator (25 samples, 0.08%)</title><rect x="28.9332%" y="277" width="0.0797%" height="15" fill="rgb(229,17,7)" fg:x="9072" fg:w="25"/><text x="29.1832%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc (4 samples, 0.01%)</title><rect x="29.0002%" y="261" width="0.0128%" height="15" fill="rgb(239,72,28)" fg:x="9093" fg:w="4"/><text x="29.2502%" y="271.50"></text></g><g><title>libc+ (9 samples, 0.03%)</title><rect x="29.0129%" y="277" width="0.0287%" height="15" fill="rgb(230,47,54)" fg:x="9097" fg:w="9"/><text x="29.2629%" y="287.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`void std::__1::vector&lt;IGBL::BlitRectPair, std::__1::allocator&lt;IGBL::BlitRectPair&gt; &gt;::__push_back_slow_path&lt;IGBL::BlitRectPair const&amp;&gt; (38 samples, 0.12%)</title><rect x="28.9300%" y="293" width="0.1212%" height="15" fill="rgb(214,50,8)" fg:x="9071" fg:w="38"/><text x="29.1800%" y="303.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelBlitCommandEncoder::copyBufferToBufferInternal (144 samples, 0.46%)</title><rect x="28.6143%" y="309" width="0.4593%" height="15" fill="rgb(216,198,43)" fg:x="8972" fg:w="144"/><text x="28.8643%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelBlitCommandEncoder::copyBufferToBuffer (153 samples, 0.49%)</title><rect x="28.5983%" y="325" width="0.4880%" height="15" fill="rgb(234,20,35)" fg:x="8967" fg:w="153"/><text x="28.8483%" y="335.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelBlitCommandEncoder copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:] (177 samples, 0.56%)</title><rect x="28.5250%" y="341" width="0.5645%" height="15" fill="rgb(254,45,19)" fg:x="8944" fg:w="177"/><text x="28.7750%" y="351.50"></text></g><g><title>meg`metal::encoder::BlitCommandEncoderRef::copy_from_buffer (179 samples, 0.57%)</title><rect x="28.5218%" y="357" width="0.5709%" height="15" fill="rgb(219,14,44)" fg:x="8943" fg:w="179"/><text x="28.7718%" y="367.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IntelStateHeaps::IntelStateHeaps (4 samples, 0.01%)</title><rect x="29.1277%" y="293" width="0.0128%" height="15" fill="rgb(217,220,26)" fg:x="9133" fg:w="4"/><text x="29.3777%" y="303.50"></text></g><g><title>Metal`-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (7 samples, 0.02%)</title><rect x="29.1405%" y="277" width="0.0223%" height="15" fill="rgb(213,158,28)" fg:x="9137" fg:w="7"/><text x="29.3905%" y="287.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (10 samples, 0.03%)</title><rect x="29.1405%" y="293" width="0.0319%" height="15" fill="rgb(252,51,52)" fg:x="9137" fg:w="10"/><text x="29.3905%" y="303.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (18 samples, 0.06%)</title><rect x="29.1214%" y="309" width="0.0574%" height="15" fill="rgb(246,89,16)" fg:x="9131" fg:w="18"/><text x="29.3714%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandQueue commandBufferWithUnretainedReferences] (22 samples, 0.07%)</title><rect x="29.1214%" y="325" width="0.0702%" height="15" fill="rgb(216,158,49)" fg:x="9131" fg:w="22"/><text x="29.3714%" y="335.50"></text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (33 samples, 0.11%)</title><rect x="29.0990%" y="357" width="0.1052%" height="15" fill="rgb(236,107,19)" fg:x="9124" fg:w="33"/><text x="29.3490%" y="367.50"></text></g><g><title>meg`objc::rc::autorelease::autoreleasepool (26 samples, 0.08%)</title><rect x="29.1214%" y="341" width="0.0829%" height="15" fill="rgb(228,185,30)" fg:x="9131" fg:w="26"/><text x="29.3714%" y="351.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelBlitCommandEncoder::beginEncoding (5 samples, 0.02%)</title><rect x="29.2266%" y="293" width="0.0159%" height="15" fill="rgb(246,134,8)" fg:x="9164" fg:w="5"/><text x="29.4766%" y="303.50"></text></g><g><title>Metal`-[MTLIOAccelCommandEncoder initWithCommandBuffer:] (4 samples, 0.01%)</title><rect x="29.2425%" y="293" width="0.0128%" height="15" fill="rgb(214,143,50)" fg:x="9169" fg:w="4"/><text x="29.4925%" y="303.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelBlitCommandEncoder initWithCommandBuffer:stateDescriptor:] (17 samples, 0.05%)</title><rect x="29.2138%" y="309" width="0.0542%" height="15" fill="rgb(228,75,8)" fg:x="9160" fg:w="17"/><text x="29.4638%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer blitCommandEncoder] (25 samples, 0.08%)</title><rect x="29.2138%" y="325" width="0.0797%" height="15" fill="rgb(207,175,4)" fg:x="9160" fg:w="25"/><text x="29.4638%" y="335.50"></text></g><g><title>meg`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (268 samples, 0.85%)</title><rect x="28.4484%" y="373" width="0.8547%" height="15" fill="rgb(205,108,24)" fg:x="8920" fg:w="268"/><text x="28.6984%" y="383.50"></text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::metal::CommandEncoder&gt;::enter_blit (31 samples, 0.10%)</title><rect x="29.2043%" y="357" width="0.0989%" height="15" fill="rgb(244,120,49)" fg:x="9157" fg:w="31"/><text x="29.4543%" y="367.50"></text></g><g><title>meg`objc::rc::autorelease::autoreleasepool (29 samples, 0.09%)</title><rect x="29.2107%" y="341" width="0.0925%" height="15" fill="rgb(223,47,38)" fg:x="9159" fg:w="29"/><text x="29.4607%" y="351.50"></text></g><g><title>meg`wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (4 samples, 0.01%)</title><rect x="29.3031%" y="373" width="0.0128%" height="15" fill="rgb(229,179,11)" fg:x="9188" fg:w="4"/><text x="29.5531%" y="383.50"></text></g><g><title>meg`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (278 samples, 0.89%)</title><rect x="28.4388%" y="389" width="0.8866%" height="15" fill="rgb(231,122,1)" fg:x="8917" fg:w="278"/><text x="28.6888%" y="399.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$__bzero (4 samples, 0.01%)</title><rect x="29.3733%" y="373" width="0.0128%" height="15" fill="rgb(245,119,9)" fg:x="9210" fg:w="4"/><text x="29.6233%" y="383.50"></text></g><g><title>meg`&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="29.3861%" y="373" width="0.0128%" height="15" fill="rgb(241,163,25)" fg:x="9214" fg:w="4"/><text x="29.6361%" y="383.50"></text></g><g><title>meg`&lt;wgpu_core::init_tracker::InitTrackerDrain&lt;Idx&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="29.3988%" y="373" width="0.0128%" height="15" fill="rgb(217,214,3)" fg:x="9218" fg:w="4"/><text x="29.6488%" y="383.50"></text></g><g><title>meg`DYLD-STUB$$__bzero (4 samples, 0.01%)</title><rect x="29.4116%" y="373" width="0.0128%" height="15" fill="rgb(240,86,28)" fg:x="9222" fg:w="4"/><text x="29.6616%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.03%)</title><rect x="29.5423%" y="357" width="0.0255%" height="15" fill="rgb(215,47,9)" fg:x="9263" fg:w="8"/><text x="29.7923%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (7 samples, 0.02%)</title><rect x="29.5455%" y="341" width="0.0223%" height="15" fill="rgb(252,25,45)" fg:x="9264" fg:w="7"/><text x="29.7955%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (104 samples, 0.33%)</title><rect x="29.5742%" y="357" width="0.3317%" height="15" fill="rgb(251,164,9)" fg:x="9273" fg:w="104"/><text x="29.8242%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.01%)</title><rect x="29.9059%" y="357" width="0.0128%" height="15" fill="rgb(233,194,0)" fg:x="9377" fg:w="4"/><text x="30.1559%" y="367.50"></text></g><g><title>meg`&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="29.9251%" y="357" width="0.0223%" height="15" fill="rgb(249,111,24)" fg:x="9383" fg:w="7"/><text x="30.1751%" y="367.50"></text></g><g><title>meg`&lt;wgpu_core::init_tracker::InitTrackerDrain&lt;Idx&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.02%)</title><rect x="29.9474%" y="357" width="0.0159%" height="15" fill="rgb(250,223,3)" fg:x="9390" fg:w="5"/><text x="30.1974%" y="367.50"></text></g><g><title>meg`&lt;wgpu_core::init_tracker::InitTrackerDrain&lt;Idx&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.03%)</title><rect x="29.9793%" y="341" width="0.0287%" height="15" fill="rgb(236,178,37)" fg:x="9400" fg:w="9"/><text x="30.2293%" y="351.50"></text></g><g><title>meg`&lt;wgpu_core::init_tracker::InitTrackerDrain&lt;Idx&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.06%)</title><rect x="29.9633%" y="357" width="0.0606%" height="15" fill="rgb(241,158,50)" fg:x="9395" fg:w="19"/><text x="30.2133%" y="367.50"></text></g><g><title>meg`smallvec::SmallVec&lt;A&gt;::drain (5 samples, 0.02%)</title><rect x="30.0080%" y="341" width="0.0159%" height="15" fill="rgb(213,121,41)" fg:x="9409" fg:w="5"/><text x="30.2580%" y="351.50"></text></g><g><title>meg`wgpu_core::LifeGuard::add_ref (10 samples, 0.03%)</title><rect x="30.0335%" y="357" width="0.0319%" height="15" fill="rgb(240,92,3)" fg:x="9417" fg:w="10"/><text x="30.2835%" y="367.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (20 samples, 0.06%)</title><rect x="30.1515%" y="341" width="0.0638%" height="15" fill="rgb(205,123,3)" fg:x="9454" fg:w="20"/><text x="30.4015%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`malloc (5 samples, 0.02%)</title><rect x="30.2153%" y="341" width="0.0159%" height="15" fill="rgb(205,97,47)" fg:x="9474" fg:w="5"/><text x="30.4653%" y="351.50"></text></g><g><title>meg`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="30.2408%" y="341" width="0.0191%" height="15" fill="rgb(247,152,14)" fg:x="9482" fg:w="6"/><text x="30.4908%" y="351.50"></text></g><g><title>meg`wgpu_core::LifeGuard::add_ref (10 samples, 0.03%)</title><rect x="30.2695%" y="341" width="0.0319%" height="15" fill="rgb(248,195,53)" fg:x="9491" fg:w="10"/><text x="30.5195%" y="351.50"></text></g><g><title>meg`wgpu_core::LifeGuard::new (25 samples, 0.08%)</title><rect x="30.3014%" y="341" width="0.0797%" height="15" fill="rgb(226,201,16)" fg:x="9501" fg:w="25"/><text x="30.5514%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (25 samples, 0.08%)</title><rect x="30.3014%" y="325" width="0.0797%" height="15" fill="rgb(205,98,0)" fg:x="9501" fg:w="25"/><text x="30.5514%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (24 samples, 0.08%)</title><rect x="30.3046%" y="309" width="0.0765%" height="15" fill="rgb(214,191,48)" fg:x="9502" fg:w="24"/><text x="30.5546%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (24 samples, 0.08%)</title><rect x="30.3046%" y="293" width="0.0765%" height="15" fill="rgb(237,112,39)" fg:x="9502" fg:w="24"/><text x="30.5546%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (18 samples, 0.06%)</title><rect x="30.3237%" y="277" width="0.0574%" height="15" fill="rgb(247,203,27)" fg:x="9508" fg:w="18"/><text x="30.5737%" y="287.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelDevice getUniqueID:clampMax:] (5 samples, 0.02%)</title><rect x="30.6076%" y="293" width="0.0159%" height="15" fill="rgb(235,124,28)" fg:x="9597" fg:w="5"/><text x="30.8576%" y="303.50"></text></g><g><title>IOAccelerator`IOAccelResourceGetClientShared (4 samples, 0.01%)</title><rect x="30.6618%" y="261" width="0.0128%" height="15" fill="rgb(208,207,46)" fg:x="9614" fg:w="4"/><text x="30.9118%" y="271.50"></text></g><g><title>CoreFoundation`CFGetTypeID (6 samples, 0.02%)</title><rect x="30.7989%" y="245" width="0.0191%" height="15" fill="rgb(234,176,4)" fg:x="9657" fg:w="6"/><text x="31.0489%" y="255.50"></text></g><g><title>libobjc.A.dylib`object_setClass (4 samples, 0.01%)</title><rect x="31.0126%" y="197" width="0.0128%" height="15" fill="rgb(230,133,28)" fg:x="9724" fg:w="4"/><text x="31.2626%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (18 samples, 0.06%)</title><rect x="31.0477%" y="149" width="0.0574%" height="15" fill="rgb(211,137,40)" fg:x="9735" fg:w="18"/><text x="31.2977%" y="159.50"></text></g><g><title>IOAccelerator`_IOAccelResourceAlloc (39 samples, 0.12%)</title><rect x="30.9839%" y="229" width="0.1244%" height="15" fill="rgb(254,35,13)" fg:x="9715" fg:w="39"/><text x="31.2339%" y="239.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (35 samples, 0.11%)</title><rect x="30.9967%" y="213" width="0.1116%" height="15" fill="rgb(225,49,51)" fg:x="9719" fg:w="35"/><text x="31.2467%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (26 samples, 0.08%)</title><rect x="31.0254%" y="197" width="0.0829%" height="15" fill="rgb(251,10,15)" fg:x="9728" fg:w="26"/><text x="31.2754%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (26 samples, 0.08%)</title><rect x="31.0254%" y="181" width="0.0829%" height="15" fill="rgb(228,207,15)" fg:x="9728" fg:w="26"/><text x="31.2754%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (26 samples, 0.08%)</title><rect x="31.0254%" y="165" width="0.0829%" height="15" fill="rgb(241,99,19)" fg:x="9728" fg:w="26"/><text x="31.2754%" y="175.50"></text></g><g><title>IOKit`__chkstk_darwin (6 samples, 0.02%)</title><rect x="31.1178%" y="213" width="0.0191%" height="15" fill="rgb(207,104,49)" fg:x="9757" fg:w="6"/><text x="31.3678%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (14 samples, 0.04%)</title><rect x="31.2135%" y="197" width="0.0446%" height="15" fill="rgb(234,99,18)" fg:x="9787" fg:w="14"/><text x="31.4635%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (5,694 samples, 18.16%)</title><rect x="31.2582%" y="197" width="18.1598%" height="15" fill="rgb(213,191,49)" fg:x="9801" fg:w="5694"/><text x="31.5082%" y="207.50">libsystem_kernel.dylib`mach_..</text></g><g><title>IOKit`io_connect_method (5,772 samples, 18.41%)</title><rect x="31.1370%" y="213" width="18.4085%" height="15" fill="rgb(210,226,19)" fg:x="9763" fg:w="5772"/><text x="31.3870%" y="223.50">IOKit`io_connect_method</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (40 samples, 0.13%)</title><rect x="49.4180%" y="197" width="0.1276%" height="15" fill="rgb(229,97,18)" fg:x="15495" fg:w="40"/><text x="49.6680%" y="207.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (10 samples, 0.03%)</title><rect x="49.5583%" y="213" width="0.0319%" height="15" fill="rgb(211,167,15)" fg:x="15539" fg:w="10"/><text x="49.8083%" y="223.50"></text></g><g><title>IOKit`IOConnectCallMethod (5,803 samples, 18.51%)</title><rect x="31.1083%" y="229" width="18.5074%" height="15" fill="rgb(210,169,34)" fg:x="9754" fg:w="5803"/><text x="31.3583%" y="239.50">IOKit`IOConnectCallMethod</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.03%)</title><rect x="49.5902%" y="213" width="0.0255%" height="15" fill="rgb(241,121,31)" fg:x="15549" fg:w="8"/><text x="49.8402%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (102 samples, 0.33%)</title><rect x="49.6157%" y="229" width="0.3253%" height="15" fill="rgb(232,40,11)" fg:x="15557" fg:w="102"/><text x="49.8657%" y="239.50"></text></g><g><title>IOAccelerator`IOAccelResourceCreate (5,995 samples, 19.12%)</title><rect x="30.8244%" y="245" width="19.1198%" height="15" fill="rgb(205,86,26)" fg:x="9665" fg:w="5995"/><text x="31.0744%" y="255.50">IOAccelerator`IOAccelResourceC..</text></g><g><title>IOAccelerator`IOAccelResourceGetClientShared (18 samples, 0.06%)</title><rect x="49.9442%" y="245" width="0.0574%" height="15" fill="rgb(231,126,28)" fg:x="15660" fg:w="18"/><text x="50.1942%" y="255.50"></text></g><g><title>CoreFoundation`CFGetTypeID (17 samples, 0.05%)</title><rect x="49.9474%" y="229" width="0.0542%" height="15" fill="rgb(219,221,18)" fg:x="15661" fg:w="17"/><text x="50.1974%" y="239.50"></text></g><g><title>IOKit`IOConnectCallMethod (4 samples, 0.01%)</title><rect x="50.0048%" y="245" width="0.0128%" height="15" fill="rgb(211,40,0)" fg:x="15679" fg:w="4"/><text x="50.2548%" y="255.50"></text></g><g><title>Metal`-[MTLIOMemoryInfo addResourceToList:] (6 samples, 0.02%)</title><rect x="50.0271%" y="245" width="0.0191%" height="15" fill="rgb(239,85,43)" fg:x="15686" fg:w="6"/><text x="50.2771%" y="255.50"></text></g><g><title>dyld`dyld3::MachOFile::basePlatform (6 samples, 0.02%)</title><rect x="50.0749%" y="197" width="0.0191%" height="15" fill="rgb(231,55,21)" fg:x="15701" fg:w="6"/><text x="50.3249%" y="207.50"></text></g><g><title>dyld`dyld4::APIs::dyld_get_program_sdk_version (16 samples, 0.05%)</title><rect x="50.0494%" y="245" width="0.0510%" height="15" fill="rgb(225,184,43)" fg:x="15693" fg:w="16"/><text x="50.2994%" y="255.50"></text></g><g><title>dyld`dyld4::APIs::getSdkVersion (10 samples, 0.03%)</title><rect x="50.0686%" y="229" width="0.0319%" height="15" fill="rgb(251,158,41)" fg:x="15699" fg:w="10"/><text x="50.3186%" y="239.50"></text></g><g><title>dyld`dyld4::APIs::forEachImageVersion(mach_header const*, void  (8 samples, 0.03%)</title><rect x="50.0749%" y="213" width="0.0255%" height="15" fill="rgb(234,159,37)" fg:x="15701" fg:w="8"/><text x="50.3249%" y="223.50"></text></g><g><title>libdyld.dylib`dyld_get_program_sdk_version (6 samples, 0.02%)</title><rect x="50.1005%" y="245" width="0.0191%" height="15" fill="rgb(216,204,22)" fg:x="15709" fg:w="6"/><text x="50.3505%" y="255.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (15 samples, 0.05%)</title><rect x="50.1228%" y="245" width="0.0478%" height="15" fill="rgb(214,17,3)" fg:x="15716" fg:w="15"/><text x="50.3728%" y="255.50"></text></g><g><title>libobjc.A.dylib`append_referrer(weak_entry_t*, objc_object**) (23 samples, 0.07%)</title><rect x="50.2089%" y="213" width="0.0734%" height="15" fill="rgb(212,111,17)" fg:x="15743" fg:w="23"/><text x="50.4589%" y="223.50"></text></g><g><title>libobjc.A.dylib`objc_storeWeak (38 samples, 0.12%)</title><rect x="50.1706%" y="245" width="0.1212%" height="15" fill="rgb(221,157,24)" fg:x="15731" fg:w="38"/><text x="50.4206%" y="255.50"></text></g><g><title>libobjc.A.dylib`weak_register_no_lock (28 samples, 0.09%)</title><rect x="50.2025%" y="229" width="0.0893%" height="15" fill="rgb(252,16,13)" fg:x="15741" fg:w="28"/><text x="50.4525%" y="239.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:remoteStorageResource:options:args:argsSize:] (6,160 samples, 19.65%)</title><rect x="30.6873%" y="261" width="19.6460%" height="15" fill="rgb(221,62,2)" fg:x="9622" fg:w="6160"/><text x="30.9373%" y="271.50">Metal`-[MTLIOAccelResource init..</text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (9 samples, 0.03%)</title><rect x="50.3046%" y="245" width="0.0287%" height="15" fill="rgb(247,87,22)" fg:x="15773" fg:w="9"/><text x="50.5546%" y="255.50"></text></g><g><title>dyld`dyld4::APIs::dyld_get_program_sdk_version (6 samples, 0.02%)</title><rect x="50.3397%" y="261" width="0.0191%" height="15" fill="rgb(215,73,9)" fg:x="15784" fg:w="6"/><text x="50.5897%" y="271.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (43 samples, 0.14%)</title><rect x="50.3620%" y="261" width="0.1371%" height="15" fill="rgb(207,175,33)" fg:x="15791" fg:w="43"/><text x="50.6120%" y="271.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (9 samples, 0.03%)</title><rect x="50.4991%" y="261" width="0.0287%" height="15" fill="rgb(243,129,54)" fg:x="15834" fg:w="9"/><text x="50.7491%" y="271.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:options:args:argsSize:] (6,242 samples, 19.91%)</title><rect x="30.6458%" y="277" width="19.9075%" height="15" fill="rgb(227,119,45)" fg:x="9609" fg:w="6242"/><text x="30.8958%" y="287.50">Metal`-[MTLIOAccelResource init..</text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock (6 samples, 0.02%)</title><rect x="50.5342%" y="261" width="0.0191%" height="15" fill="rgb(205,109,36)" fg:x="15845" fg:w="6"/><text x="50.7842%" y="271.50"></text></g><g><title>Metal`-[MTLIOAccelBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:args:argsSize:deallocator:] (6,250 samples, 19.93%)</title><rect x="30.6235%" y="293" width="19.9330%" height="15" fill="rgb(205,6,39)" fg:x="9602" fg:w="6250"/><text x="30.8735%" y="303.50">Metal`-[MTLIOAccelBuffer initWi..</text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:args:argsSize:deallocator:] (6,291 samples, 20.06%)</title><rect x="30.4991%" y="309" width="20.0638%" height="15" fill="rgb(221,32,16)" fg:x="9563" fg:w="6291"/><text x="30.7491%" y="319.50">AppleIntelKBLGraphicsMTLDriver`-..</text></g><g><title>Metal`-[MTLIOAccelBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:args:argsSize:deallocator:] (6 samples, 0.02%)</title><rect x="50.5725%" y="309" width="0.0191%" height="15" fill="rgb(228,144,50)" fg:x="15857" fg:w="6"/><text x="50.8225%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (4 samples, 0.01%)</title><rect x="50.6012%" y="277" width="0.0128%" height="15" fill="rgb(229,201,53)" fg:x="15866" fg:w="4"/><text x="50.8512%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (5 samples, 0.02%)</title><rect x="50.6937%" y="245" width="0.0159%" height="15" fill="rgb(249,153,27)" fg:x="15895" fg:w="5"/><text x="50.9437%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (66 samples, 0.21%)</title><rect x="50.5980%" y="293" width="0.2105%" height="15" fill="rgb(227,106,25)" fg:x="15865" fg:w="66"/><text x="50.8480%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (60 samples, 0.19%)</title><rect x="50.6171%" y="277" width="0.1914%" height="15" fill="rgb(230,65,29)" fg:x="15871" fg:w="60"/><text x="50.8671%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (58 samples, 0.18%)</title><rect x="50.6235%" y="261" width="0.1850%" height="15" fill="rgb(221,57,46)" fg:x="15873" fg:w="58"/><text x="50.8735%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (31 samples, 0.10%)</title><rect x="50.7096%" y="245" width="0.0989%" height="15" fill="rgb(229,161,17)" fg:x="15900" fg:w="31"/><text x="50.9596%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.02%)</title><rect x="50.7862%" y="229" width="0.0223%" height="15" fill="rgb(222,213,11)" fg:x="15924" fg:w="7"/><text x="51.0362%" y="239.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (70 samples, 0.22%)</title><rect x="50.5948%" y="309" width="0.2232%" height="15" fill="rgb(235,35,13)" fg:x="15864" fg:w="70"/><text x="50.8448%" y="319.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (9 samples, 0.03%)</title><rect x="50.8181%" y="309" width="0.0287%" height="15" fill="rgb(233,158,34)" fg:x="15934" fg:w="9"/><text x="51.0681%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`calloc (4 samples, 0.01%)</title><rect x="50.8468%" y="309" width="0.0128%" height="15" fill="rgb(215,151,48)" fg:x="15943" fg:w="4"/><text x="51.0968%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelDevice newBufferWithLength:options:] (6,415 samples, 20.46%)</title><rect x="30.4577%" y="325" width="20.4593%" height="15" fill="rgb(229,84,14)" fg:x="9550" fg:w="6415"/><text x="30.7077%" y="335.50">AppleIntelKBLGraphicsMTLDriver`-..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (18 samples, 0.06%)</title><rect x="50.8595%" y="309" width="0.0574%" height="15" fill="rgb(229,68,14)" fg:x="15947" fg:w="18"/><text x="51.1095%" y="319.50"></text></g><g><title>Metal`-[MTLIOAccelResource setLabel:] (5 samples, 0.02%)</title><rect x="50.9233%" y="325" width="0.0159%" height="15" fill="rgb(243,106,26)" fg:x="15967" fg:w="5"/><text x="51.1733%" y="335.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (36 samples, 0.11%)</title><rect x="51.0222%" y="309" width="0.1148%" height="15" fill="rgb(206,45,38)" fg:x="15998" fg:w="36"/><text x="51.2722%" y="319.50"></text></g><g><title>CoreFoundation`_CFGetTSDCreateIfNeeded (8 samples, 0.03%)</title><rect x="51.2454%" y="261" width="0.0255%" height="15" fill="rgb(226,6,15)" fg:x="16068" fg:w="8"/><text x="51.4954%" y="271.50"></text></g><g><title>libobjc.A.dylib`object_setClass (15 samples, 0.05%)</title><rect x="51.2933%" y="245" width="0.0478%" height="15" fill="rgb(232,22,54)" fg:x="16083" fg:w="15"/><text x="51.5433%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (30 samples, 0.10%)</title><rect x="51.3794%" y="197" width="0.0957%" height="15" fill="rgb(229,222,32)" fg:x="16110" fg:w="30"/><text x="51.6294%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (40 samples, 0.13%)</title><rect x="51.3507%" y="213" width="0.1276%" height="15" fill="rgb(228,62,29)" fg:x="16101" fg:w="40"/><text x="51.6007%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (45 samples, 0.14%)</title><rect x="51.3411%" y="245" width="0.1435%" height="15" fill="rgb(251,103,34)" fg:x="16098" fg:w="45"/><text x="51.5911%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (42 samples, 0.13%)</title><rect x="51.3507%" y="229" width="0.1339%" height="15" fill="rgb(233,12,30)" fg:x="16101" fg:w="42"/><text x="51.6007%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_calloc (10 samples, 0.03%)</title><rect x="51.4846%" y="245" width="0.0319%" height="15" fill="rgb(238,52,0)" fg:x="16143" fg:w="10"/><text x="51.7346%" y="255.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (81 samples, 0.26%)</title><rect x="51.2709%" y="261" width="0.2583%" height="15" fill="rgb(223,98,5)" fg:x="16076" fg:w="81"/><text x="51.5209%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc_default_zone (4 samples, 0.01%)</title><rect x="51.5165%" y="245" width="0.0128%" height="15" fill="rgb(228,75,37)" fg:x="16153" fg:w="4"/><text x="51.7665%" y="255.50"></text></g><g><title>CoreFoundation`__CFSearchStringROM (12 samples, 0.04%)</title><rect x="51.5325%" y="261" width="0.0383%" height="15" fill="rgb(205,115,49)" fg:x="16158" fg:w="12"/><text x="51.7825%" y="271.50"></text></g><g><title>CoreFoundation`__CFStrHashEightBit2 (9 samples, 0.03%)</title><rect x="51.5707%" y="261" width="0.0287%" height="15" fill="rgb(250,154,43)" fg:x="16170" fg:w="9"/><text x="51.8207%" y="271.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (143 samples, 0.46%)</title><rect x="51.1593%" y="293" width="0.4561%" height="15" fill="rgb(226,43,29)" fg:x="16041" fg:w="143"/><text x="51.4093%" y="303.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (143 samples, 0.46%)</title><rect x="51.1593%" y="277" width="0.4561%" height="15" fill="rgb(249,228,39)" fg:x="16041" fg:w="143"/><text x="51.4093%" y="287.50"></text></g><g><title>Foundation`+[NSString allocWithZone:] (5 samples, 0.02%)</title><rect x="51.6249%" y="293" width="0.0159%" height="15" fill="rgb(216,79,43)" fg:x="16187" fg:w="5"/><text x="51.8749%" y="303.50"></text></g><g><title>Foundation`-[NSPlaceholderString initWithBytes:length:encoding:] (6 samples, 0.02%)</title><rect x="51.6409%" y="293" width="0.0191%" height="15" fill="rgb(228,95,12)" fg:x="16192" fg:w="6"/><text x="51.8909%" y="303.50"></text></g><g><title>meg`wgpu_core::device::Device&lt;A&gt;::create_buffer (6,773 samples, 21.60%)</title><rect x="30.0845%" y="357" width="21.6010%" height="15" fill="rgb(249,221,15)" fg:x="9433" fg:w="6773"/><text x="30.3345%" y="367.50">meg`wgpu_core::device::Device&lt;A&gt;::..</text></g><g><title>meg`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (6,679 samples, 21.30%)</title><rect x="30.3843%" y="341" width="21.3012%" height="15" fill="rgb(233,34,13)" fg:x="9527" fg:w="6679"/><text x="30.6343%" y="351.50">meg`wgpu_hal::metal::device::_&lt;imp..</text></g><g><title>meg`metal::resource::ResourceRef::set_label (221 samples, 0.70%)</title><rect x="50.9807%" y="325" width="0.7048%" height="15" fill="rgb(214,103,39)" fg:x="15985" fg:w="221"/><text x="51.2307%" y="335.50"></text></g><g><title>meg`metal::nsstring_from_str (170 samples, 0.54%)</title><rect x="51.1434%" y="309" width="0.5422%" height="15" fill="rgb(251,126,39)" fg:x="16036" fg:w="170"/><text x="51.3934%" y="319.50"></text></g><g><title>libobjc.A.dylib`objc_object::rootAutorelease2 (7 samples, 0.02%)</title><rect x="51.6632%" y="293" width="0.0223%" height="15" fill="rgb(214,216,36)" fg:x="16199" fg:w="7"/><text x="51.9132%" y="303.50"></text></g><g><title>meg`wgpu_core::hub::IdentityManager::alloc (12 samples, 0.04%)</title><rect x="51.6855%" y="357" width="0.0383%" height="15" fill="rgb(220,221,8)" fg:x="16206" fg:w="12"/><text x="51.9355%" y="367.50"></text></g><g><title>meg`wgpu_core::hub::Storage&lt;T,I&gt;::insert_impl (15 samples, 0.05%)</title><rect x="51.7270%" y="357" width="0.0478%" height="15" fill="rgb(240,216,3)" fg:x="16219" fg:w="15"/><text x="51.9770%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (13 samples, 0.04%)</title><rect x="51.7334%" y="341" width="0.0415%" height="15" fill="rgb(232,218,17)" fg:x="16221" fg:w="13"/><text x="51.9834%" y="351.50"></text></g><g><title>meg`wgpu_core::track::ResourceTracker&lt;S&gt;::init (10 samples, 0.03%)</title><rect x="51.7748%" y="357" width="0.0319%" height="15" fill="rgb(229,163,45)" fg:x="16234" fg:w="10"/><text x="52.0248%" y="367.50"></text></g><g><title>meg`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (7,013 samples, 22.37%)</title><rect x="29.4498%" y="373" width="22.3664%" height="15" fill="rgb(231,110,42)" fg:x="9234" fg:w="7013"/><text x="29.6998%" y="383.50">meg`wgpu_core::device::_&lt;impl wgpu_..</text></g><g><title>meg`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (7,063 samples, 22.53%)</title><rect x="29.3255%" y="389" width="22.5259%" height="15" fill="rgb(208,170,48)" fg:x="9195" fg:w="7063"/><text x="29.5755%" y="399.50">meg`&lt;wgpu::backend::direct::Context ..</text></g><g><title>meg`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_get_mapped_range (5 samples, 0.02%)</title><rect x="51.8769%" y="357" width="0.0159%" height="15" fill="rgb(239,116,25)" fg:x="16266" fg:w="5"/><text x="52.1269%" y="367.50"></text></g><g><title>meg`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_get_mapped_range (7 samples, 0.02%)</title><rect x="51.8737%" y="373" width="0.0223%" height="15" fill="rgb(219,200,50)" fg:x="16265" fg:w="7"/><text x="52.1237%" y="383.50"></text></g><g><title>meg`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.02%)</title><rect x="51.8960%" y="373" width="0.0159%" height="15" fill="rgb(245,200,0)" fg:x="16272" fg:w="5"/><text x="52.1460%" y="383.50"></text></g><g><title>meg`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (20 samples, 0.06%)</title><rect x="51.9215%" y="357" width="0.0638%" height="15" fill="rgb(245,119,33)" fg:x="16280" fg:w="20"/><text x="52.1715%" y="367.50"></text></g><g><title>meg`alloc::raw_vec::finish_grow (16 samples, 0.05%)</title><rect x="51.9343%" y="341" width="0.0510%" height="15" fill="rgb(231,125,12)" fg:x="16284" fg:w="16"/><text x="52.1843%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (16 samples, 0.05%)</title><rect x="51.9343%" y="325" width="0.0510%" height="15" fill="rgb(216,96,41)" fg:x="16284" fg:w="16"/><text x="52.1843%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (16 samples, 0.05%)</title><rect x="51.9343%" y="309" width="0.0510%" height="15" fill="rgb(248,43,45)" fg:x="16284" fg:w="16"/><text x="52.1843%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (16 samples, 0.05%)</title><rect x="51.9343%" y="293" width="0.0510%" height="15" fill="rgb(217,222,7)" fg:x="16284" fg:w="16"/><text x="52.1843%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (12 samples, 0.04%)</title><rect x="51.9471%" y="277" width="0.0383%" height="15" fill="rgb(233,28,6)" fg:x="16288" fg:w="12"/><text x="52.1971%" y="287.50"></text></g><g><title>meg`wgpu::BufferSlice::get_mapped_range_mut (41 samples, 0.13%)</title><rect x="51.8609%" y="389" width="0.1308%" height="15" fill="rgb(231,218,15)" fg:x="16261" fg:w="41"/><text x="52.1109%" y="399.50"></text></g><g><title>meg`wgpu::MapContext::add (25 samples, 0.08%)</title><rect x="51.9120%" y="373" width="0.0797%" height="15" fill="rgb(226,171,48)" fg:x="16277" fg:w="25"/><text x="52.1620%" y="383.50"></text></g><g><title>IOAccelerator`_IOAccelResourceAlloc (4 samples, 0.01%)</title><rect x="52.1001%" y="213" width="0.0128%" height="15" fill="rgb(235,201,9)" fg:x="16336" fg:w="4"/><text x="52.3501%" y="223.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (4 samples, 0.01%)</title><rect x="52.1001%" y="197" width="0.0128%" height="15" fill="rgb(217,80,15)" fg:x="16336" fg:w="4"/><text x="52.3501%" y="207.50"></text></g><g><title>IOKit`io_connect_method (450 samples, 1.44%)</title><rect x="52.1129%" y="197" width="1.4352%" height="15" fill="rgb(219,152,8)" fg:x="16340" fg:w="450"/><text x="52.3629%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (447 samples, 1.43%)</title><rect x="52.1225%" y="181" width="1.4256%" height="15" fill="rgb(243,107,38)" fg:x="16343" fg:w="447"/><text x="52.3725%" y="191.50"></text></g><g><title>IOAccelerator`IOAccelResourceCreate (458 samples, 1.46%)</title><rect x="52.0906%" y="229" width="1.4607%" height="15" fill="rgb(231,17,5)" fg:x="16333" fg:w="458"/><text x="52.3406%" y="239.50"></text></g><g><title>IOKit`IOConnectCallMethod (451 samples, 1.44%)</title><rect x="52.1129%" y="213" width="1.4384%" height="15" fill="rgb(209,25,54)" fg:x="16340" fg:w="451"/><text x="52.3629%" y="223.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:remoteStorageResource:options:args:argsSize:] (468 samples, 1.49%)</title><rect x="52.0778%" y="245" width="1.4926%" height="15" fill="rgb(219,0,2)" fg:x="16329" fg:w="468"/><text x="52.3278%" y="255.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (6 samples, 0.02%)</title><rect x="53.5704%" y="245" width="0.0191%" height="15" fill="rgb(246,9,5)" fg:x="16797" fg:w="6"/><text x="53.8204%" y="255.50"></text></g><g><title>Metal`-[MTLIOAccelBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:args:argsSize:deallocator:] (479 samples, 1.53%)</title><rect x="52.0683%" y="277" width="1.5277%" height="15" fill="rgb(226,159,4)" fg:x="16326" fg:w="479"/><text x="52.3183%" y="287.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:options:args:argsSize:] (477 samples, 1.52%)</title><rect x="52.0746%" y="261" width="1.5213%" height="15" fill="rgb(219,175,34)" fg:x="16328" fg:w="477"/><text x="52.3246%" y="271.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:args:argsSize:deallocator:] (484 samples, 1.54%)</title><rect x="52.0555%" y="293" width="1.5436%" height="15" fill="rgb(236,10,46)" fg:x="16322" fg:w="484"/><text x="52.3055%" y="303.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (7 samples, 0.02%)</title><rect x="53.5991%" y="293" width="0.0223%" height="15" fill="rgb(240,211,16)" fg:x="16806" fg:w="7"/><text x="53.8491%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (7 samples, 0.02%)</title><rect x="53.5991%" y="277" width="0.0223%" height="15" fill="rgb(205,3,43)" fg:x="16806" fg:w="7"/><text x="53.8491%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="53.5991%" y="261" width="0.0223%" height="15" fill="rgb(245,7,22)" fg:x="16806" fg:w="7"/><text x="53.8491%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="53.5991%" y="245" width="0.0223%" height="15" fill="rgb(239,132,32)" fg:x="16806" fg:w="7"/><text x="53.8491%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.02%)</title><rect x="53.6055%" y="229" width="0.0159%" height="15" fill="rgb(228,202,34)" fg:x="16808" fg:w="5"/><text x="53.8555%" y="239.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelDevice newBufferWithLength:options:] (495 samples, 1.58%)</title><rect x="52.0555%" y="309" width="1.5787%" height="15" fill="rgb(254,200,22)" fg:x="16322" fg:w="495"/><text x="52.3055%" y="319.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.02%)</title><rect x="53.6374%" y="293" width="0.0159%" height="15" fill="rgb(219,10,39)" fg:x="16818" fg:w="5"/><text x="53.8874%" y="303.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (4 samples, 0.01%)</title><rect x="53.6661%" y="245" width="0.0128%" height="15" fill="rgb(226,210,39)" fg:x="16827" fg:w="4"/><text x="53.9161%" y="255.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (8 samples, 0.03%)</title><rect x="53.6597%" y="277" width="0.0255%" height="15" fill="rgb(208,219,16)" fg:x="16825" fg:w="8"/><text x="53.9097%" y="287.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (8 samples, 0.03%)</title><rect x="53.6597%" y="261" width="0.0255%" height="15" fill="rgb(216,158,51)" fg:x="16825" fg:w="8"/><text x="53.9097%" y="271.50"></text></g><g><title>meg`wgpu_core::device::Device&lt;A&gt;::create_buffer (527 samples, 1.68%)</title><rect x="52.0108%" y="341" width="1.6808%" height="15" fill="rgb(233,14,44)" fg:x="16308" fg:w="527"/><text x="52.2608%" y="351.50"></text></g><g><title>meg`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (515 samples, 1.64%)</title><rect x="52.0491%" y="325" width="1.6425%" height="15" fill="rgb(237,97,39)" fg:x="16320" fg:w="515"/><text x="52.2991%" y="335.50"></text></g><g><title>meg`metal::resource::ResourceRef::set_label (17 samples, 0.05%)</title><rect x="53.6374%" y="309" width="0.0542%" height="15" fill="rgb(218,198,43)" fg:x="16818" fg:w="17"/><text x="53.8874%" y="319.50"></text></g><g><title>meg`metal::nsstring_from_str (12 samples, 0.04%)</title><rect x="53.6533%" y="293" width="0.0383%" height="15" fill="rgb(231,104,20)" fg:x="16823" fg:w="12"/><text x="53.9033%" y="303.50"></text></g><g><title>meg`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (533 samples, 1.70%)</title><rect x="51.9981%" y="357" width="1.6999%" height="15" fill="rgb(254,36,13)" fg:x="16304" fg:w="533"/><text x="52.2481%" y="367.50"></text></g><g><title>meg`wgpu::Device::create_buffer (536 samples, 1.71%)</title><rect x="51.9917%" y="389" width="1.7095%" height="15" fill="rgb(248,14,50)" fg:x="16302" fg:w="536"/><text x="52.2417%" y="399.50"></text></g><g><title>meg`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (536 samples, 1.71%)</title><rect x="51.9917%" y="373" width="1.7095%" height="15" fill="rgb(217,107,29)" fg:x="16302" fg:w="536"/><text x="52.2417%" y="383.50"></text></g><g><title>meg`&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (8,247 samples, 26.30%)</title><rect x="27.4087%" y="405" width="26.3020%" height="15" fill="rgb(251,169,33)" fg:x="8594" fg:w="8247"/><text x="27.6587%" y="415.50">meg`&lt;wgpu::Device as wgpu::util::device::D..</text></g><g><title>libobjc.A.dylib`objc_msgSend (11 samples, 0.04%)</title><rect x="53.7713%" y="373" width="0.0351%" height="15" fill="rgb(217,108,32)" fg:x="16860" fg:w="11"/><text x="54.0213%" y="383.50"></text></g><g><title>meg`hashbrown::set::HashSet&lt;T,S,A&gt;::insert (4 samples, 0.01%)</title><rect x="53.8224%" y="373" width="0.0128%" height="15" fill="rgb(219,66,42)" fg:x="16876" fg:w="4"/><text x="54.0724%" y="383.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IntelStateHeaps::notifySplit (4 samples, 0.01%)</title><rect x="53.9117%" y="293" width="0.0128%" height="15" fill="rgb(206,180,7)" fg:x="16904" fg:w="4"/><text x="54.1617%" y="303.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`void IntelCommandBuffer::splitCommandBuffer&lt;(IntelConstants::eEngineID)2&gt; (7 samples, 0.02%)</title><rect x="53.9244%" y="293" width="0.0223%" height="15" fill="rgb(208,226,31)" fg:x="16908" fg:w="7"/><text x="54.1744%" y="303.50"></text></g><g><title>IOAccelerator`IOAccelResourceListAddResource (12 samples, 0.04%)</title><rect x="53.9467%" y="293" width="0.0383%" height="15" fill="rgb(218,26,49)" fg:x="16915" fg:w="12"/><text x="54.1967%" y="303.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelBlitCommandEncoder::programBlit (37 samples, 0.12%)</title><rect x="53.8766%" y="309" width="0.1180%" height="15" fill="rgb(233,197,48)" fg:x="16893" fg:w="37"/><text x="54.1266%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.02%)</title><rect x="53.9978%" y="261" width="0.0191%" height="15" fill="rgb(252,181,51)" fg:x="16931" fg:w="6"/><text x="54.2478%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.02%)</title><rect x="54.0010%" y="245" width="0.0159%" height="15" fill="rgb(253,90,19)" fg:x="16932" fg:w="5"/><text x="54.2510%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.02%)</title><rect x="54.0010%" y="229" width="0.0159%" height="15" fill="rgb(215,171,30)" fg:x="16932" fg:w="5"/><text x="54.2510%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.01%)</title><rect x="54.0041%" y="213" width="0.0128%" height="15" fill="rgb(214,222,9)" fg:x="16933" fg:w="4"/><text x="54.2541%" y="223.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (7 samples, 0.02%)</title><rect x="53.9978%" y="277" width="0.0223%" height="15" fill="rgb(223,3,22)" fg:x="16931" fg:w="7"/><text x="54.2478%" y="287.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`std::__1::__split_buffer&lt;IGBL::BlitRectPair, std::__1::allocator&lt;IGBL::BlitRectPair&gt;&amp;&gt;::__split_buffer(unsigned long, unsigned long, std::__1::allocator (9 samples, 0.03%)</title><rect x="53.9978%" y="293" width="0.0287%" height="15" fill="rgb(225,196,46)" fg:x="16931" fg:w="9"/><text x="54.2478%" y="303.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`void std::__1::vector&lt;IGBL::BlitRectPair, std::__1::allocator&lt;IGBL::BlitRectPair&gt; &gt;::__push_back_slow_path&lt;IGBL::BlitRectPair const&amp;&gt; (11 samples, 0.04%)</title><rect x="53.9978%" y="309" width="0.0351%" height="15" fill="rgb(209,110,37)" fg:x="16931" fg:w="11"/><text x="54.2478%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelBlitCommandEncoder::copyBufferToBufferInternal (53 samples, 0.17%)</title><rect x="53.8766%" y="325" width="0.1690%" height="15" fill="rgb(249,89,12)" fg:x="16893" fg:w="53"/><text x="54.1266%" y="335.50"></text></g><g><title>meg`metal::encoder::BlitCommandEncoderRef::copy_from_buffer (67 samples, 0.21%)</title><rect x="53.8351%" y="373" width="0.2137%" height="15" fill="rgb(226,27,33)" fg:x="16880" fg:w="67"/><text x="54.0851%" y="383.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelBlitCommandEncoder copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:] (65 samples, 0.21%)</title><rect x="53.8415%" y="357" width="0.2073%" height="15" fill="rgb(213,82,22)" fg:x="16882" fg:w="65"/><text x="54.0915%" y="367.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelBlitCommandEncoder::copyBufferToBuffer (60 samples, 0.19%)</title><rect x="53.8574%" y="341" width="0.1914%" height="15" fill="rgb(248,140,0)" fg:x="16887" fg:w="60"/><text x="54.1074%" y="351.50"></text></g><g><title>meg`wgpu_core::hub::Storage&lt;T,I&gt;::get (5 samples, 0.02%)</title><rect x="54.0584%" y="373" width="0.0159%" height="15" fill="rgb(228,106,3)" fg:x="16950" fg:w="5"/><text x="54.3084%" y="383.50"></text></g><g><title>IOAccelerator`_IOAccelResourceAlloc (15 samples, 0.05%)</title><rect x="54.2338%" y="261" width="0.0478%" height="15" fill="rgb(209,23,37)" fg:x="17005" fg:w="15"/><text x="54.4838%" y="271.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (12 samples, 0.04%)</title><rect x="54.2433%" y="245" width="0.0383%" height="15" fill="rgb(241,93,50)" fg:x="17008" fg:w="12"/><text x="54.4933%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (7 samples, 0.02%)</title><rect x="54.2593%" y="229" width="0.0223%" height="15" fill="rgb(253,46,43)" fg:x="17013" fg:w="7"/><text x="54.5093%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (7 samples, 0.02%)</title><rect x="54.2593%" y="213" width="0.0223%" height="15" fill="rgb(226,206,43)" fg:x="17013" fg:w="7"/><text x="54.5093%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (7 samples, 0.02%)</title><rect x="54.2593%" y="197" width="0.0223%" height="15" fill="rgb(217,54,7)" fg:x="17013" fg:w="7"/><text x="54.5093%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.02%)</title><rect x="54.2657%" y="181" width="0.0159%" height="15" fill="rgb(223,5,52)" fg:x="17015" fg:w="5"/><text x="54.5157%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (4 samples, 0.01%)</title><rect x="54.3071%" y="229" width="0.0128%" height="15" fill="rgb(206,52,46)" fg:x="17028" fg:w="4"/><text x="54.5571%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (543 samples, 1.73%)</title><rect x="54.3199%" y="229" width="1.7318%" height="15" fill="rgb(253,136,11)" fg:x="17032" fg:w="543"/><text x="54.5699%" y="239.50"></text></g><g><title>IOKit`io_connect_method (561 samples, 1.79%)</title><rect x="54.2848%" y="245" width="1.7892%" height="15" fill="rgb(208,106,33)" fg:x="17021" fg:w="561"/><text x="54.5348%" y="255.50">I..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (7 samples, 0.02%)</title><rect x="56.0517%" y="229" width="0.0223%" height="15" fill="rgb(206,54,4)" fg:x="17575" fg:w="7"/><text x="56.3017%" y="239.50"></text></g><g><title>IOKit`IOConnectCallMethod (565 samples, 1.80%)</title><rect x="54.2816%" y="261" width="1.8019%" height="15" fill="rgb(213,3,15)" fg:x="17020" fg:w="565"/><text x="54.5316%" y="271.50">I..</text></g><g><title>IOAccelerator`IOAccelResourceCreate (593 samples, 1.89%)</title><rect x="54.2114%" y="277" width="1.8912%" height="15" fill="rgb(252,211,39)" fg:x="16998" fg:w="593"/><text x="54.4614%" y="287.50">I..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (6 samples, 0.02%)</title><rect x="56.0836%" y="261" width="0.0191%" height="15" fill="rgb(223,6,36)" fg:x="17585" fg:w="6"/><text x="56.3336%" y="271.50"></text></g><g><title>dyld`dyld4::APIs::dyld_get_program_sdk_version (5 samples, 0.02%)</title><rect x="56.1282%" y="277" width="0.0159%" height="15" fill="rgb(252,169,45)" fg:x="17599" fg:w="5"/><text x="56.3782%" y="287.50"></text></g><g><title>dyld`dyld4::APIs::getSdkVersion (4 samples, 0.01%)</title><rect x="56.1314%" y="261" width="0.0128%" height="15" fill="rgb(212,48,26)" fg:x="17600" fg:w="4"/><text x="56.3814%" y="271.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (12 samples, 0.04%)</title><rect x="56.1442%" y="277" width="0.0383%" height="15" fill="rgb(251,102,48)" fg:x="17604" fg:w="12"/><text x="56.3942%" y="287.50"></text></g><g><title>libobjc.A.dylib`append_referrer(weak_entry_t*, objc_object**) (6 samples, 0.02%)</title><rect x="56.1824%" y="245" width="0.0191%" height="15" fill="rgb(243,208,16)" fg:x="17616" fg:w="6"/><text x="56.4324%" y="255.50"></text></g><g><title>libobjc.A.dylib`objc_storeWeak (7 samples, 0.02%)</title><rect x="56.1824%" y="277" width="0.0223%" height="15" fill="rgb(219,96,24)" fg:x="17616" fg:w="7"/><text x="56.4324%" y="287.50"></text></g><g><title>libobjc.A.dylib`weak_register_no_lock (7 samples, 0.02%)</title><rect x="56.1824%" y="261" width="0.0223%" height="15" fill="rgb(219,33,29)" fg:x="17616" fg:w="7"/><text x="56.4324%" y="271.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:remoteStorageResource:options:args:argsSize:] (639 samples, 2.04%)</title><rect x="54.1796%" y="293" width="2.0380%" height="15" fill="rgb(223,176,5)" fg:x="16988" fg:w="639"/><text x="54.4296%" y="303.50">M..</text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.02%)</title><rect x="56.2271%" y="293" width="0.0159%" height="15" fill="rgb(228,140,14)" fg:x="17630" fg:w="5"/><text x="56.4771%" y="303.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:args:argsSize:deallocator:] (667 samples, 2.13%)</title><rect x="54.1221%" y="341" width="2.1273%" height="15" fill="rgb(217,179,31)" fg:x="16970" fg:w="667"/><text x="54.3721%" y="351.50">A..</text></g><g><title>Metal`-[MTLIOAccelBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:args:argsSize:deallocator:] (658 samples, 2.10%)</title><rect x="54.1509%" y="325" width="2.0985%" height="15" fill="rgb(230,9,30)" fg:x="16979" fg:w="658"/><text x="54.4009%" y="335.50">M..</text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:options:args:argsSize:] (652 samples, 2.08%)</title><rect x="54.1700%" y="309" width="2.0794%" height="15" fill="rgb(230,136,20)" fg:x="16985" fg:w="652"/><text x="54.4200%" y="319.50">M..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.04%)</title><rect x="56.2494%" y="309" width="0.0446%" height="15" fill="rgb(215,210,22)" fg:x="17637" fg:w="14"/><text x="56.4994%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (14 samples, 0.04%)</title><rect x="56.2494%" y="293" width="0.0446%" height="15" fill="rgb(218,43,5)" fg:x="17637" fg:w="14"/><text x="56.4994%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.02%)</title><rect x="56.2717%" y="277" width="0.0223%" height="15" fill="rgb(216,11,5)" fg:x="17644" fg:w="7"/><text x="56.5217%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (15 samples, 0.05%)</title><rect x="56.2494%" y="325" width="0.0478%" height="15" fill="rgb(209,82,29)" fg:x="17637" fg:w="15"/><text x="56.4994%" y="335.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (16 samples, 0.05%)</title><rect x="56.2494%" y="341" width="0.0510%" height="15" fill="rgb(244,115,12)" fg:x="17637" fg:w="16"/><text x="56.4994%" y="351.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelDevice newBufferWithLength:options:] (692 samples, 2.21%)</title><rect x="54.1030%" y="357" width="2.2070%" height="15" fill="rgb(222,82,18)" fg:x="16964" fg:w="692"/><text x="54.3530%" y="367.50">A..</text></g><g><title>libobjc.A.dylib`objc_msgSend (19 samples, 0.06%)</title><rect x="56.3451%" y="341" width="0.0606%" height="15" fill="rgb(249,227,8)" fg:x="17667" fg:w="19"/><text x="56.5951%" y="351.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (12 samples, 0.04%)</title><rect x="56.4089%" y="325" width="0.0383%" height="15" fill="rgb(253,141,45)" fg:x="17687" fg:w="12"/><text x="56.6589%" y="335.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (12 samples, 0.04%)</title><rect x="56.4089%" y="309" width="0.0383%" height="15" fill="rgb(234,184,4)" fg:x="17687" fg:w="12"/><text x="56.6589%" y="319.50"></text></g><g><title>meg`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (738 samples, 2.35%)</title><rect x="54.0966%" y="373" width="2.3537%" height="15" fill="rgb(218,194,23)" fg:x="16962" fg:w="738"/><text x="54.3466%" y="383.50">m..</text></g><g><title>meg`metal::resource::ResourceRef::set_label (34 samples, 0.11%)</title><rect x="56.3419%" y="357" width="0.1084%" height="15" fill="rgb(235,66,41)" fg:x="17666" fg:w="34"/><text x="56.5919%" y="367.50"></text></g><g><title>meg`metal::nsstring_from_str (14 samples, 0.04%)</title><rect x="56.4057%" y="341" width="0.0446%" height="15" fill="rgb(245,217,1)" fg:x="17686" fg:w="14"/><text x="56.6557%" y="351.50"></text></g><g><title>meg`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (853 samples, 2.72%)</title><rect x="53.7362%" y="389" width="2.7205%" height="15" fill="rgb(229,91,1)" fg:x="16849" fg:w="853"/><text x="53.9862%" y="399.50">me..</text></g><g><title>meg`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (862 samples, 2.75%)</title><rect x="53.7139%" y="405" width="2.7492%" height="15" fill="rgb(207,101,30)" fg:x="16842" fg:w="862"/><text x="53.9639%" y="415.50">me..</text></g><g><title>meg`alloc::vec::Vec&lt;T,A&gt;::retain (43 samples, 0.14%)</title><rect x="56.4727%" y="405" width="0.1371%" height="15" fill="rgb(223,82,49)" fg:x="17707" fg:w="43"/><text x="56.7227%" y="415.50"></text></g><g><title>meg`&lt;wgpu::Buffer as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="56.6194%" y="389" width="0.0191%" height="15" fill="rgb(218,167,17)" fg:x="17753" fg:w="6"/><text x="56.8694%" y="399.50"></text></g><g><title>meg`&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (9 samples, 0.03%)</title><rect x="56.6831%" y="373" width="0.0287%" height="15" fill="rgb(208,103,14)" fg:x="17773" fg:w="9"/><text x="56.9331%" y="383.50"></text></g><g><title>meg`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_drop (33 samples, 0.11%)</title><rect x="56.6417%" y="389" width="0.1052%" height="15" fill="rgb(238,20,8)" fg:x="17760" fg:w="33"/><text x="56.8917%" y="399.50"></text></g><g><title>meg`wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (9 samples, 0.03%)</title><rect x="56.7182%" y="373" width="0.0287%" height="15" fill="rgb(218,80,54)" fg:x="17784" fg:w="9"/><text x="56.9682%" y="383.50"></text></g><g><title>meg`core::ptr::drop_in_place&lt;wgpu::Buffer&gt; (45 samples, 0.14%)</title><rect x="56.6098%" y="405" width="0.1435%" height="15" fill="rgb(240,144,17)" fg:x="17750" fg:w="45"/><text x="56.8598%" y="415.50"></text></g><g><title>meg`rand::rngs::thread::thread_rng (12 samples, 0.04%)</title><rect x="56.7533%" y="405" width="0.0383%" height="15" fill="rgb(245,27,50)" fg:x="17795" fg:w="12"/><text x="57.0033%" y="415.50"></text></g><g><title>meg`kintaro::shared::render_pass::RenderPassInput::update (11,570 samples, 36.90%)</title><rect x="19.9203%" y="421" width="36.9000%" height="15" fill="rgb(251,51,7)" fg:x="6246" fg:w="11570"/><text x="20.1703%" y="431.50">meg`kintaro::shared::render_pass::RenderPassInput::update</text></g><g><title>meg`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (6 samples, 0.02%)</title><rect x="56.8011%" y="405" width="0.0191%" height="15" fill="rgb(245,217,29)" fg:x="17810" fg:w="6"/><text x="57.0511%" y="415.50"></text></g><g><title>meg`&lt;kintaro::renderable::RenderableEnum as kintaro::renderable::Renderable&gt;::update (11,695 samples, 37.30%)</title><rect x="19.5280%" y="437" width="37.2987%" height="15" fill="rgb(221,176,29)" fg:x="6123" fg:w="11695"/><text x="19.7780%" y="447.50">meg`&lt;kintaro::renderable::RenderableEnum as kintaro::renderab..</text></g><g><title>meg`kintaro::composition::render::_&lt;impl kintaro::composition::Composition&gt;::render (16,790 samples, 53.55%)</title><rect x="3.2945%" y="453" width="53.5481%" height="15" fill="rgb(212,180,24)" fg:x="1033" fg:w="16790"/><text x="3.5445%" y="463.50">meg`kintaro::composition::render::_&lt;impl kintaro::composition::Composition&gt;::render</text></g><g><title>meg`egui::widget_text::WidgetText::into_galley (4 samples, 0.01%)</title><rect x="57.0021%" y="101" width="0.0128%" height="15" fill="rgb(254,24,2)" fg:x="17873" fg:w="4"/><text x="57.2521%" y="111.50"></text></g><g><title>meg`&lt;egui::widgets::button::Button as egui::widgets::Widget&gt;::ui (14 samples, 0.04%)</title><rect x="56.9861%" y="117" width="0.0446%" height="15" fill="rgb(230,100,2)" fg:x="17868" fg:w="14"/><text x="57.2361%" y="127.50"></text></g><g><title>meg`&lt;egui::widgets::label::Label as egui::widgets::Widget&gt;::ui (7 samples, 0.02%)</title><rect x="57.0308%" y="117" width="0.0223%" height="15" fill="rgb(219,142,25)" fg:x="17882" fg:w="7"/><text x="57.2808%" y="127.50"></text></g><g><title>meg`egui::widgets::label::Label::layout_in_ui (6 samples, 0.02%)</title><rect x="57.0340%" y="101" width="0.0191%" height="15" fill="rgb(240,73,43)" fg:x="17883" fg:w="6"/><text x="57.2840%" y="111.50"></text></g><g><title>meg`epaint::text::fonts::Fonts::layout_job (5 samples, 0.02%)</title><rect x="57.0372%" y="85" width="0.0159%" height="15" fill="rgb(214,114,15)" fg:x="17884" fg:w="5"/><text x="57.2872%" y="95.50"></text></g><g><title>meg`&lt;egui::widgets::drag_value::DragValue as egui::widgets::Widget&gt;::ui (5 samples, 0.02%)</title><rect x="57.0690%" y="53" width="0.0159%" height="15" fill="rgb(207,130,4)" fg:x="17894" fg:w="5"/><text x="57.3190%" y="63.50"></text></g><g><title>meg`egui::widgets::slider::Slider::add_contents (11 samples, 0.04%)</title><rect x="57.0595%" y="69" width="0.0351%" height="15" fill="rgb(221,25,40)" fg:x="17891" fg:w="11"/><text x="57.3095%" y="79.50"></text></g><g><title>meg`&lt;egui::widgets::slider::Slider as egui::widgets::Widget&gt;::ui (15 samples, 0.05%)</title><rect x="57.0531%" y="117" width="0.0478%" height="15" fill="rgb(241,184,7)" fg:x="17889" fg:w="15"/><text x="57.3031%" y="127.50"></text></g><g><title>meg`egui::ui::Ui::horizontal_with_main_wrap_dyn (14 samples, 0.04%)</title><rect x="57.0563%" y="101" width="0.0446%" height="15" fill="rgb(235,159,4)" fg:x="17890" fg:w="14"/><text x="57.3063%" y="111.50"></text></g><g><title>meg`core::ops::function::FnOnce::call_once{{vtable.shim}} (13 samples, 0.04%)</title><rect x="57.0595%" y="85" width="0.0415%" height="15" fill="rgb(214,87,48)" fg:x="17891" fg:w="13"/><text x="57.3095%" y="95.50"></text></g><g><title>meg`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (6 samples, 0.02%)</title><rect x="57.1073%" y="117" width="0.0191%" height="15" fill="rgb(246,198,24)" fg:x="17906" fg:w="6"/><text x="57.3573%" y="127.50"></text></g><g><title>meg`core::ops::function::FnOnce::call_once{{vtable.shim}} (48 samples, 0.15%)</title><rect x="56.9797%" y="133" width="0.1531%" height="15" fill="rgb(209,66,40)" fg:x="17866" fg:w="48"/><text x="57.2297%" y="143.50"></text></g><g><title>meg`egui::ui::Ui::horizontal_with_main_wrap_dyn (51 samples, 0.16%)</title><rect x="56.9734%" y="149" width="0.1627%" height="15" fill="rgb(233,147,39)" fg:x="17864" fg:w="51"/><text x="57.2234%" y="159.50"></text></g><g><title>meg`&lt;egui::widgets::label::Label as egui::widgets::Widget&gt;::ui (4 samples, 0.01%)</title><rect x="57.1392%" y="117" width="0.0128%" height="15" fill="rgb(231,145,52)" fg:x="17916" fg:w="4"/><text x="57.3892%" y="127.50"></text></g><g><title>meg`egui::widgets::label::Label::layout_in_ui (4 samples, 0.01%)</title><rect x="57.1392%" y="101" width="0.0128%" height="15" fill="rgb(206,20,26)" fg:x="17916" fg:w="4"/><text x="57.3892%" y="111.50"></text></g><g><title>meg`&lt;egui::widgets::button::Button as egui::widgets::Widget&gt;::ui (5 samples, 0.02%)</title><rect x="57.1615%" y="37" width="0.0159%" height="15" fill="rgb(238,220,4)" fg:x="17923" fg:w="5"/><text x="57.4115%" y="47.50"></text></g><g><title>meg`&lt;egui::widgets::drag_value::DragValue as egui::widgets::Widget&gt;::ui (7 samples, 0.02%)</title><rect x="57.1583%" y="53" width="0.0223%" height="15" fill="rgb(252,195,42)" fg:x="17922" fg:w="7"/><text x="57.4083%" y="63.50"></text></g><g><title>meg`core::ops::function::FnOnce::call_once{{vtable.shim}} (16 samples, 0.05%)</title><rect x="57.1360%" y="133" width="0.0510%" height="15" fill="rgb(209,10,6)" fg:x="17915" fg:w="16"/><text x="57.3860%" y="143.50"></text></g><g><title>meg`&lt;egui::widgets::slider::Slider as egui::widgets::Widget&gt;::ui (11 samples, 0.04%)</title><rect x="57.1520%" y="117" width="0.0351%" height="15" fill="rgb(229,3,52)" fg:x="17920" fg:w="11"/><text x="57.4020%" y="127.50"></text></g><g><title>meg`egui::ui::Ui::horizontal_with_main_wrap_dyn (11 samples, 0.04%)</title><rect x="57.1520%" y="101" width="0.0351%" height="15" fill="rgb(253,49,37)" fg:x="17920" fg:w="11"/><text x="57.4020%" y="111.50"></text></g><g><title>meg`core::ops::function::FnOnce::call_once{{vtable.shim}} (11 samples, 0.04%)</title><rect x="57.1520%" y="85" width="0.0351%" height="15" fill="rgb(240,103,49)" fg:x="17920" fg:w="11"/><text x="57.4020%" y="95.50"></text></g><g><title>meg`egui::widgets::slider::Slider::add_contents (11 samples, 0.04%)</title><rect x="57.1520%" y="69" width="0.0351%" height="15" fill="rgb(250,182,30)" fg:x="17920" fg:w="11"/><text x="57.4020%" y="79.50"></text></g><g><title>meg`core::ops::function::FnOnce::call_once{{vtable.shim}} (76 samples, 0.24%)</title><rect x="56.9510%" y="213" width="0.2424%" height="15" fill="rgb(248,8,30)" fg:x="17857" fg:w="76"/><text x="57.2010%" y="223.50"></text></g><g><title>meg`kintaro_egui_lib::apps::controls::widget_gallery::ControlsInner::gallery_grid_contents (71 samples, 0.23%)</title><rect x="56.9670%" y="197" width="0.2264%" height="15" fill="rgb(237,120,30)" fg:x="17862" fg:w="71"/><text x="57.2170%" y="207.50"></text></g><g><title>meg`egui::ui::Ui::with_layout_dyn (69 samples, 0.22%)</title><rect x="56.9734%" y="181" width="0.2201%" height="15" fill="rgb(221,146,34)" fg:x="17864" fg:w="69"/><text x="57.2234%" y="191.50"></text></g><g><title>meg`core::ops::function::FnOnce::call_once{{vtable.shim}} (69 samples, 0.22%)</title><rect x="56.9734%" y="165" width="0.2201%" height="15" fill="rgb(242,55,13)" fg:x="17864" fg:w="69"/><text x="57.2234%" y="175.50"></text></g><g><title>meg`egui::ui::Ui::with_layout_dyn (18 samples, 0.06%)</title><rect x="57.1360%" y="149" width="0.0574%" height="15" fill="rgb(242,112,31)" fg:x="17915" fg:w="18"/><text x="57.3860%" y="159.50"></text></g><g><title>meg`core::ops::function::FnOnce::call_once{{vtable.shim}} (79 samples, 0.25%)</title><rect x="56.9479%" y="277" width="0.2520%" height="15" fill="rgb(249,192,27)" fg:x="17856" fg:w="79"/><text x="57.1979%" y="287.50"></text></g><g><title>meg`egui::grid::Grid::show (79 samples, 0.25%)</title><rect x="56.9479%" y="261" width="0.2520%" height="15" fill="rgb(208,204,44)" fg:x="17856" fg:w="79"/><text x="57.1979%" y="271.50"></text></g><g><title>meg`egui::ui::Ui::allocate_ui_at_rect (78 samples, 0.25%)</title><rect x="56.9510%" y="245" width="0.2488%" height="15" fill="rgb(208,93,54)" fg:x="17857" fg:w="78"/><text x="57.2010%" y="255.50"></text></g><g><title>meg`egui::ui::Ui::horizontal_with_main_wrap_dyn (78 samples, 0.25%)</title><rect x="56.9510%" y="229" width="0.2488%" height="15" fill="rgb(242,1,31)" fg:x="17857" fg:w="78"/><text x="57.2010%" y="239.50"></text></g><g><title>meg`core::ops::function::FnOnce::call_once{{vtable.shim}} (80 samples, 0.26%)</title><rect x="56.9479%" y="309" width="0.2551%" height="15" fill="rgb(241,83,25)" fg:x="17856" fg:w="80"/><text x="57.1979%" y="319.50"></text></g><g><title>meg`egui::ui::Ui::scope_dyn (80 samples, 0.26%)</title><rect x="56.9479%" y="293" width="0.2551%" height="15" fill="rgb(205,169,50)" fg:x="17856" fg:w="80"/><text x="57.1979%" y="303.50"></text></g><g><title>meg`core::ops::function::FnOnce::call_once{{vtable.shim}} (83 samples, 0.26%)</title><rect x="56.9447%" y="341" width="0.2647%" height="15" fill="rgb(239,186,37)" fg:x="17855" fg:w="83"/><text x="57.1947%" y="351.50"></text></g><g><title>meg`egui::containers::resize::Resize::show (83 samples, 0.26%)</title><rect x="56.9447%" y="325" width="0.2647%" height="15" fill="rgb(205,221,10)" fg:x="17855" fg:w="83"/><text x="57.1947%" y="335.50"></text></g><g><title>meg`egui::containers::collapsing_header::State::add_contents (85 samples, 0.27%)</title><rect x="56.9415%" y="373" width="0.2711%" height="15" fill="rgb(218,196,15)" fg:x="17854" fg:w="85"/><text x="57.1915%" y="383.50"></text></g><g><title>meg`egui::ui::Ui::scope_dyn (84 samples, 0.27%)</title><rect x="56.9447%" y="357" width="0.2679%" height="15" fill="rgb(218,196,35)" fg:x="17855" fg:w="84"/><text x="57.1947%" y="367.50"></text></g><g><title>meg`epaint::tessellator::Path::fill (5 samples, 0.02%)</title><rect x="57.2413%" y="309" width="0.0159%" height="15" fill="rgb(233,63,24)" fg:x="17948" fg:w="5"/><text x="57.4913%" y="319.50"></text></g><g><title>meg`egui::containers::frame::Prepared::end (16 samples, 0.05%)</title><rect x="57.2253%" y="373" width="0.0510%" height="15" fill="rgb(225,8,4)" fg:x="17943" fg:w="16"/><text x="57.4753%" y="383.50"></text></g><g><title>meg`egui::containers::frame::Frame::paint (15 samples, 0.05%)</title><rect x="57.2285%" y="357" width="0.0478%" height="15" fill="rgb(234,105,35)" fg:x="17944" fg:w="15"/><text x="57.4785%" y="367.50"></text></g><g><title>meg`epaint::shadow::Shadow::tessellate (14 samples, 0.04%)</title><rect x="57.2317%" y="341" width="0.0446%" height="15" fill="rgb(236,21,32)" fg:x="17945" fg:w="14"/><text x="57.4817%" y="351.50"></text></g><g><title>meg`epaint::tessellator::Tessellator::tessellate_rect (14 samples, 0.04%)</title><rect x="57.2317%" y="325" width="0.0446%" height="15" fill="rgb(228,109,6)" fg:x="17945" fg:w="14"/><text x="57.4817%" y="335.50"></text></g><g><title>meg`epaint::tessellator::path::rounded_rectangle (5 samples, 0.02%)</title><rect x="57.2604%" y="309" width="0.0159%" height="15" fill="rgb(229,215,31)" fg:x="17954" fg:w="5"/><text x="57.5104%" y="319.50"></text></g><g><title>meg`epaint::tessellator::path::add_circle_quadrant (4 samples, 0.01%)</title><rect x="57.2636%" y="293" width="0.0128%" height="15" fill="rgb(221,52,54)" fg:x="17955" fg:w="4"/><text x="57.5136%" y="303.50"></text></g><g><title>meg`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.01%)</title><rect x="57.2636%" y="277" width="0.0128%" height="15" fill="rgb(252,129,43)" fg:x="17955" fg:w="4"/><text x="57.5136%" y="287.50"></text></g><g><title>meg`alloc::raw_vec::finish_grow (4 samples, 0.01%)</title><rect x="57.2636%" y="261" width="0.0128%" height="15" fill="rgb(248,183,27)" fg:x="17955" fg:w="4"/><text x="57.5136%" y="271.50"></text></g><g><title>meg`egui::containers::collapsing_header::paint_icon (4 samples, 0.01%)</title><rect x="57.3051%" y="325" width="0.0128%" height="15" fill="rgb(250,0,22)" fg:x="17968" fg:w="4"/><text x="57.5551%" y="335.50"></text></g><g><title>meg`egui::widget_text::WidgetText::into_galley (4 samples, 0.01%)</title><rect x="57.3306%" y="325" width="0.0128%" height="15" fill="rgb(213,166,10)" fg:x="17976" fg:w="4"/><text x="57.5806%" y="335.50"></text></g><g><title>meg`core::ops::function::FnOnce::call_once{{vtable.shim}} (17 samples, 0.05%)</title><rect x="57.2955%" y="341" width="0.0542%" height="15" fill="rgb(207,163,36)" fg:x="17965" fg:w="17"/><text x="57.5455%" y="351.50"></text></g><g><title>meg`egui::containers::window::show_title_bar (24 samples, 0.08%)</title><rect x="57.2764%" y="373" width="0.0765%" height="15" fill="rgb(208,122,22)" fg:x="17959" fg:w="24"/><text x="57.5264%" y="383.50"></text></g><g><title>meg`egui::ui::Ui::horizontal_with_main_wrap_dyn (20 samples, 0.06%)</title><rect x="57.2891%" y="357" width="0.0638%" height="15" fill="rgb(207,104,49)" fg:x="17963" fg:w="20"/><text x="57.5391%" y="367.50"></text></g><g><title>meg`&lt;kintaro_egui_lib::apps::controls::widget_gallery::ControlsInner as kintaro_egui_lib::apps::controls::Module&gt;::show (141 samples, 0.45%)</title><rect x="56.9064%" y="405" width="0.4497%" height="15" fill="rgb(248,211,50)" fg:x="17843" fg:w="141"/><text x="57.1564%" y="415.50"></text></g><g><title>meg`egui::containers::window::Window::show_dyn (140 samples, 0.45%)</title><rect x="56.9096%" y="389" width="0.4465%" height="15" fill="rgb(217,13,45)" fg:x="17844" fg:w="140"/><text x="57.1596%" y="399.50"></text></g><g><title>meg`egui::containers::frame::Frame::show (5 samples, 0.02%)</title><rect x="57.3784%" y="389" width="0.0159%" height="15" fill="rgb(211,216,49)" fg:x="17991" fg:w="5"/><text x="57.6284%" y="399.50"></text></g><g><title>meg`egui::containers::panel::CentralPanel::show (13 samples, 0.04%)</title><rect x="57.3657%" y="405" width="0.0415%" height="15" fill="rgb(221,58,53)" fg:x="17987" fg:w="13"/><text x="57.6157%" y="415.50"></text></g><g><title>meg`&lt;kintaro_egui_lib::wrap_app::WrapApp as epi::App&gt;::update (169 samples, 0.54%)</title><rect x="56.8809%" y="437" width="0.5390%" height="15" fill="rgb(220,112,41)" fg:x="17835" fg:w="169"/><text x="57.1309%" y="447.50"></text></g><g><title>meg`kintaro_egui_lib::apps::controls::windows::Windows::ui (162 samples, 0.52%)</title><rect x="56.9032%" y="421" width="0.5167%" height="15" fill="rgb(236,38,28)" fg:x="17842" fg:w="162"/><text x="57.1532%" y="431.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.01%)</title><rect x="57.4613%" y="405" width="0.0128%" height="15" fill="rgb(227,195,22)" fg:x="18017" fg:w="4"/><text x="57.7113%" y="415.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer commit] (4 samples, 0.01%)</title><rect x="57.4837%" y="357" width="0.0128%" height="15" fill="rgb(214,55,33)" fg:x="18024" fg:w="4"/><text x="57.7337%" y="367.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer commit] (5 samples, 0.02%)</title><rect x="57.4837%" y="373" width="0.0159%" height="15" fill="rgb(248,80,13)" fg:x="18024" fg:w="5"/><text x="57.7337%" y="383.50"></text></g><g><title>meg`&lt;wgpu_hal::metal::Queue as wgpu_hal::Queue&lt;wgpu_hal::metal::Api&gt;&gt;::submit (10 samples, 0.03%)</title><rect x="57.4773%" y="405" width="0.0319%" height="15" fill="rgb(238,52,6)" fg:x="18022" fg:w="10"/><text x="57.7273%" y="415.50"></text></g><g><title>meg`objc::rc::autorelease::autoreleasepool (9 samples, 0.03%)</title><rect x="57.4805%" y="389" width="0.0287%" height="15" fill="rgb(224,198,47)" fg:x="18023" fg:w="9"/><text x="57.7305%" y="399.50"></text></g><g><title>meg`wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers (5 samples, 0.02%)</title><rect x="57.5315%" y="405" width="0.0159%" height="15" fill="rgb(233,171,20)" fg:x="18039" fg:w="5"/><text x="57.7815%" y="415.50"></text></g><g><title>meg`wgpu_core::track::ResourceTracker&lt;S&gt;::merge_replace (5 samples, 0.02%)</title><rect x="57.5315%" y="389" width="0.0159%" height="15" fill="rgb(241,30,25)" fg:x="18039" fg:w="5"/><text x="57.7815%" y="399.50"></text></g><g><title>CoreFoundation`_CFRelease (45 samples, 0.14%)</title><rect x="57.5634%" y="341" width="0.1435%" height="15" fill="rgb(207,171,38)" fg:x="18049" fg:w="45"/><text x="57.8134%" y="351.50"></text></g><g><title>IOAccelerator`ioAccelResourceFinalize (45 samples, 0.14%)</title><rect x="57.5634%" y="325" width="0.1435%" height="15" fill="rgb(234,70,1)" fg:x="18049" fg:w="45"/><text x="57.8134%" y="335.50"></text></g><g><title>IOKit`IOConnectCallMethod (44 samples, 0.14%)</title><rect x="57.5666%" y="309" width="0.1403%" height="15" fill="rgb(232,178,18)" fg:x="18050" fg:w="44"/><text x="57.8166%" y="319.50"></text></g><g><title>IOKit`io_connect_method (43 samples, 0.14%)</title><rect x="57.5698%" y="293" width="0.1371%" height="15" fill="rgb(241,78,40)" fg:x="18051" fg:w="43"/><text x="57.8198%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (42 samples, 0.13%)</title><rect x="57.5730%" y="277" width="0.1339%" height="15" fill="rgb(222,35,25)" fg:x="18052" fg:w="42"/><text x="57.8230%" y="287.50"></text></g><g><title>Metal`-[MTLIOAccelResource dealloc] (47 samples, 0.15%)</title><rect x="57.5602%" y="357" width="0.1499%" height="15" fill="rgb(207,92,16)" fg:x="18048" fg:w="47"/><text x="57.8102%" y="367.50"></text></g><g><title>meg`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::cleanup (52 samples, 0.17%)</title><rect x="57.5538%" y="389" width="0.1658%" height="15" fill="rgb(216,59,51)" fg:x="18046" fg:w="52"/><text x="57.8038%" y="399.50"></text></g><g><title>Metal`-[MTLIOAccelBuffer dealloc] (51 samples, 0.16%)</title><rect x="57.5570%" y="373" width="0.1627%" height="15" fill="rgb(213,80,28)" fg:x="18047" fg:w="51"/><text x="57.8070%" y="383.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer dealloc] (5 samples, 0.02%)</title><rect x="57.7516%" y="341" width="0.0159%" height="15" fill="rgb(220,93,7)" fg:x="18108" fg:w="5"/><text x="58.0016%" y="351.50"></text></g><g><title>Metal`-[_MTLCommandBuffer dealloc] (5 samples, 0.02%)</title><rect x="57.7516%" y="325" width="0.0159%" height="15" fill="rgb(225,24,44)" fg:x="18108" fg:w="5"/><text x="58.0016%" y="335.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer dealloc] (13 samples, 0.04%)</title><rect x="57.7324%" y="357" width="0.0415%" height="15" fill="rgb(243,74,40)" fg:x="18102" fg:w="13"/><text x="57.9824%" y="367.50"></text></g><g><title>meg`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_submissions (18 samples, 0.06%)</title><rect x="57.7197%" y="389" width="0.0574%" height="15" fill="rgb(228,39,7)" fg:x="18098" fg:w="18"/><text x="57.9697%" y="399.50"></text></g><g><title>meg`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.05%)</title><rect x="57.7292%" y="373" width="0.0478%" height="15" fill="rgb(227,79,8)" fg:x="18101" fg:w="15"/><text x="57.9792%" y="383.50"></text></g><g><title>meg`wgpu_core::device::Device&lt;A&gt;::maintain (73 samples, 0.23%)</title><rect x="57.5506%" y="405" width="0.2328%" height="15" fill="rgb(236,58,11)" fg:x="18045" fg:w="73"/><text x="57.8006%" y="415.50"></text></g><g><title>meg`wgpu_core::device::queue::PendingWrites&lt;A&gt;::pre_submit (5 samples, 0.02%)</title><rect x="57.7962%" y="405" width="0.0159%" height="15" fill="rgb(249,63,35)" fg:x="18122" fg:w="5"/><text x="58.0462%" y="415.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (4 samples, 0.01%)</title><rect x="57.8313%" y="357" width="0.0128%" height="15" fill="rgb(252,114,16)" fg:x="18133" fg:w="4"/><text x="58.0813%" y="367.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandQueue commandBufferWithUnretainedReferences] (5 samples, 0.02%)</title><rect x="57.8313%" y="373" width="0.0159%" height="15" fill="rgb(254,151,24)" fg:x="18133" fg:w="5"/><text x="58.0813%" y="383.50"></text></g><g><title>meg`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (131 samples, 0.42%)</title><rect x="57.4358%" y="421" width="0.4178%" height="15" fill="rgb(253,54,39)" fg:x="18009" fg:w="131"/><text x="57.6858%" y="431.50"></text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (10 samples, 0.03%)</title><rect x="57.8217%" y="405" width="0.0319%" height="15" fill="rgb(243,25,45)" fg:x="18130" fg:w="10"/><text x="58.0717%" y="415.50"></text></g><g><title>meg`objc::rc::autorelease::autoreleasepool (7 samples, 0.02%)</title><rect x="57.8313%" y="389" width="0.0223%" height="15" fill="rgb(234,134,9)" fg:x="18133" fg:w="7"/><text x="58.0813%" y="399.50"></text></g><g><title>meg`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (137 samples, 0.44%)</title><rect x="57.4199%" y="437" width="0.4369%" height="15" fill="rgb(227,166,31)" fg:x="18004" fg:w="137"/><text x="57.6699%" y="447.50"></text></g><g><title>meg`alloc::sync::Arc&lt;T&gt;::drop_slow (5 samples, 0.02%)</title><rect x="57.8568%" y="437" width="0.0159%" height="15" fill="rgb(245,143,41)" fg:x="18141" fg:w="5"/><text x="58.1068%" y="447.50"></text></g><g><title>meg`epaint::stats::PaintStats::from_shapes (4 samples, 0.01%)</title><rect x="57.8823%" y="421" width="0.0128%" height="15" fill="rgb(238,181,32)" fg:x="18149" fg:w="4"/><text x="58.1323%" y="431.50"></text></g><g><title>meg`epaint::stats::PaintStats::add (4 samples, 0.01%)</title><rect x="57.8823%" y="405" width="0.0128%" height="15" fill="rgb(224,113,18)" fg:x="18149" fg:w="4"/><text x="58.1323%" y="415.50"></text></g><g><title>meg`epaint::tessellator::Path::fill (5 samples, 0.02%)</title><rect x="57.9333%" y="389" width="0.0159%" height="15" fill="rgb(240,229,28)" fg:x="18165" fg:w="5"/><text x="58.1833%" y="399.50"></text></g><g><title>meg`epaint::tessellator::Path::add_line_loop (7 samples, 0.02%)</title><rect x="57.9652%" y="373" width="0.0223%" height="15" fill="rgb(250,185,3)" fg:x="18175" fg:w="7"/><text x="58.2152%" y="383.50"></text></g><g><title>meg`epaint::tessellator::Path::fill (19 samples, 0.06%)</title><rect x="57.9876%" y="373" width="0.0606%" height="15" fill="rgb(212,59,25)" fg:x="18182" fg:w="19"/><text x="58.2376%" y="383.50"></text></g><g><title>meg`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (14 samples, 0.04%)</title><rect x="58.0035%" y="357" width="0.0446%" height="15" fill="rgb(221,87,20)" fg:x="18187" fg:w="14"/><text x="58.2535%" y="367.50"></text></g><g><title>meg`alloc::raw_vec::finish_grow (14 samples, 0.04%)</title><rect x="58.0035%" y="341" width="0.0446%" height="15" fill="rgb(213,74,28)" fg:x="18187" fg:w="14"/><text x="58.2535%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`realloc (14 samples, 0.04%)</title><rect x="58.0035%" y="325" width="0.0446%" height="15" fill="rgb(224,132,34)" fg:x="18187" fg:w="14"/><text x="58.2535%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (14 samples, 0.04%)</title><rect x="58.0035%" y="309" width="0.0446%" height="15" fill="rgb(222,101,24)" fg:x="18187" fg:w="14"/><text x="58.2535%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (14 samples, 0.04%)</title><rect x="58.0035%" y="293" width="0.0446%" height="15" fill="rgb(254,142,4)" fg:x="18187" fg:w="14"/><text x="58.2535%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (6 samples, 0.02%)</title><rect x="58.0290%" y="277" width="0.0191%" height="15" fill="rgb(230,229,49)" fg:x="18195" fg:w="6"/><text x="58.2790%" y="287.50"></text></g><g><title>libsystem_m.dylib`0x00007ff80ccf20b0 (5 samples, 0.02%)</title><rect x="58.0609%" y="357" width="0.0159%" height="15" fill="rgb(238,70,47)" fg:x="18205" fg:w="5"/><text x="58.3109%" y="367.50"></text></g><g><title>meg`epaint::tessellator::Tessellator::tessellate_rect (42 samples, 0.13%)</title><rect x="57.9493%" y="389" width="0.1339%" height="15" fill="rgb(231,160,17)" fg:x="18170" fg:w="42"/><text x="58.1993%" y="399.50"></text></g><g><title>meg`epaint::tessellator::path::rounded_rectangle (11 samples, 0.04%)</title><rect x="58.0482%" y="373" width="0.0351%" height="15" fill="rgb(218,68,53)" fg:x="18201" fg:w="11"/><text x="58.2982%" y="383.50"></text></g><g><title>meg`epaint::tessellator::Path::fill (4 samples, 0.01%)</title><rect x="58.1088%" y="357" width="0.0128%" height="15" fill="rgb(236,111,10)" fg:x="18220" fg:w="4"/><text x="58.3588%" y="367.50"></text></g><g><title>meg`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.01%)</title><rect x="58.1088%" y="341" width="0.0128%" height="15" fill="rgb(224,34,41)" fg:x="18220" fg:w="4"/><text x="58.3588%" y="351.50"></text></g><g><title>meg`alloc::raw_vec::finish_grow (4 samples, 0.01%)</title><rect x="58.1088%" y="325" width="0.0128%" height="15" fill="rgb(241,118,19)" fg:x="18220" fg:w="4"/><text x="58.3588%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`realloc (4 samples, 0.01%)</title><rect x="58.1088%" y="309" width="0.0128%" height="15" fill="rgb(238,129,25)" fg:x="18220" fg:w="4"/><text x="58.3588%" y="319.50"></text></g><g><title>meg`epaint::tessellator::Tessellator::tessellate_rect (9 samples, 0.03%)</title><rect x="58.1056%" y="373" width="0.0287%" height="15" fill="rgb(238,22,31)" fg:x="18219" fg:w="9"/><text x="58.3556%" y="383.50"></text></g><g><title>meg`epaint::tessellator::path::rounded_rectangle (4 samples, 0.01%)</title><rect x="58.1215%" y="357" width="0.0128%" height="15" fill="rgb(222,174,48)" fg:x="18224" fg:w="4"/><text x="58.3715%" y="367.50"></text></g><g><title>meg`epaint::tessellator::Tessellator::tessellate_shape (23 samples, 0.07%)</title><rect x="58.0832%" y="389" width="0.0734%" height="15" fill="rgb(206,152,40)" fg:x="18212" fg:w="23"/><text x="58.3332%" y="399.50"></text></g><g><title>meg`epaint::tessellator::stroke_path (7 samples, 0.02%)</title><rect x="58.1343%" y="373" width="0.0223%" height="15" fill="rgb(218,99,54)" fg:x="18228" fg:w="7"/><text x="58.3843%" y="383.50"></text></g><g><title>meg`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.02%)</title><rect x="58.1853%" y="373" width="0.0159%" height="15" fill="rgb(220,174,26)" fg:x="18244" fg:w="5"/><text x="58.4353%" y="383.50"></text></g><g><title>meg`epaint::tessellator::Tessellator::tessellate_text (19 samples, 0.06%)</title><rect x="58.1566%" y="389" width="0.0606%" height="15" fill="rgb(245,116,9)" fg:x="18235" fg:w="19"/><text x="58.4066%" y="399.50"></text></g><g><title>meg`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.02%)</title><rect x="58.2012%" y="373" width="0.0159%" height="15" fill="rgb(209,72,35)" fg:x="18249" fg:w="5"/><text x="58.4512%" y="383.50"></text></g><g><title>meg`alloc::raw_vec::finish_grow (5 samples, 0.02%)</title><rect x="58.2012%" y="357" width="0.0159%" height="15" fill="rgb(226,126,21)" fg:x="18249" fg:w="5"/><text x="58.4512%" y="367.50"></text></g><g><title>meg`epaint::tessellator::Tessellator::tessellate_shape (100 samples, 0.32%)</title><rect x="57.9142%" y="405" width="0.3189%" height="15" fill="rgb(227,192,1)" fg:x="18159" fg:w="100"/><text x="58.1642%" y="415.50"></text></g><g><title>meg`epaint::tessellator::stroke_path (5 samples, 0.02%)</title><rect x="58.2172%" y="389" width="0.0159%" height="15" fill="rgb(237,180,29)" fg:x="18254" fg:w="5"/><text x="58.4672%" y="399.50"></text></g><g><title>meg`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.01%)</title><rect x="58.2204%" y="373" width="0.0128%" height="15" fill="rgb(230,197,35)" fg:x="18255" fg:w="4"/><text x="58.4704%" y="383.50"></text></g><g><title>meg`alloc::raw_vec::finish_grow (4 samples, 0.01%)</title><rect x="58.2204%" y="357" width="0.0128%" height="15" fill="rgb(246,193,31)" fg:x="18255" fg:w="4"/><text x="58.4704%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`realloc (4 samples, 0.01%)</title><rect x="58.2204%" y="341" width="0.0128%" height="15" fill="rgb(241,36,4)" fg:x="18255" fg:w="4"/><text x="58.4704%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (4 samples, 0.01%)</title><rect x="58.2204%" y="325" width="0.0128%" height="15" fill="rgb(241,130,17)" fg:x="18255" fg:w="4"/><text x="58.4704%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (4 samples, 0.01%)</title><rect x="58.2204%" y="309" width="0.0128%" height="15" fill="rgb(206,137,32)" fg:x="18255" fg:w="4"/><text x="58.4704%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (5 samples, 0.02%)</title><rect x="58.3129%" y="341" width="0.0159%" height="15" fill="rgb(237,228,51)" fg:x="18284" fg:w="5"/><text x="58.5629%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (4 samples, 0.01%)</title><rect x="58.3161%" y="325" width="0.0128%" height="15" fill="rgb(243,6,42)" fg:x="18285" fg:w="4"/><text x="58.5661%" y="335.50"></text></g><g><title>meg`epaint::tessellator::tessellate_shapes (136 samples, 0.43%)</title><rect x="57.8983%" y="421" width="0.4337%" height="15" fill="rgb(251,74,28)" fg:x="18154" fg:w="136"/><text x="58.1483%" y="431.50"></text></g><g><title>meg`epaint::tessellator::stroke_path (31 samples, 0.10%)</title><rect x="58.2331%" y="405" width="0.0989%" height="15" fill="rgb(218,20,49)" fg:x="18259" fg:w="31"/><text x="58.4831%" y="415.50"></text></g><g><title>meg`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.02%)</title><rect x="58.3097%" y="389" width="0.0223%" height="15" fill="rgb(238,28,14)" fg:x="18283" fg:w="7"/><text x="58.5597%" y="399.50"></text></g><g><title>meg`alloc::raw_vec::finish_grow (6 samples, 0.02%)</title><rect x="58.3129%" y="373" width="0.0191%" height="15" fill="rgb(229,40,46)" fg:x="18284" fg:w="6"/><text x="58.5629%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`realloc (6 samples, 0.02%)</title><rect x="58.3129%" y="357" width="0.0191%" height="15" fill="rgb(244,195,20)" fg:x="18284" fg:w="6"/><text x="58.5629%" y="367.50"></text></g><g><title>meg`egui::context::Context::tessellate (143 samples, 0.46%)</title><rect x="57.8791%" y="437" width="0.4561%" height="15" fill="rgb(253,56,35)" fg:x="18148" fg:w="143"/><text x="58.1291%" y="447.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::writePSState (6 samples, 0.02%)</title><rect x="58.3990%" y="325" width="0.0191%" height="15" fill="rgb(210,149,44)" fg:x="18311" fg:w="6"/><text x="58.6490%" y="335.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::programPipeline (25 samples, 0.08%)</title><rect x="58.3735%" y="341" width="0.0797%" height="15" fill="rgb(240,135,12)" fg:x="18303" fg:w="25"/><text x="58.6235%" y="351.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`ShaderBindingStage::writeTableIf (4 samples, 0.01%)</title><rect x="58.4404%" y="325" width="0.0128%" height="15" fill="rgb(251,24,50)" fg:x="18324" fg:w="4"/><text x="58.6904%" y="335.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::drawIndexedPrimitives (26 samples, 0.08%)</title><rect x="58.3735%" y="357" width="0.0829%" height="15" fill="rgb(243,200,47)" fg:x="18303" fg:w="26"/><text x="58.6235%" y="367.50"></text></g><g><title>meg`metal::encoder::RenderCommandEncoderRef::draw_indexed_primitives (28 samples, 0.09%)</title><rect x="58.3735%" y="389" width="0.0893%" height="15" fill="rgb(224,166,26)" fg:x="18303" fg:w="28"/><text x="58.6235%" y="399.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:] (28 samples, 0.09%)</title><rect x="58.3735%" y="373" width="0.0893%" height="15" fill="rgb(233,0,47)" fg:x="18303" fg:w="28"/><text x="58.6235%" y="383.50"></text></g><g><title>meg`wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers (4 samples, 0.01%)</title><rect x="58.4628%" y="389" width="0.0128%" height="15" fill="rgb(253,80,5)" fg:x="18331" fg:w="4"/><text x="58.7128%" y="399.50"></text></g><g><title>meg`wgpu_core::track::ResourceTracker&lt;S&gt;::merge_replace (4 samples, 0.01%)</title><rect x="58.4628%" y="373" width="0.0128%" height="15" fill="rgb(214,133,25)" fg:x="18331" fg:w="4"/><text x="58.7128%" y="383.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder endEncoding] (34 samples, 0.11%)</title><rect x="58.5074%" y="357" width="0.1084%" height="15" fill="rgb(209,27,14)" fg:x="18345" fg:w="34"/><text x="58.7574%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (31 samples, 0.10%)</title><rect x="58.5170%" y="341" width="0.0989%" height="15" fill="rgb(219,102,51)" fg:x="18348" fg:w="31"/><text x="58.7670%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`madvise (30 samples, 0.10%)</title><rect x="58.5202%" y="325" width="0.0957%" height="15" fill="rgb(237,18,16)" fg:x="18349" fg:w="30"/><text x="58.7702%" y="335.50"></text></g><g><title>meg`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::finish (38 samples, 0.12%)</title><rect x="58.4978%" y="389" width="0.1212%" height="15" fill="rgb(241,85,17)" fg:x="18342" fg:w="38"/><text x="58.7478%" y="399.50"></text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::end_render_pass (35 samples, 0.11%)</title><rect x="58.5074%" y="373" width="0.1116%" height="15" fill="rgb(236,90,42)" fg:x="18345" fg:w="35"/><text x="58.7574%" y="383.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGRenderStateBindingTable::IGRenderStateBindingTable (5 samples, 0.02%)</title><rect x="58.6477%" y="293" width="0.0159%" height="15" fill="rgb(249,57,21)" fg:x="18389" fg:w="5"/><text x="58.8977%" y="303.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::IGAccelRenderCommandEncoder (6 samples, 0.02%)</title><rect x="58.6477%" y="309" width="0.0191%" height="15" fill="rgb(243,12,36)" fg:x="18389" fg:w="6"/><text x="58.8977%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::initializeHWState (5 samples, 0.02%)</title><rect x="58.6701%" y="293" width="0.0159%" height="15" fill="rgb(253,128,47)" fg:x="18396" fg:w="5"/><text x="58.9201%" y="303.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGRenderPass::initWithDescriptor (8 samples, 0.03%)</title><rect x="58.6860%" y="277" width="0.0255%" height="15" fill="rgb(207,33,20)" fg:x="18401" fg:w="8"/><text x="58.9360%" y="287.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::initializeRenderPassState (9 samples, 0.03%)</title><rect x="58.6860%" y="293" width="0.0287%" height="15" fill="rgb(233,215,35)" fg:x="18401" fg:w="9"/><text x="58.9360%" y="303.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IntelStateHeaps::acquireHeap (12 samples, 0.04%)</title><rect x="58.7179%" y="277" width="0.0383%" height="15" fill="rgb(249,188,52)" fg:x="18411" fg:w="12"/><text x="58.9679%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (7 samples, 0.02%)</title><rect x="58.7339%" y="261" width="0.0223%" height="15" fill="rgb(225,12,32)" fg:x="18416" fg:w="7"/><text x="58.9839%" y="271.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IntelStateHeaps::initialize (15 samples, 0.05%)</title><rect x="58.7147%" y="293" width="0.0478%" height="15" fill="rgb(247,98,14)" fg:x="18410" fg:w="15"/><text x="58.9647%" y="303.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::initialize (33 samples, 0.11%)</title><rect x="58.6669%" y="309" width="0.1052%" height="15" fill="rgb(247,219,48)" fg:x="18395" fg:w="33"/><text x="58.9169%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder initWithCommandBuffer:descriptor:stateDescriptor:] (44 samples, 0.14%)</title><rect x="58.6446%" y="325" width="0.1403%" height="15" fill="rgb(253,60,48)" fg:x="18388" fg:w="44"/><text x="58.8946%" y="335.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer renderCommandEncoderWithDescriptor:] (48 samples, 0.15%)</title><rect x="58.6414%" y="341" width="0.1531%" height="15" fill="rgb(245,15,52)" fg:x="18387" fg:w="48"/><text x="58.8914%" y="351.50"></text></g><g><title>meg`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (58 samples, 0.18%)</title><rect x="58.6190%" y="389" width="0.1850%" height="15" fill="rgb(220,133,28)" fg:x="18380" fg:w="58"/><text x="58.8690%" y="399.50"></text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_render_pass (54 samples, 0.17%)</title><rect x="58.6318%" y="373" width="0.1722%" height="15" fill="rgb(217,180,4)" fg:x="18384" fg:w="54"/><text x="58.8818%" y="383.50"></text></g><g><title>meg`objc::rc::autorelease::autoreleasepool (51 samples, 0.16%)</title><rect x="58.6414%" y="357" width="0.1627%" height="15" fill="rgb(251,24,1)" fg:x="18387" fg:w="51"/><text x="58.8914%" y="367.50"></text></g><g><title>meg`wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (5 samples, 0.02%)</title><rect x="58.8136%" y="389" width="0.0159%" height="15" fill="rgb(212,185,49)" fg:x="18441" fg:w="5"/><text x="59.0636%" y="399.50"></text></g><g><title>meg`wgpu_core::track::ResourceTracker&lt;S&gt;::use_extend (5 samples, 0.02%)</title><rect x="58.8295%" y="389" width="0.0159%" height="15" fill="rgb(215,175,22)" fg:x="18446" fg:w="5"/><text x="59.0795%" y="399.50"></text></g><g><title>meg`wgpu_core::track::StatefulTrackerSubset::merge_extend (6 samples, 0.02%)</title><rect x="58.8455%" y="389" width="0.0191%" height="15" fill="rgb(250,205,14)" fg:x="18451" fg:w="6"/><text x="59.0955%" y="399.50"></text></g><g><title>meg`wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (6 samples, 0.02%)</title><rect x="58.8455%" y="373" width="0.0191%" height="15" fill="rgb(225,211,22)" fg:x="18451" fg:w="6"/><text x="59.0955%" y="383.50"></text></g><g><title>meg`metal::commandbuffer::CommandBufferRef::set_label (5 samples, 0.02%)</title><rect x="58.8774%" y="373" width="0.0159%" height="15" fill="rgb(251,179,42)" fg:x="18461" fg:w="5"/><text x="59.1274%" y="383.50"></text></g><g><title>meg`metal::nsstring_from_str (4 samples, 0.01%)</title><rect x="58.8806%" y="357" width="0.0128%" height="15" fill="rgb(208,216,51)" fg:x="18462" fg:w="4"/><text x="59.1306%" y="367.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (4 samples, 0.01%)</title><rect x="58.8806%" y="341" width="0.0128%" height="15" fill="rgb(235,36,11)" fg:x="18462" fg:w="4"/><text x="59.1306%" y="351.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (4 samples, 0.01%)</title><rect x="58.8806%" y="325" width="0.0128%" height="15" fill="rgb(213,189,28)" fg:x="18462" fg:w="4"/><text x="59.1306%" y="335.50"></text></g><g><title>CoreFoundation`__CFSearchStringROM (4 samples, 0.01%)</title><rect x="58.8806%" y="309" width="0.0128%" height="15" fill="rgb(227,203,42)" fg:x="18462" fg:w="4"/><text x="59.1306%" y="319.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (6 samples, 0.02%)</title><rect x="58.8965%" y="325" width="0.0191%" height="15" fill="rgb(244,72,36)" fg:x="18467" fg:w="6"/><text x="59.1465%" y="335.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (8 samples, 0.03%)</title><rect x="58.8965%" y="341" width="0.0255%" height="15" fill="rgb(213,53,17)" fg:x="18467" fg:w="8"/><text x="59.1465%" y="351.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandQueue commandBufferWithUnretainedReferences] (11 samples, 0.04%)</title><rect x="58.8965%" y="357" width="0.0351%" height="15" fill="rgb(207,167,3)" fg:x="18467" fg:w="11"/><text x="59.1465%" y="367.50"></text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (21 samples, 0.07%)</title><rect x="58.8678%" y="389" width="0.0670%" height="15" fill="rgb(216,98,30)" fg:x="18458" fg:w="21"/><text x="59.1178%" y="399.50"></text></g><g><title>meg`objc::rc::autorelease::autoreleasepool (12 samples, 0.04%)</title><rect x="58.8965%" y="373" width="0.0383%" height="15" fill="rgb(236,123,15)" fg:x="18467" fg:w="12"/><text x="59.1465%" y="383.50"></text></g><g><title>meg`wgpu_core::command::render::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (188 samples, 0.60%)</title><rect x="58.3448%" y="405" width="0.5996%" height="15" fill="rgb(248,81,50)" fg:x="18294" fg:w="188"/><text x="58.5948%" y="415.50"></text></g><g><title>meg`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (190 samples, 0.61%)</title><rect x="58.3416%" y="421" width="0.6060%" height="15" fill="rgb(214,120,4)" fg:x="18293" fg:w="190"/><text x="58.5916%" y="431.50"></text></g><g><title>meg`wgpu_render_pass_set_scissor_rect (4 samples, 0.01%)</title><rect x="58.9507%" y="405" width="0.0128%" height="15" fill="rgb(208,179,34)" fg:x="18484" fg:w="4"/><text x="59.2007%" y="415.50"></text></g><g><title>meg`egui_wgpu_backend::RenderPass::execute_with_renderpass (5 samples, 0.02%)</title><rect x="58.9507%" y="421" width="0.0159%" height="15" fill="rgb(227,140,7)" fg:x="18484" fg:w="5"/><text x="59.2007%" y="431.50"></text></g><g><title>meg`egui_wgpu_backend::RenderPass::execute (200 samples, 0.64%)</title><rect x="58.3384%" y="437" width="0.6379%" height="15" fill="rgb(214,22,6)" fg:x="18292" fg:w="200"/><text x="58.5884%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (21 samples, 0.07%)</title><rect x="59.0145%" y="389" width="0.0670%" height="15" fill="rgb(207,137,27)" fg:x="18504" fg:w="21"/><text x="59.2645%" y="399.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`void std::__1::vector&lt;IGBL::BlitRectPair, std::__1::allocator&lt;IGBL::BlitRectPair&gt; &gt;::__push_back_slow_path&lt;IGBL::BlitRectPair const&amp;&gt; (6 samples, 0.02%)</title><rect x="59.1134%" y="325" width="0.0191%" height="15" fill="rgb(210,8,46)" fg:x="18535" fg:w="6"/><text x="59.3634%" y="335.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelBlitCommandEncoder::copyBufferToBufferInternal (14 samples, 0.04%)</title><rect x="59.1006%" y="341" width="0.0446%" height="15" fill="rgb(240,16,54)" fg:x="18531" fg:w="14"/><text x="59.3506%" y="351.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelBlitCommandEncoder copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:] (20 samples, 0.06%)</title><rect x="59.0847%" y="373" width="0.0638%" height="15" fill="rgb(211,209,29)" fg:x="18526" fg:w="20"/><text x="59.3347%" y="383.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelBlitCommandEncoder::copyBufferToBuffer (19 samples, 0.06%)</title><rect x="59.0879%" y="357" width="0.0606%" height="15" fill="rgb(226,228,24)" fg:x="18527" fg:w="19"/><text x="59.3379%" y="367.50"></text></g><g><title>meg`metal::encoder::BlitCommandEncoderRef::copy_from_buffer (21 samples, 0.07%)</title><rect x="59.0847%" y="389" width="0.0670%" height="15" fill="rgb(222,84,9)" fg:x="18526" fg:w="21"/><text x="59.3347%" y="399.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (4 samples, 0.01%)</title><rect x="59.1676%" y="309" width="0.0128%" height="15" fill="rgb(234,203,30)" fg:x="18552" fg:w="4"/><text x="59.4176%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (5 samples, 0.02%)</title><rect x="59.1676%" y="325" width="0.0159%" height="15" fill="rgb(238,109,14)" fg:x="18552" fg:w="5"/><text x="59.4176%" y="335.50"></text></g><g><title>meg`wgpu_core::device::queue::PendingWrites&lt;A&gt;::activate (11 samples, 0.04%)</title><rect x="59.1517%" y="389" width="0.0351%" height="15" fill="rgb(233,206,34)" fg:x="18547" fg:w="11"/><text x="59.4017%" y="399.50"></text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (11 samples, 0.04%)</title><rect x="59.1517%" y="373" width="0.0351%" height="15" fill="rgb(220,167,47)" fg:x="18547" fg:w="11"/><text x="59.4017%" y="383.50"></text></g><g><title>meg`objc::rc::autorelease::autoreleasepool (6 samples, 0.02%)</title><rect x="59.1676%" y="357" width="0.0191%" height="15" fill="rgb(238,105,10)" fg:x="18552" fg:w="6"/><text x="59.4176%" y="367.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandQueue commandBufferWithUnretainedReferences] (6 samples, 0.02%)</title><rect x="59.1676%" y="341" width="0.0191%" height="15" fill="rgb(213,227,17)" fg:x="18552" fg:w="6"/><text x="59.4176%" y="351.50"></text></g><g><title>meg`wgpu_core::hub::Storage&lt;T,I&gt;::get (4 samples, 0.01%)</title><rect x="59.1867%" y="389" width="0.0128%" height="15" fill="rgb(217,132,38)" fg:x="18558" fg:w="4"/><text x="59.4367%" y="399.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelBlitCommandEncoder initWithCommandBuffer:stateDescriptor:] (6 samples, 0.02%)</title><rect x="59.2059%" y="325" width="0.0191%" height="15" fill="rgb(242,146,4)" fg:x="18564" fg:w="6"/><text x="59.4559%" y="335.50"></text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::copy_buffer_to_buffer (11 samples, 0.04%)</title><rect x="59.2059%" y="389" width="0.0351%" height="15" fill="rgb(212,61,9)" fg:x="18564" fg:w="11"/><text x="59.4559%" y="399.50"></text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::metal::CommandEncoder&gt;::enter_blit (11 samples, 0.04%)</title><rect x="59.2059%" y="373" width="0.0351%" height="15" fill="rgb(247,126,22)" fg:x="18564" fg:w="11"/><text x="59.4559%" y="383.50"></text></g><g><title>meg`objc::rc::autorelease::autoreleasepool (11 samples, 0.04%)</title><rect x="59.2059%" y="357" width="0.0351%" height="15" fill="rgb(220,196,2)" fg:x="18564" fg:w="11"/><text x="59.4559%" y="367.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer blitCommandEncoder] (11 samples, 0.04%)</title><rect x="59.2059%" y="341" width="0.0351%" height="15" fill="rgb(208,46,4)" fg:x="18564" fg:w="11"/><text x="59.4559%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (251 samples, 0.80%)</title><rect x="59.2920%" y="245" width="0.8005%" height="15" fill="rgb(252,104,46)" fg:x="18591" fg:w="251"/><text x="59.5420%" y="255.50"></text></g><g><title>IOKit`io_connect_method (255 samples, 0.81%)</title><rect x="59.2856%" y="261" width="0.8133%" height="15" fill="rgb(237,152,48)" fg:x="18589" fg:w="255"/><text x="59.5356%" y="271.50"></text></g><g><title>IOKit`IOConnectCallMethod (257 samples, 0.82%)</title><rect x="59.2856%" y="277" width="0.8196%" height="15" fill="rgb(221,59,37)" fg:x="18589" fg:w="257"/><text x="59.5356%" y="287.50"></text></g><g><title>IOAccelerator`IOAccelResourceCreate (268 samples, 0.85%)</title><rect x="59.2665%" y="293" width="0.8547%" height="15" fill="rgb(209,202,51)" fg:x="18583" fg:w="268"/><text x="59.5165%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (5 samples, 0.02%)</title><rect x="60.1052%" y="277" width="0.0159%" height="15" fill="rgb(228,81,30)" fg:x="18846" fg:w="5"/><text x="60.3552%" y="287.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:remoteStorageResource:options:args:argsSize:] (282 samples, 0.90%)</title><rect x="59.2537%" y="309" width="0.8994%" height="15" fill="rgb(227,42,39)" fg:x="18579" fg:w="282"/><text x="59.5037%" y="319.50"></text></g><g><title>libobjc.A.dylib`objc_storeWeak (9 samples, 0.03%)</title><rect x="60.1244%" y="293" width="0.0287%" height="15" fill="rgb(221,26,2)" fg:x="18852" fg:w="9"/><text x="60.3744%" y="303.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:args:argsSize:deallocator:] (287 samples, 0.92%)</title><rect x="59.2473%" y="357" width="0.9153%" height="15" fill="rgb(254,61,31)" fg:x="18577" fg:w="287"/><text x="59.4973%" y="367.50"></text></g><g><title>Metal`-[MTLIOAccelBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:args:argsSize:deallocator:] (287 samples, 0.92%)</title><rect x="59.2473%" y="341" width="0.9153%" height="15" fill="rgb(222,173,38)" fg:x="18577" fg:w="287"/><text x="59.4973%" y="351.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:options:args:argsSize:] (286 samples, 0.91%)</title><rect x="59.2505%" y="325" width="0.9121%" height="15" fill="rgb(218,50,12)" fg:x="18578" fg:w="286"/><text x="59.5005%" y="335.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (4 samples, 0.01%)</title><rect x="60.1627%" y="357" width="0.0128%" height="15" fill="rgb(223,88,40)" fg:x="18864" fg:w="4"/><text x="60.4127%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (4 samples, 0.01%)</title><rect x="60.1627%" y="341" width="0.0128%" height="15" fill="rgb(237,54,19)" fg:x="18864" fg:w="4"/><text x="60.4127%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.01%)</title><rect x="60.1627%" y="325" width="0.0128%" height="15" fill="rgb(251,129,25)" fg:x="18864" fg:w="4"/><text x="60.4127%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.01%)</title><rect x="60.1627%" y="309" width="0.0128%" height="15" fill="rgb(238,97,19)" fg:x="18864" fg:w="4"/><text x="60.4127%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelDevice newBufferWithLength:options:] (294 samples, 0.94%)</title><rect x="59.2441%" y="373" width="0.9376%" height="15" fill="rgb(240,169,18)" fg:x="18576" fg:w="294"/><text x="59.4941%" y="383.50"></text></g><g><title>meg`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (377 samples, 1.20%)</title><rect x="58.9858%" y="405" width="1.2024%" height="15" fill="rgb(230,187,49)" fg:x="18495" fg:w="377"/><text x="59.2358%" y="415.50"></text></g><g><title>meg`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (297 samples, 0.95%)</title><rect x="59.2410%" y="389" width="0.9472%" height="15" fill="rgb(209,44,26)" fg:x="18575" fg:w="297"/><text x="59.4910%" y="399.50"></text></g><g><title>meg`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (381 samples, 1.22%)</title><rect x="58.9794%" y="421" width="1.2151%" height="15" fill="rgb(244,0,6)" fg:x="18493" fg:w="381"/><text x="59.2294%" y="431.50"></text></g><g><title>meg`egui_wgpu_backend::RenderPass::update_buffers (385 samples, 1.23%)</title><rect x="58.9762%" y="437" width="1.2279%" height="15" fill="rgb(248,18,21)" fg:x="18492" fg:w="385"/><text x="59.2262%" y="447.50"></text></g><g><title>meg`egui::context::CtxRef::begin_frame (30 samples, 0.10%)</title><rect x="60.2232%" y="421" width="0.0957%" height="15" fill="rgb(245,180,19)" fg:x="18883" fg:w="30"/><text x="60.4732%" y="431.50"></text></g><g><title>meg`egui_winit_platform::Platform::begin_frame (35 samples, 0.11%)</title><rect x="60.2137%" y="437" width="0.1116%" height="15" fill="rgb(252,118,36)" fg:x="18880" fg:w="35"/><text x="60.4637%" y="447.50"></text></g><g><title>meg`egui::memory::Memory::end_frame (5 samples, 0.02%)</title><rect x="60.3476%" y="405" width="0.0159%" height="15" fill="rgb(210,224,19)" fg:x="18922" fg:w="5"/><text x="60.5976%" y="415.50"></text></g><g><title>meg`egui::context::Context::end_frame (12 samples, 0.04%)</title><rect x="60.3317%" y="421" width="0.0383%" height="15" fill="rgb(218,30,24)" fg:x="18917" fg:w="12"/><text x="60.5817%" y="431.50"></text></g><g><title>AppKit`-[NSWindow(NSCursorRects) _invalidateCursorRectsForViewsWithNoTrackingAreas] (7 samples, 0.02%)</title><rect x="60.3859%" y="389" width="0.0223%" height="15" fill="rgb(219,75,50)" fg:x="18934" fg:w="7"/><text x="60.6359%" y="399.50"></text></g><g><title>AppKit`-[NSWindow(NSCursorRects) _postInvalidCursorRects] (4 samples, 0.01%)</title><rect x="60.4082%" y="389" width="0.0128%" height="15" fill="rgb(234,72,50)" fg:x="18941" fg:w="4"/><text x="60.6582%" y="399.50"></text></g><g><title>CoreFoundation`CFSetCreateCopy (5 samples, 0.02%)</title><rect x="60.4529%" y="325" width="0.0159%" height="15" fill="rgb(219,100,48)" fg:x="18955" fg:w="5"/><text x="60.7029%" y="335.50"></text></g><g><title>CoreFoundation`CFRunLoopAddObserver (13 samples, 0.04%)</title><rect x="60.4306%" y="341" width="0.0415%" height="15" fill="rgb(253,5,41)" fg:x="18948" fg:w="13"/><text x="60.6806%" y="351.50"></text></g><g><title>CoreFoundation`CFRunLoopObserverCreateWithHandler (4 samples, 0.01%)</title><rect x="60.4720%" y="341" width="0.0128%" height="15" fill="rgb(247,181,11)" fg:x="18961" fg:w="4"/><text x="60.7220%" y="351.50"></text></g><g><title>CoreFoundation`CFRunLoopObserverCreate (4 samples, 0.01%)</title><rect x="60.4720%" y="325" width="0.0128%" height="15" fill="rgb(222,223,25)" fg:x="18961" fg:w="4"/><text x="60.7220%" y="335.50"></text></g><g><title>CoreFoundation`CFRunLoopWakeUp (16 samples, 0.05%)</title><rect x="60.4848%" y="341" width="0.0510%" height="15" fill="rgb(214,198,28)" fg:x="18965" fg:w="16"/><text x="60.7348%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (16 samples, 0.05%)</title><rect x="60.4848%" y="325" width="0.0510%" height="15" fill="rgb(230,46,43)" fg:x="18965" fg:w="16"/><text x="60.7348%" y="335.50"></text></g><g><title>AppKit`+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink] (38 samples, 0.12%)</title><rect x="60.4210%" y="357" width="0.1212%" height="15" fill="rgb(233,65,53)" fg:x="18945" fg:w="38"/><text x="60.6710%" y="367.50"></text></g><g><title>AppKit`-[NSDisplayCycle initWithTransactionSeed:] (6 samples, 0.02%)</title><rect x="60.5422%" y="357" width="0.0191%" height="15" fill="rgb(221,121,27)" fg:x="18983" fg:w="6"/><text x="60.7922%" y="367.50"></text></g><g><title>AppKit`+[NSDisplayCycle currentDisplayCycle] (57 samples, 0.18%)</title><rect x="60.4210%" y="373" width="0.1818%" height="15" fill="rgb(247,70,47)" fg:x="18945" fg:w="57"/><text x="60.6710%" y="383.50"></text></g><g><title>AppKit`-[NSDisplayCycle addObserver:] (4 samples, 0.01%)</title><rect x="60.6028%" y="373" width="0.0128%" height="15" fill="rgb(228,85,35)" fg:x="19002" fg:w="4"/><text x="60.8528%" y="383.50"></text></g><g><title>AppKit`-[NSWindow(NSDisplayCycle) _updateStructuralRegionsOnNextDisplayCycle] (67 samples, 0.21%)</title><rect x="60.4210%" y="389" width="0.2137%" height="15" fill="rgb(209,50,18)" fg:x="18945" fg:w="67"/><text x="60.6710%" y="399.50"></text></g><g><title>AppKit`-[NSWindow(NSCursorRects) _invalidateCursorRectsForView:force:] (84 samples, 0.27%)</title><rect x="60.3731%" y="405" width="0.2679%" height="15" fill="rgb(250,19,35)" fg:x="18930" fg:w="84"/><text x="60.6231%" y="415.50"></text></g><g><title>meg`egui_winit_platform::Platform::end_frame (101 samples, 0.32%)</title><rect x="60.3253%" y="437" width="0.3221%" height="15" fill="rgb(253,107,29)" fg:x="18915" fg:w="101"/><text x="60.5753%" y="447.50"></text></g><g><title>meg`winit::platform_impl::platform::window::UnownedWindow::set_cursor_icon (86 samples, 0.27%)</title><rect x="60.3731%" y="421" width="0.2743%" height="15" fill="rgb(252,179,29)" fg:x="18930" fg:w="86"/><text x="60.6231%" y="431.50"></text></g><g><title>meg`kintaro::realtime::gui::_&lt;impl kintaro::realtime::RealTimeState&gt;::render_gui (1,200 samples, 3.83%)</title><rect x="56.8458%" y="453" width="3.8271%" height="15" fill="rgb(238,194,6)" fg:x="17824" fg:w="1200"/><text x="57.0958%" y="463.50">meg`..</text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::programPipeline (12 samples, 0.04%)</title><rect x="60.6985%" y="357" width="0.0383%" height="15" fill="rgb(238,164,29)" fg:x="19032" fg:w="12"/><text x="60.9485%" y="367.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::drawIndexedPrimitives (14 samples, 0.04%)</title><rect x="60.6953%" y="373" width="0.0446%" height="15" fill="rgb(224,25,9)" fg:x="19031" fg:w="14"/><text x="60.9453%" y="383.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:] (16 samples, 0.05%)</title><rect x="60.6953%" y="389" width="0.0510%" height="15" fill="rgb(244,153,23)" fg:x="19031" fg:w="16"/><text x="60.9453%" y="399.50"></text></g><g><title>meg`metal::encoder::RenderCommandEncoderRef::draw_indexed_primitives (17 samples, 0.05%)</title><rect x="60.6953%" y="405" width="0.0542%" height="15" fill="rgb(212,203,14)" fg:x="19031" fg:w="17"/><text x="60.9453%" y="415.50"></text></g><g><title>meg`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::finish (8 samples, 0.03%)</title><rect x="60.7559%" y="405" width="0.0255%" height="15" fill="rgb(220,164,20)" fg:x="19050" fg:w="8"/><text x="61.0059%" y="415.50"></text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::end_render_pass (7 samples, 0.02%)</title><rect x="60.7590%" y="389" width="0.0223%" height="15" fill="rgb(222,203,48)" fg:x="19051" fg:w="7"/><text x="61.0090%" y="399.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder endEncoding] (6 samples, 0.02%)</title><rect x="60.7622%" y="373" width="0.0191%" height="15" fill="rgb(215,159,22)" fg:x="19052" fg:w="6"/><text x="61.0122%" y="383.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::initializeHWState (4 samples, 0.01%)</title><rect x="60.8069%" y="309" width="0.0128%" height="15" fill="rgb(216,183,47)" fg:x="19066" fg:w="4"/><text x="61.0569%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::programClearPipeline (4 samples, 0.01%)</title><rect x="60.8228%" y="277" width="0.0128%" height="15" fill="rgb(229,195,25)" fg:x="19071" fg:w="4"/><text x="61.0728%" y="287.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGRenderClearEncoder::writeVertexData (4 samples, 0.01%)</title><rect x="60.8483%" y="261" width="0.0128%" height="15" fill="rgb(224,132,51)" fg:x="19079" fg:w="4"/><text x="61.0983%" y="271.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGRenderClearEncoder::setupClearPasses (9 samples, 0.03%)</title><rect x="60.8452%" y="277" width="0.0287%" height="15" fill="rgb(240,63,7)" fg:x="19078" fg:w="9"/><text x="61.0952%" y="287.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::processActions (18 samples, 0.06%)</title><rect x="60.8228%" y="293" width="0.0574%" height="15" fill="rgb(249,182,41)" fg:x="19071" fg:w="18"/><text x="61.0728%" y="303.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::initializeRenderPassState (20 samples, 0.06%)</title><rect x="60.8196%" y="309" width="0.0638%" height="15" fill="rgb(243,47,26)" fg:x="19070" fg:w="20"/><text x="61.0696%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IntelStateHeaps::acquireHeap (11 samples, 0.04%)</title><rect x="60.8834%" y="293" width="0.0351%" height="15" fill="rgb(233,48,2)" fg:x="19090" fg:w="11"/><text x="61.1334%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (6 samples, 0.02%)</title><rect x="60.8994%" y="277" width="0.0191%" height="15" fill="rgb(244,165,34)" fg:x="19095" fg:w="6"/><text x="61.1494%" y="287.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IntelStateHeaps::initialize (12 samples, 0.04%)</title><rect x="60.8834%" y="309" width="0.0383%" height="15" fill="rgb(207,89,7)" fg:x="19090" fg:w="12"/><text x="61.1334%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::initialize (38 samples, 0.12%)</title><rect x="60.8069%" y="325" width="0.1212%" height="15" fill="rgb(244,117,36)" fg:x="19066" fg:w="38"/><text x="61.0569%" y="335.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder initWithCommandBuffer:descriptor:stateDescriptor:] (40 samples, 0.13%)</title><rect x="60.8037%" y="341" width="0.1276%" height="15" fill="rgb(226,144,34)" fg:x="19065" fg:w="40"/><text x="61.0537%" y="351.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer renderCommandEncoderWithDescriptor:] (41 samples, 0.13%)</title><rect x="60.8037%" y="357" width="0.1308%" height="15" fill="rgb(213,23,19)" fg:x="19065" fg:w="41"/><text x="61.0537%" y="367.50"></text></g><g><title>meg`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (51 samples, 0.16%)</title><rect x="60.7814%" y="405" width="0.1627%" height="15" fill="rgb(217,75,12)" fg:x="19058" fg:w="51"/><text x="61.0314%" y="415.50"></text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_render_pass (45 samples, 0.14%)</title><rect x="60.8005%" y="389" width="0.1435%" height="15" fill="rgb(224,159,17)" fg:x="19064" fg:w="45"/><text x="61.0505%" y="399.50"></text></g><g><title>meg`objc::rc::autorelease::autoreleasepool (45 samples, 0.14%)</title><rect x="60.8005%" y="373" width="0.1435%" height="15" fill="rgb(217,118,1)" fg:x="19064" fg:w="45"/><text x="61.0505%" y="383.50"></text></g><g><title>meg`wgpu_core::track::StatefulTrackerSubset::merge_extend (4 samples, 0.01%)</title><rect x="60.9536%" y="405" width="0.0128%" height="15" fill="rgb(232,180,48)" fg:x="19112" fg:w="4"/><text x="61.2036%" y="415.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (7 samples, 0.02%)</title><rect x="60.9791%" y="341" width="0.0223%" height="15" fill="rgb(230,27,33)" fg:x="19120" fg:w="7"/><text x="61.2291%" y="351.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandQueue commandBufferWithUnretainedReferences] (8 samples, 0.03%)</title><rect x="60.9791%" y="373" width="0.0255%" height="15" fill="rgb(205,31,21)" fg:x="19120" fg:w="8"/><text x="61.2291%" y="383.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (8 samples, 0.03%)</title><rect x="60.9791%" y="357" width="0.0255%" height="15" fill="rgb(253,59,4)" fg:x="19120" fg:w="8"/><text x="61.2291%" y="367.50"></text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (13 samples, 0.04%)</title><rect x="60.9664%" y="405" width="0.0415%" height="15" fill="rgb(224,201,9)" fg:x="19116" fg:w="13"/><text x="61.2164%" y="415.50"></text></g><g><title>meg`objc::rc::autorelease::autoreleasepool (9 samples, 0.03%)</title><rect x="60.9791%" y="389" width="0.0287%" height="15" fill="rgb(229,206,30)" fg:x="19120" fg:w="9"/><text x="61.2291%" y="399.50"></text></g><g><title>meg`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (109 samples, 0.35%)</title><rect x="60.6825%" y="437" width="0.3476%" height="15" fill="rgb(212,67,47)" fg:x="19027" fg:w="109"/><text x="60.9325%" y="447.50"></text></g><g><title>meg`wgpu_core::command::render::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (109 samples, 0.35%)</title><rect x="60.6825%" y="421" width="0.3476%" height="15" fill="rgb(211,96,50)" fg:x="19027" fg:w="109"/><text x="60.9325%" y="431.50"></text></g><g><title>meg`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::set_render_pipeline (4 samples, 0.01%)</title><rect x="61.0174%" y="405" width="0.0128%" height="15" fill="rgb(252,114,18)" fg:x="19132" fg:w="4"/><text x="61.2674%" y="415.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::setPipelineState (4 samples, 0.01%)</title><rect x="61.0174%" y="389" width="0.0128%" height="15" fill="rgb(223,58,37)" fg:x="19132" fg:w="4"/><text x="61.2674%" y="399.50"></text></g><g><title>meg`kintaro::surface::Surface::render (113 samples, 0.36%)</title><rect x="60.6793%" y="453" width="0.3604%" height="15" fill="rgb(237,70,4)" fg:x="19026" fg:w="113"/><text x="60.9293%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (26 samples, 0.08%)</title><rect x="61.1003%" y="293" width="0.0829%" height="15" fill="rgb(244,85,46)" fg:x="19158" fg:w="26"/><text x="61.3503%" y="303.50"></text></g><g><title>IOKit`io_connect_method (27 samples, 0.09%)</title><rect x="61.1003%" y="309" width="0.0861%" height="15" fill="rgb(223,39,52)" fg:x="19158" fg:w="27"/><text x="61.3503%" y="319.50"></text></g><g><title>IOKit`IOConnectCallMethod (29 samples, 0.09%)</title><rect x="61.0971%" y="325" width="0.0925%" height="15" fill="rgb(218,200,14)" fg:x="19157" fg:w="29"/><text x="61.3471%" y="335.50"></text></g><g><title>IOSurface`-[IOSurfaceSharedEvent init] (30 samples, 0.10%)</title><rect x="61.0971%" y="341" width="0.0957%" height="15" fill="rgb(208,171,16)" fg:x="19157" fg:w="30"/><text x="61.3471%" y="351.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable initWithDrawablePrivate:layer:] (32 samples, 0.10%)</title><rect x="61.0971%" y="357" width="0.1021%" height="15" fill="rgb(234,200,18)" fg:x="19157" fg:w="32"/><text x="61.3471%" y="367.50"></text></g><g><title>QuartzCore`layer_composited(_CAImageQueue*, void*, unsigned int) (5 samples, 0.02%)</title><rect x="61.2151%" y="309" width="0.0159%" height="15" fill="rgb(228,45,11)" fg:x="19194" fg:w="5"/><text x="61.4651%" y="319.50"></text></g><g><title>QuartzCore`CAImageQueueDidComposite (7 samples, 0.02%)</title><rect x="61.2119%" y="325" width="0.0223%" height="15" fill="rgb(237,182,11)" fg:x="19193" fg:w="7"/><text x="61.4619%" y="335.50"></text></g><g><title>QuartzCore`CAImageQueueCollect_ (13 samples, 0.04%)</title><rect x="61.1992%" y="357" width="0.0415%" height="15" fill="rgb(241,175,49)" fg:x="19189" fg:w="13"/><text x="61.4492%" y="367.50"></text></g><g><title>QuartzCore`release_images(_CAImageQueue*, CAImageQueueReleased*) (10 samples, 0.03%)</title><rect x="61.2087%" y="341" width="0.0319%" height="15" fill="rgb(247,38,35)" fg:x="19192" fg:w="10"/><text x="61.4587%" y="351.50"></text></g><g><title>QuartzCore`get_unused_drawable(_CAMetalLayerPrivate*, bool, bool) (4 samples, 0.01%)</title><rect x="61.2406%" y="357" width="0.0128%" height="15" fill="rgb(228,39,49)" fg:x="19202" fg:w="4"/><text x="61.4906%" y="367.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_wait_slow (8 samples, 0.03%)</title><rect x="61.2566%" y="357" width="0.0255%" height="15" fill="rgb(226,101,26)" fg:x="19207" fg:w="8"/><text x="61.5066%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_timedwait_trap (8 samples, 0.03%)</title><rect x="61.2566%" y="341" width="0.0255%" height="15" fill="rgb(206,141,19)" fg:x="19207" fg:w="8"/><text x="61.5066%" y="351.50"></text></g><g><title>QuartzCore`-[CAMetalLayer nextDrawable] (64 samples, 0.20%)</title><rect x="61.0812%" y="373" width="0.2041%" height="15" fill="rgb(211,200,13)" fg:x="19152" fg:w="64"/><text x="61.3312%" y="383.50"></text></g><g><title>meg`wgpu_core::present::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_get_current_texture (75 samples, 0.24%)</title><rect x="61.0557%" y="421" width="0.2392%" height="15" fill="rgb(241,121,6)" fg:x="19144" fg:w="75"/><text x="61.3057%" y="431.50"></text></g><g><title>meg`wgpu_hal::metal::surface::_&lt;impl wgpu_hal::Surface&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Surface&gt;::acquire_texture (69 samples, 0.22%)</title><rect x="61.0748%" y="405" width="0.2201%" height="15" fill="rgb(234,221,29)" fg:x="19150" fg:w="69"/><text x="61.3248%" y="415.50"></text></g><g><title>meg`objc::rc::autorelease::autoreleasepool (68 samples, 0.22%)</title><rect x="61.0780%" y="389" width="0.2169%" height="15" fill="rgb(229,136,5)" fg:x="19151" fg:w="68"/><text x="61.3280%" y="399.50"></text></g><g><title>meg`wgpu::Surface::get_current_texture (79 samples, 0.25%)</title><rect x="61.0461%" y="453" width="0.2520%" height="15" fill="rgb(238,36,11)" fg:x="19141" fg:w="79"/><text x="61.2961%" y="463.50"></text></g><g><title>meg`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::surface_get_current_texture (79 samples, 0.25%)</title><rect x="61.0461%" y="437" width="0.2520%" height="15" fill="rgb(251,55,41)" fg:x="19141" fg:w="79"/><text x="61.2961%" y="447.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (12 samples, 0.04%)</title><rect x="61.3395%" y="325" width="0.0383%" height="15" fill="rgb(242,34,40)" fg:x="19233" fg:w="12"/><text x="61.5895%" y="335.50"></text></g><g><title>libdispatch.dylib`_dispatch_kq_drain (12 samples, 0.04%)</title><rect x="61.3395%" y="309" width="0.0383%" height="15" fill="rgb(215,42,17)" fg:x="19233" fg:w="12"/><text x="61.5895%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`kevent_qos (12 samples, 0.04%)</title><rect x="61.3395%" y="293" width="0.0383%" height="15" fill="rgb(207,44,46)" fg:x="19233" fg:w="12"/><text x="61.5895%" y="303.50"></text></g><g><title>libdispatch.dylib`dispatch_after (6 samples, 0.02%)</title><rect x="61.3778%" y="325" width="0.0191%" height="15" fill="rgb(211,206,28)" fg:x="19245" fg:w="6"/><text x="61.6278%" y="335.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable addPresentScheduledHandler:] (24 samples, 0.08%)</title><rect x="61.3299%" y="341" width="0.0765%" height="15" fill="rgb(237,167,16)" fg:x="19230" fg:w="24"/><text x="61.5799%" y="351.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer presentDrawable:] (30 samples, 0.10%)</title><rect x="61.3204%" y="373" width="0.0957%" height="15" fill="rgb(233,66,6)" fg:x="19227" fg:w="30"/><text x="61.5704%" y="383.50"></text></g><g><title>Metal`-[_MTLCommandBuffer presentDrawable:] (30 samples, 0.10%)</title><rect x="61.3204%" y="357" width="0.0957%" height="15" fill="rgb(246,123,29)" fg:x="19227" fg:w="30"/><text x="61.5704%" y="367.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandQueue commandBuffer] (5 samples, 0.02%)</title><rect x="61.4160%" y="373" width="0.0159%" height="15" fill="rgb(209,62,40)" fg:x="19257" fg:w="5"/><text x="61.6660%" y="383.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (5 samples, 0.02%)</title><rect x="61.4160%" y="357" width="0.0159%" height="15" fill="rgb(218,4,25)" fg:x="19257" fg:w="5"/><text x="61.6660%" y="367.50"></text></g><g><title>meg`&lt;wgpu_hal::metal::Queue as wgpu_hal::Queue&lt;wgpu_hal::metal::Api&gt;&gt;::present (38 samples, 0.12%)</title><rect x="61.3140%" y="405" width="0.1212%" height="15" fill="rgb(253,91,49)" fg:x="19225" fg:w="38"/><text x="61.5640%" y="415.50"></text></g><g><title>meg`objc::rc::autorelease::autoreleasepool (37 samples, 0.12%)</title><rect x="61.3172%" y="389" width="0.1180%" height="15" fill="rgb(228,155,29)" fg:x="19226" fg:w="37"/><text x="61.5672%" y="399.50"></text></g><g><title>meg`wgpu_core::present::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (47 samples, 0.15%)</title><rect x="61.3044%" y="421" width="0.1499%" height="15" fill="rgb(243,57,37)" fg:x="19222" fg:w="47"/><text x="61.5544%" y="431.50"></text></g><g><title>meg`wgpu::SurfaceTexture::present (51 samples, 0.16%)</title><rect x="61.2980%" y="453" width="0.1627%" height="15" fill="rgb(244,167,17)" fg:x="19220" fg:w="51"/><text x="61.5480%" y="463.50"></text></g><g><title>meg`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::surface_present (51 samples, 0.16%)</title><rect x="61.2980%" y="437" width="0.1627%" height="15" fill="rgb(207,181,38)" fg:x="19220" fg:w="51"/><text x="61.5480%" y="447.50"></text></g><g><title>meg`kintaro::realtime::render::_&lt;impl kintaro::realtime::RealTimeState&gt;::render (18,309 samples, 58.39%)</title><rect x="3.0872%" y="469" width="58.3926%" height="15" fill="rgb(211,8,23)" fg:x="968" fg:w="18309"/><text x="3.3372%" y="479.50">meg`kintaro::realtime::render::_&lt;impl kintaro::realtime::RealTimeState&gt;::render</text></g><g><title>CoreFoundation`CFRunLoopWakeUp (5 samples, 0.02%)</title><rect x="61.4830%" y="453" width="0.0159%" height="15" fill="rgb(235,11,44)" fg:x="19278" fg:w="5"/><text x="61.7330%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (5 samples, 0.02%)</title><rect x="61.4830%" y="437" width="0.0159%" height="15" fill="rgb(248,18,52)" fg:x="19278" fg:w="5"/><text x="61.7330%" y="447.50"></text></g><g><title>meg`winit::platform_impl::platform::app_state::AppState::queue_redraw (7 samples, 0.02%)</title><rect x="61.4830%" y="469" width="0.0223%" height="15" fill="rgb(208,4,7)" fg:x="19278" fg:w="7"/><text x="61.7330%" y="479.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (18,701 samples, 59.64%)</title><rect x="1.8657%" y="581" width="59.6428%" height="15" fill="rgb(240,17,39)" fg:x="585" fg:w="18701"/><text x="2.1157%" y="591.50">CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__</text></g><g><title>meg`winit::platform_impl::platform::observer::control_flow_end_handler (18,336 samples, 58.48%)</title><rect x="3.0298%" y="565" width="58.4787%" height="15" fill="rgb(207,170,3)" fg:x="950" fg:w="18336"/><text x="3.2798%" y="575.50">meg`winit::platform_impl::platform::observer::control_flow_end_handler</text></g><g><title>meg`std::panicking::try (18,335 samples, 58.48%)</title><rect x="3.0330%" y="549" width="58.4755%" height="15" fill="rgb(236,100,52)" fg:x="951" fg:w="18335"/><text x="3.2830%" y="559.50">meg`std::panicking::try</text></g><g><title>meg`winit::platform_impl::platform::app_state::AppState::cleared (18,335 samples, 58.48%)</title><rect x="3.0330%" y="533" width="58.4755%" height="15" fill="rgb(246,78,51)" fg:x="951" fg:w="18335"/><text x="3.2830%" y="543.50">meg`winit::platform_impl::platform::app_state::AppState::cleared</text></g><g><title>meg`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (18,326 samples, 58.45%)</title><rect x="3.0617%" y="517" width="58.4468%" height="15" fill="rgb(211,17,15)" fg:x="960" fg:w="18326"/><text x="3.3117%" y="527.50">meg`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event</text></g><g><title>meg`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (18,324 samples, 58.44%)</title><rect x="3.0681%" y="501" width="58.4404%" height="15" fill="rgb(209,59,46)" fg:x="962" fg:w="18324"/><text x="3.3181%" y="511.50">meg`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::plat..</text></g><g><title>meg`kintaro::application::live::live::_{{closure}} (18,322 samples, 58.43%)</title><rect x="3.0745%" y="485" width="58.4341%" height="15" fill="rgb(210,92,25)" fg:x="964" fg:w="18322"/><text x="3.3245%" y="495.50">meg`kintaro::application::live::live::_{{closure}}</text></g><g><title>CoreFoundation`_CFRelease (4 samples, 0.01%)</title><rect x="61.5181%" y="517" width="0.0128%" height="15" fill="rgb(238,174,52)" fg:x="19289" fg:w="4"/><text x="61.7681%" y="527.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::releaseUntil (7 samples, 0.02%)</title><rect x="61.5117%" y="533" width="0.0223%" height="15" fill="rgb(230,73,7)" fg:x="19287" fg:w="7"/><text x="61.7617%" y="543.50"></text></g><g><title>CoreFoundation`__CFRunLoopPerCalloutARPEnd (27 samples, 0.09%)</title><rect x="61.5085%" y="581" width="0.0861%" height="15" fill="rgb(243,124,40)" fg:x="19286" fg:w="27"/><text x="61.7585%" y="591.50"></text></g><g><title>CoreFoundation`_CFAutoreleasePoolPop (27 samples, 0.09%)</title><rect x="61.5085%" y="565" width="0.0861%" height="15" fill="rgb(244,170,11)" fg:x="19286" fg:w="27"/><text x="61.7585%" y="575.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (27 samples, 0.09%)</title><rect x="61.5085%" y="549" width="0.0861%" height="15" fill="rgb(207,114,54)" fg:x="19286" fg:w="27"/><text x="61.7585%" y="559.50"></text></g><g><title>libobjc.A.dylib`objc_release (19 samples, 0.06%)</title><rect x="61.5340%" y="533" width="0.0606%" height="15" fill="rgb(205,42,20)" fg:x="19294" fg:w="19"/><text x="61.7840%" y="543.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (18,738 samples, 59.76%)</title><rect x="1.8434%" y="597" width="59.7608%" height="15" fill="rgb(230,30,28)" fg:x="578" fg:w="18738"/><text x="2.0934%" y="607.50">CoreFoundation`__CFRunLoopDoObservers</text></g><g><title>CoreFoundation`__CFRunLoopDoSources0 (5 samples, 0.02%)</title><rect x="61.6138%" y="597" width="0.0159%" height="15" fill="rgb(205,73,54)" fg:x="19319" fg:w="5"/><text x="61.8638%" y="607.50"></text></g><g><title>CoreFoundation`CFSetApplyFunction (5 samples, 0.02%)</title><rect x="61.6138%" y="581" width="0.0159%" height="15" fill="rgb(254,227,23)" fg:x="19319" fg:w="5"/><text x="61.8638%" y="591.50"></text></g><g><title>CoreFoundation`CFBasicHashApply (5 samples, 0.02%)</title><rect x="61.6138%" y="565" width="0.0159%" height="15" fill="rgb(228,202,34)" fg:x="19319" fg:w="5"/><text x="61.8638%" y="575.50"></text></g><g><title>CoreFoundation`__CFSetApplyFunction_block_invoke (4 samples, 0.01%)</title><rect x="61.6170%" y="549" width="0.0128%" height="15" fill="rgb(222,225,37)" fg:x="19320" fg:w="4"/><text x="61.8670%" y="559.50"></text></g><g><title>CoreFoundation`__CFRunLoopCollectSources0 (4 samples, 0.01%)</title><rect x="61.6170%" y="533" width="0.0128%" height="15" fill="rgb(221,14,54)" fg:x="19320" fg:w="4"/><text x="61.8670%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`mk_timer_arm (4 samples, 0.01%)</title><rect x="61.9933%" y="565" width="0.0128%" height="15" fill="rgb(254,102,2)" fg:x="19438" fg:w="4"/><text x="62.2433%" y="575.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimers (119 samples, 0.38%)</title><rect x="61.6297%" y="597" width="0.3795%" height="15" fill="rgb(232,104,17)" fg:x="19324" fg:w="119"/><text x="61.8797%" y="607.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimer (114 samples, 0.36%)</title><rect x="61.6457%" y="581" width="0.3636%" height="15" fill="rgb(250,220,14)" fg:x="19329" fg:w="114"/><text x="61.8957%" y="591.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (10 samples, 0.03%)</title><rect x="62.0092%" y="597" width="0.0319%" height="15" fill="rgb(241,158,9)" fg:x="19443" fg:w="10"/><text x="62.2592%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (10 samples, 0.03%)</title><rect x="62.0092%" y="581" width="0.0319%" height="15" fill="rgb(246,9,43)" fg:x="19443" fg:w="10"/><text x="62.2592%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_insert_member_trap (7 samples, 0.02%)</title><rect x="62.0539%" y="597" width="0.0223%" height="15" fill="rgb(206,73,33)" fg:x="19457" fg:w="7"/><text x="62.3039%" y="607.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (18,914 samples, 60.32%)</title><rect x="1.7637%" y="613" width="60.3221%" height="15" fill="rgb(222,79,8)" fg:x="553" fg:w="18914"/><text x="2.0137%" y="623.50">CoreFoundation`__CFRunLoopRun</text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (18,939 samples, 60.40%)</title><rect x="1.6935%" y="629" width="60.4018%" height="15" fill="rgb(234,8,54)" fg:x="531" fg:w="18939"/><text x="1.9435%" y="639.50">CoreFoundation`CFRunLoopRunSpecific</text></g><g><title>HIToolbox`CreateEventWithCGEvent (6 samples, 0.02%)</title><rect x="62.1145%" y="565" width="0.0191%" height="15" fill="rgb(209,134,38)" fg:x="19476" fg:w="6"/><text x="62.3645%" y="575.50"></text></g><g><title>HIToolbox`CreateAndPostEventWithCGEvent(__CGEvent*, unsigned int, unsigned char, __CFMachPortBoost*) (8 samples, 0.03%)</title><rect x="62.1145%" y="581" width="0.0255%" height="15" fill="rgb(230,127,29)" fg:x="19476" fg:w="8"/><text x="62.3645%" y="591.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (12 samples, 0.04%)</title><rect x="62.1113%" y="629" width="0.0383%" height="15" fill="rgb(242,44,41)" fg:x="19475" fg:w="12"/><text x="62.3613%" y="639.50"></text></g><g><title>HIToolbox`MainLoopObserver(unsigned int, OpaqueEventRef*, void*) (11 samples, 0.04%)</title><rect x="62.1145%" y="613" width="0.0351%" height="15" fill="rgb(222,56,43)" fg:x="19476" fg:w="11"/><text x="62.3645%" y="623.50"></text></g><g><title>HIToolbox`Convert1CGEvent(unsigned char) (11 samples, 0.04%)</title><rect x="62.1145%" y="597" width="0.0351%" height="15" fill="rgb(238,39,47)" fg:x="19476" fg:w="11"/><text x="62.3645%" y="607.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (18,959 samples, 60.47%)</title><rect x="1.6935%" y="645" width="60.4656%" height="15" fill="rgb(226,79,43)" fg:x="531" fg:w="18959"/><text x="1.9435%" y="655.50">HIToolbox`RunCurrentEventLoopInMode</text></g><g><title>CoreFoundation`_CFRelease (5 samples, 0.02%)</title><rect x="62.1591%" y="629" width="0.0159%" height="15" fill="rgb(242,105,53)" fg:x="19490" fg:w="5"/><text x="62.4091%" y="639.50"></text></g><g><title>CoreFoundation`__CFMachPortBoostDeallocate (5 samples, 0.02%)</title><rect x="62.1591%" y="613" width="0.0159%" height="15" fill="rgb(251,132,46)" fg:x="19490" fg:w="5"/><text x="62.4091%" y="623.50"></text></g><g><title>libdispatch.dylib`voucher_decrement_importance_count4CF (5 samples, 0.02%)</title><rect x="62.1591%" y="597" width="0.0159%" height="15" fill="rgb(231,77,14)" fg:x="19490" fg:w="5"/><text x="62.4091%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`mach_voucher_attr_command (5 samples, 0.02%)</title><rect x="62.1591%" y="581" width="0.0159%" height="15" fill="rgb(240,135,9)" fg:x="19490" fg:w="5"/><text x="62.4091%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (5 samples, 0.02%)</title><rect x="62.1591%" y="565" width="0.0159%" height="15" fill="rgb(248,109,14)" fg:x="19490" fg:w="5"/><text x="62.4091%" y="575.50"></text></g><g><title>HIToolbox`_DropPendingBoost (7 samples, 0.02%)</title><rect x="62.1591%" y="645" width="0.0223%" height="15" fill="rgb(227,146,52)" fg:x="19490" fg:w="7"/><text x="62.4091%" y="655.50"></text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (18,990 samples, 60.56%)</title><rect x="1.6233%" y="677" width="60.5645%" height="15" fill="rgb(232,54,3)" fg:x="509" fg:w="18990"/><text x="1.8733%" y="687.50">HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter</text></g><g><title>HIToolbox`ReceiveNextEventCommon (18,988 samples, 60.56%)</title><rect x="1.6297%" y="661" width="60.5581%" height="15" fill="rgb(229,201,43)" fg:x="511" fg:w="18988"/><text x="1.8797%" y="671.50">HIToolbox`ReceiveNextEventCommon</text></g><g><title>AppKit`_DPSNextEvent (19,001 samples, 60.60%)</title><rect x="1.5915%" y="693" width="60.5996%" height="15" fill="rgb(252,161,33)" fg:x="499" fg:w="19001"/><text x="1.8415%" y="703.50">AppKit`_DPSNextEvent</text></g><g><title>AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (19,024 samples, 60.67%)</title><rect x="1.5372%" y="709" width="60.6729%" height="15" fill="rgb(226,146,40)" fg:x="482" fg:w="19024"/><text x="1.7872%" y="719.50">AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]</text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.01%)</title><rect x="62.1974%" y="693" width="0.0128%" height="15" fill="rgb(219,47,25)" fg:x="19502" fg:w="4"/><text x="62.4474%" y="703.50"></text></g><g><title>AppKit`-[NSApplication run] (19,050 samples, 60.76%)</title><rect x="1.4703%" y="725" width="60.7559%" height="15" fill="rgb(250,135,13)" fg:x="461" fg:w="19050"/><text x="1.7203%" y="735.50">AppKit`-[NSApplication run]</text></g><g><title>meg`winit::event_loop::EventLoop&lt;T&gt;::run (19,051 samples, 60.76%)</title><rect x="1.4703%" y="773" width="60.7590%" height="15" fill="rgb(219,229,18)" fg:x="461" fg:w="19051"/><text x="1.7203%" y="783.50">meg`winit::event_loop::EventLoop&lt;T&gt;::run</text></g><g><title>meg`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run (19,051 samples, 60.76%)</title><rect x="1.4703%" y="757" width="60.7590%" height="15" fill="rgb(217,152,27)" fg:x="461" fg:w="19051"/><text x="1.7203%" y="767.50">meg`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run</text></g><g><title>meg`objc::rc::autorelease::autoreleasepool (19,051 samples, 60.76%)</title><rect x="1.4703%" y="741" width="60.7590%" height="15" fill="rgb(225,71,47)" fg:x="461" fg:w="19051"/><text x="1.7203%" y="751.50">meg`objc::rc::autorelease::autoreleasepool</text></g><g><title>AppKit`-[NSApplication(NSApplicationAppearance_Internal) _registerForAppearanceNotifications] (4 samples, 0.01%)</title><rect x="62.2357%" y="725" width="0.0128%" height="15" fill="rgb(220,139,14)" fg:x="19514" fg:w="4"/><text x="62.4857%" y="735.50"></text></g><g><title>AppKit`+[NSSystemAppearanceProxy systemProxy] (4 samples, 0.01%)</title><rect x="62.2357%" y="709" width="0.0128%" height="15" fill="rgb(247,54,32)" fg:x="19514" fg:w="4"/><text x="62.4857%" y="719.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (4 samples, 0.01%)</title><rect x="62.2357%" y="693" width="0.0128%" height="15" fill="rgb(252,131,39)" fg:x="19514" fg:w="4"/><text x="62.4857%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (4 samples, 0.01%)</title><rect x="62.2357%" y="677" width="0.0128%" height="15" fill="rgb(210,108,39)" fg:x="19514" fg:w="4"/><text x="62.4857%" y="687.50"></text></g><g><title>AppKit`__38+[NSSystemAppearanceProxy systemProxy]_block_invoke (4 samples, 0.01%)</title><rect x="62.2357%" y="661" width="0.0128%" height="15" fill="rgb(205,23,29)" fg:x="19514" fg:w="4"/><text x="62.4857%" y="671.50"></text></g><g><title>AppKit`-[NSSystemAppearanceProxy init] (4 samples, 0.01%)</title><rect x="62.2357%" y="645" width="0.0128%" height="15" fill="rgb(246,139,46)" fg:x="19514" fg:w="4"/><text x="62.4857%" y="655.50"></text></g><g><title>AppKit`_NSAppearanceCurrentSystemAppearance (4 samples, 0.01%)</title><rect x="62.2357%" y="629" width="0.0128%" height="15" fill="rgb(250,81,26)" fg:x="19514" fg:w="4"/><text x="62.4857%" y="639.50"></text></g><g><title>AppKit`+[NSAppearance appearanceNamed:] (4 samples, 0.01%)</title><rect x="62.2357%" y="613" width="0.0128%" height="15" fill="rgb(214,104,7)" fg:x="19514" fg:w="4"/><text x="62.4857%" y="623.50"></text></g><g><title>AppKit`+[NSAppearance _darkAquaAppearance] (4 samples, 0.01%)</title><rect x="62.2357%" y="597" width="0.0128%" height="15" fill="rgb(233,189,8)" fg:x="19514" fg:w="4"/><text x="62.4857%" y="607.50"></text></g><g><title>AppKit`+[NSApplication sharedApplication] (16 samples, 0.05%)</title><rect x="62.2293%" y="757" width="0.0510%" height="15" fill="rgb(228,141,17)" fg:x="19512" fg:w="16"/><text x="62.4793%" y="767.50"></text></g><g><title>AppKit`-[NSApplication init] (16 samples, 0.05%)</title><rect x="62.2293%" y="741" width="0.0510%" height="15" fill="rgb(247,157,1)" fg:x="19512" fg:w="16"/><text x="62.4793%" y="751.50"></text></g><g><title>AppKit`_NSInitializeAppContext (5 samples, 0.02%)</title><rect x="62.2644%" y="725" width="0.0159%" height="15" fill="rgb(249,225,5)" fg:x="19523" fg:w="5"/><text x="62.5144%" y="735.50"></text></g><g><title>meg`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::new (18 samples, 0.06%)</title><rect x="62.2293%" y="773" width="0.0574%" height="15" fill="rgb(242,55,13)" fg:x="19512" fg:w="18"/><text x="62.4793%" y="783.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateTitleProperties:animated:] (7 samples, 0.02%)</title><rect x="62.2963%" y="645" width="0.0223%" height="15" fill="rgb(230,49,50)" fg:x="19533" fg:w="7"/><text x="62.5463%" y="655.50"></text></g><g><title>AppKit`-[NSThemeFrame setRepresentedURL:] (6 samples, 0.02%)</title><rect x="62.2995%" y="629" width="0.0191%" height="15" fill="rgb(241,111,38)" fg:x="19534" fg:w="6"/><text x="62.5495%" y="639.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (6 samples, 0.02%)</title><rect x="62.2995%" y="613" width="0.0191%" height="15" fill="rgb(252,155,4)" fg:x="19534" fg:w="6"/><text x="62.5495%" y="623.50"></text></g><g><title>AppKit`-[NSThemeFrame newCloseButton] (4 samples, 0.01%)</title><rect x="62.3059%" y="597" width="0.0128%" height="15" fill="rgb(212,69,32)" fg:x="19536" fg:w="4"/><text x="62.5559%" y="607.50"></text></g><g><title>AppKit`+[_NSThemeCloseWidget closeWidgetInView:withButtonID:action:] (4 samples, 0.01%)</title><rect x="62.3059%" y="581" width="0.0128%" height="15" fill="rgb(243,107,47)" fg:x="19536" fg:w="4"/><text x="62.5559%" y="591.50"></text></g><g><title>AppKit`-[_NSThemeWidget initWithButtonID:] (4 samples, 0.01%)</title><rect x="62.3059%" y="565" width="0.0128%" height="15" fill="rgb(247,130,12)" fg:x="19536" fg:w="4"/><text x="62.5559%" y="575.50"></text></g><g><title>AppKit`-[NSButton initWithFrame:] (4 samples, 0.01%)</title><rect x="62.3059%" y="549" width="0.0128%" height="15" fill="rgb(233,74,16)" fg:x="19536" fg:w="4"/><text x="62.5559%" y="559.50"></text></g><g><title>AppKit`-[NSFrameView initWithFrame:styleMask:owner:] (9 samples, 0.03%)</title><rect x="62.2963%" y="661" width="0.0287%" height="15" fill="rgb(208,58,18)" fg:x="19533" fg:w="9"/><text x="62.5463%" y="671.50"></text></g><g><title>AppKit`-[NSThemeFrame initWithFrame:styleMask:owner:] (13 samples, 0.04%)</title><rect x="62.2963%" y="677" width="0.0415%" height="15" fill="rgb(242,225,1)" fg:x="19533" fg:w="13"/><text x="62.5463%" y="687.50"></text></g><g><title>AppKit`-[NSThemeFrame _floatTitlebarAndToolbarFromInit:] (4 samples, 0.01%)</title><rect x="62.3250%" y="661" width="0.0128%" height="15" fill="rgb(249,39,40)" fg:x="19542" fg:w="4"/><text x="62.5750%" y="671.50"></text></g><g><title>AppKit`+[NSAnimationContext runAnimationGroup:] (4 samples, 0.01%)</title><rect x="62.3250%" y="645" width="0.0128%" height="15" fill="rgb(207,72,44)" fg:x="19542" fg:w="4"/><text x="62.5750%" y="655.50"></text></g><g><title>AppKit`__49-[NSThemeFrame _floatTitlebarAndToolbarFromInit:]_block_invoke (4 samples, 0.01%)</title><rect x="62.3250%" y="629" width="0.0128%" height="15" fill="rgb(215,193,12)" fg:x="19542" fg:w="4"/><text x="62.5750%" y="639.50"></text></g><g><title>meg`objc::rc::autorelease::autoreleasepool (16 samples, 0.05%)</title><rect x="62.2899%" y="757" width="0.0510%" height="15" fill="rgb(248,41,39)" fg:x="19531" fg:w="16"/><text x="62.5399%" y="767.50"></text></g><g><title>meg`&lt;*mut objc::runtime::Object as cocoa::appkit::NSWindow&gt;::initWithContentRect_styleMask_backing_defer_ (15 samples, 0.05%)</title><rect x="62.2931%" y="741" width="0.0478%" height="15" fill="rgb(253,85,4)" fg:x="19532" fg:w="15"/><text x="62.5431%" y="751.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:] (15 samples, 0.05%)</title><rect x="62.2931%" y="725" width="0.0478%" height="15" fill="rgb(243,70,31)" fg:x="19532" fg:w="15"/><text x="62.5431%" y="735.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (15 samples, 0.05%)</title><rect x="62.2931%" y="709" width="0.0478%" height="15" fill="rgb(253,195,26)" fg:x="19532" fg:w="15"/><text x="62.5431%" y="719.50"></text></g><g><title>AppKit`-[NSWindow _commonInitFrame:styleMask:backing:defer:] (14 samples, 0.04%)</title><rect x="62.2963%" y="693" width="0.0446%" height="15" fill="rgb(243,42,11)" fg:x="19533" fg:w="14"/><text x="62.5463%" y="703.50"></text></g><g><title>meg`kintaro::application::run (19,544 samples, 62.33%)</title><rect x="0.0128%" y="805" width="62.3314%" height="15" fill="rgb(239,66,17)" fg:x="4" fg:w="19544"/><text x="0.2628%" y="815.50">meg`kintaro::application::run</text></g><g><title>meg`kintaro::application::live::live (19,544 samples, 62.33%)</title><rect x="0.0128%" y="789" width="62.3314%" height="15" fill="rgb(217,132,21)" fg:x="4" fg:w="19544"/><text x="0.2628%" y="799.50">meg`kintaro::application::live::live</text></g><g><title>meg`winit::platform_impl::platform::window::UnownedWindow::new (18 samples, 0.06%)</title><rect x="62.2867%" y="773" width="0.0574%" height="15" fill="rgb(252,202,21)" fg:x="19530" fg:w="18"/><text x="62.5367%" y="783.50"></text></g><g><title>dyld`start (19,546 samples, 62.34%)</title><rect x="0.0128%" y="901" width="62.3377%" height="15" fill="rgb(233,98,36)" fg:x="4" fg:w="19546"/><text x="0.2628%" y="911.50">dyld`start</text></g><g><title>meg`main (19,546 samples, 62.34%)</title><rect x="0.0128%" y="885" width="62.3377%" height="15" fill="rgb(216,153,54)" fg:x="4" fg:w="19546"/><text x="0.2628%" y="895.50">meg`main</text></g><g><title>meg`std::rt::lang_start_internal (19,546 samples, 62.34%)</title><rect x="0.0128%" y="869" width="62.3377%" height="15" fill="rgb(250,99,7)" fg:x="4" fg:w="19546"/><text x="0.2628%" y="879.50">meg`std::rt::lang_start_internal</text></g><g><title>meg`std::rt::lang_start::_{{closure}} (19,546 samples, 62.34%)</title><rect x="0.0128%" y="853" width="62.3377%" height="15" fill="rgb(207,56,50)" fg:x="4" fg:w="19546"/><text x="0.2628%" y="863.50">meg`std::rt::lang_start::_{{closure}}</text></g><g><title>meg`std::sys_common::backtrace::__rust_begin_short_backtrace (19,546 samples, 62.34%)</title><rect x="0.0128%" y="837" width="62.3377%" height="15" fill="rgb(244,61,34)" fg:x="4" fg:w="19546"/><text x="0.2628%" y="847.50">meg`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>meg`meg::main (19,546 samples, 62.34%)</title><rect x="0.0128%" y="821" width="62.3377%" height="15" fill="rgb(241,50,38)" fg:x="4" fg:w="19546"/><text x="0.2628%" y="831.50">meg`meg::main</text></g><g><title>libdispatch.dylib`_dispatch_queue_wakeup (8 samples, 0.03%)</title><rect x="62.3505%" y="901" width="0.0255%" height="15" fill="rgb(212,166,30)" fg:x="19550" fg:w="8"/><text x="62.6005%" y="911.50"></text></g><g><title>libdispatch.dylib`_dispatch_timer_heap_resift (4 samples, 0.01%)</title><rect x="62.3760%" y="901" width="0.0128%" height="15" fill="rgb(249,127,32)" fg:x="19558" fg:w="4"/><text x="62.6260%" y="911.50"></text></g><g><title>libobjc.A.dylib`getMethodNoSuper_nolock(objc_class*, objc_selector*) (4 samples, 0.01%)</title><rect x="62.3888%" y="901" width="0.0128%" height="15" fill="rgb(209,103,0)" fg:x="19562" fg:w="4"/><text x="62.6388%" y="911.50"></text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (5 samples, 0.02%)</title><rect x="62.7683%" y="885" width="0.0159%" height="15" fill="rgb(238,209,51)" fg:x="19681" fg:w="5"/><text x="63.0183%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (1,200 samples, 3.83%)</title><rect x="62.7842%" y="885" width="3.8271%" height="15" fill="rgb(237,56,23)" fg:x="19686" fg:w="1200"/><text x="63.0342%" y="895.50">libs..</text></g><g><title>libdispatch.dylib`_dispatch_event_loop_leave_deferred (7 samples, 0.02%)</title><rect x="66.6465%" y="869" width="0.0223%" height="15" fill="rgb(215,153,46)" fg:x="20897" fg:w="7"/><text x="66.8965%" y="879.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_drain_timers (7 samples, 0.02%)</title><rect x="66.6975%" y="853" width="0.0223%" height="15" fill="rgb(224,49,31)" fg:x="20913" fg:w="7"/><text x="66.9475%" y="863.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (5 samples, 0.02%)</title><rect x="66.7039%" y="837" width="0.0159%" height="15" fill="rgb(250,18,42)" fg:x="20915" fg:w="5"/><text x="66.9539%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (5 samples, 0.02%)</title><rect x="66.7039%" y="821" width="0.0159%" height="15" fill="rgb(215,176,39)" fg:x="20915" fg:w="5"/><text x="66.9539%" y="831.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (5 samples, 0.02%)</title><rect x="66.7198%" y="853" width="0.0159%" height="15" fill="rgb(223,77,29)" fg:x="20920" fg:w="5"/><text x="66.9698%" y="863.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (4 samples, 0.01%)</title><rect x="66.7230%" y="837" width="0.0128%" height="15" fill="rgb(234,94,52)" fg:x="20921" fg:w="4"/><text x="66.9730%" y="847.50"></text></g><g><title>libdispatch.dylib`_dispatch_kevent_worker_thread (22 samples, 0.07%)</title><rect x="66.6720%" y="869" width="0.0702%" height="15" fill="rgb(220,154,50)" fg:x="20905" fg:w="22"/><text x="66.9220%" y="879.50"></text></g><g><title>libdispatch.dylib`_dispatch_worker_thread2 (6 samples, 0.02%)</title><rect x="66.7421%" y="869" width="0.0191%" height="15" fill="rgb(212,11,10)" fg:x="20927" fg:w="6"/><text x="66.9921%" y="879.50"></text></g><g><title>libdispatch.dylib`_dispatch_root_queue_drain (6 samples, 0.02%)</title><rect x="66.7421%" y="853" width="0.0191%" height="15" fill="rgb(205,166,19)" fg:x="20927" fg:w="6"/><text x="66.9921%" y="863.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (6 samples, 0.02%)</title><rect x="66.7421%" y="837" width="0.0191%" height="15" fill="rgb(244,198,16)" fg:x="20927" fg:w="6"/><text x="66.9921%" y="847.50"></text></g><g><title>libdispatch.dylib`_dispatch_apply_invoke (6 samples, 0.02%)</title><rect x="66.7421%" y="821" width="0.0191%" height="15" fill="rgb(219,69,12)" fg:x="20927" fg:w="6"/><text x="66.9921%" y="831.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout2 (6 samples, 0.02%)</title><rect x="66.7421%" y="805" width="0.0191%" height="15" fill="rgb(245,30,7)" fg:x="20927" fg:w="6"/><text x="66.9921%" y="815.50"></text></g><g><title>CoreUI`__69-[_CSIRenditionBlockData expandCSIBitmapData:fromSlice:makeReadOnly:]_block_invoke (6 samples, 0.02%)</title><rect x="66.7421%" y="789" width="0.0191%" height="15" fill="rgb(218,221,48)" fg:x="20927" fg:w="6"/><text x="66.9921%" y="799.50"></text></g><g><title>CoreUI`BOMFileClose (5 samples, 0.02%)</title><rect x="66.7453%" y="773" width="0.0159%" height="15" fill="rgb(216,66,15)" fg:x="20928" fg:w="5"/><text x="66.9953%" y="783.50"></text></g><g><title>libdispatch.dylib`_dispatch_kevent_merge (16 samples, 0.05%)</title><rect x="67.2110%" y="837" width="0.0510%" height="15" fill="rgb(226,122,50)" fg:x="21074" fg:w="16"/><text x="67.4610%" y="847.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_merge_evt (6 samples, 0.02%)</title><rect x="67.2620%" y="837" width="0.0191%" height="15" fill="rgb(239,156,16)" fg:x="21090" fg:w="6"/><text x="67.5120%" y="847.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_merge (37 samples, 0.12%)</title><rect x="67.1886%" y="853" width="0.1180%" height="15" fill="rgb(224,27,38)" fg:x="21067" fg:w="37"/><text x="67.4386%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.03%)</title><rect x="67.2811%" y="837" width="0.0255%" height="15" fill="rgb(224,39,27)" fg:x="21096" fg:w="8"/><text x="67.5311%" y="847.50"></text></g><g><title>Metal`__36-[MTLIOAccelDevice kickCleanupQueue]_block_invoke (6 samples, 0.02%)</title><rect x="67.4565%" y="805" width="0.0191%" height="15" fill="rgb(215,92,29)" fg:x="21151" fg:w="6"/><text x="67.7065%" y="815.50"></text></g><g><title>IOSurface`-[IOSurfaceSharedEvent dealloc] (15 samples, 0.05%)</title><rect x="67.4980%" y="725" width="0.0478%" height="15" fill="rgb(207,159,16)" fg:x="21164" fg:w="15"/><text x="67.7480%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_mod_refs_trap (15 samples, 0.05%)</title><rect x="67.4980%" y="709" width="0.0478%" height="15" fill="rgb(238,163,47)" fg:x="21164" fg:w="15"/><text x="67.7480%" y="719.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable dealloc] (18 samples, 0.06%)</title><rect x="67.4948%" y="741" width="0.0574%" height="15" fill="rgb(219,91,49)" fg:x="21163" fg:w="18"/><text x="67.7448%" y="751.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (19 samples, 0.06%)</title><rect x="67.4948%" y="773" width="0.0606%" height="15" fill="rgb(227,167,31)" fg:x="21163" fg:w="19"/><text x="67.7448%" y="783.50"></text></g><g><title>CoreFoundation`__RELEASE_OBJECTS_IN_THE_ARRAY__ (19 samples, 0.06%)</title><rect x="67.4948%" y="757" width="0.0606%" height="15" fill="rgb(234,80,54)" fg:x="21163" fg:w="19"/><text x="67.7448%" y="767.50"></text></g><g><title>QuartzCore`layer_presented(_CAImageQueue*, unsigned int, double, double, void*) (22 samples, 0.07%)</title><rect x="67.4884%" y="789" width="0.0702%" height="15" fill="rgb(212,114,2)" fg:x="21161" fg:w="22"/><text x="67.7384%" y="799.50"></text></g><g><title>QuartzCore`invoke_presented_callback(void*) (25 samples, 0.08%)</title><rect x="67.4884%" y="805" width="0.0797%" height="15" fill="rgb(234,50,24)" fg:x="21161" fg:w="25"/><text x="67.7384%" y="815.50"></text></g><g><title>Metal`__36-[MTLIOAccelDevice kickCleanupQueue]_block_invoke (7 samples, 0.02%)</title><rect x="67.5809%" y="789" width="0.0223%" height="15" fill="rgb(221,68,8)" fg:x="21190" fg:w="7"/><text x="67.8309%" y="799.50"></text></g><g><title>libdispatch.dylib`_dispatch_call_block_and_release (161 samples, 0.51%)</title><rect x="67.5682%" y="805" width="0.5135%" height="15" fill="rgb(254,180,31)" fg:x="21186" fg:w="161"/><text x="67.8182%" y="815.50"></text></g><g><title>QuartzCore`__CAImageQueueInsertImage__block_invoke (149 samples, 0.48%)</title><rect x="67.6064%" y="789" width="0.4752%" height="15" fill="rgb(247,130,50)" fg:x="21198" fg:w="149"/><text x="67.8564%" y="799.50"></text></g><g><title>IOSurface`IOSurfaceClientBindAccel (147 samples, 0.47%)</title><rect x="67.6128%" y="773" width="0.4688%" height="15" fill="rgb(211,109,4)" fg:x="21200" fg:w="147"/><text x="67.8628%" y="783.50"></text></g><g><title>IOKit`IOConnectCallMethod (147 samples, 0.47%)</title><rect x="67.6128%" y="757" width="0.4688%" height="15" fill="rgb(238,50,21)" fg:x="21200" fg:w="147"/><text x="67.8628%" y="767.50"></text></g><g><title>IOKit`io_connect_method (147 samples, 0.47%)</title><rect x="67.6128%" y="741" width="0.4688%" height="15" fill="rgb(225,57,45)" fg:x="21200" fg:w="147"/><text x="67.8628%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (147 samples, 0.47%)</title><rect x="67.6128%" y="725" width="0.4688%" height="15" fill="rgb(209,196,50)" fg:x="21200" fg:w="147"/><text x="67.8628%" y="735.50"></text></g><g><title>libobjc.A.dylib`objc_release (9 samples, 0.03%)</title><rect x="68.0816%" y="805" width="0.0287%" height="15" fill="rgb(242,140,13)" fg:x="21347" fg:w="9"/><text x="68.3316%" y="815.50"></text></g><g><title>libobjc.A.dylib`_object_remove_associations (13 samples, 0.04%)</title><rect x="68.1359%" y="773" width="0.0415%" height="15" fill="rgb(217,111,7)" fg:x="21364" fg:w="13"/><text x="68.3859%" y="783.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (21 samples, 0.07%)</title><rect x="68.1135%" y="805" width="0.0670%" height="15" fill="rgb(253,193,51)" fg:x="21357" fg:w="21"/><text x="68.3635%" y="815.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (16 samples, 0.05%)</title><rect x="68.1295%" y="789" width="0.0510%" height="15" fill="rgb(252,70,29)" fg:x="21362" fg:w="16"/><text x="68.3795%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.04%)</title><rect x="68.1805%" y="805" width="0.0351%" height="15" fill="rgb(232,127,12)" fg:x="21378" fg:w="11"/><text x="68.4305%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (9 samples, 0.03%)</title><rect x="68.1869%" y="789" width="0.0287%" height="15" fill="rgb(211,180,21)" fg:x="21380" fg:w="9"/><text x="68.4369%" y="799.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (242 samples, 0.77%)</title><rect x="67.4565%" y="821" width="0.7718%" height="15" fill="rgb(229,72,13)" fg:x="21151" fg:w="242"/><text x="67.7065%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (4 samples, 0.01%)</title><rect x="68.2156%" y="805" width="0.0128%" height="15" fill="rgb(240,211,49)" fg:x="21389" fg:w="4"/><text x="68.4656%" y="815.50"></text></g><g><title>IOKit`__IONotificationPortSetDispatchQueue_block_invoke (4 samples, 0.01%)</title><rect x="68.3495%" y="773" width="0.0128%" height="15" fill="rgb(219,149,40)" fg:x="21431" fg:w="4"/><text x="68.5995%" y="783.50"></text></g><g><title>CoreFoundation`-[__NSArrayM replaceObjectsInRange:withObjects:count:] (8 samples, 0.03%)</title><rect x="68.4038%" y="741" width="0.0255%" height="15" fill="rgb(210,127,46)" fg:x="21448" fg:w="8"/><text x="68.6538%" y="751.50"></text></g><g><title>CoreFoundation`-[NSMutableArray replaceObjectsInRange:withObjectsFromArray:range:] (12 samples, 0.04%)</title><rect x="68.4038%" y="757" width="0.0383%" height="15" fill="rgb(220,106,7)" fg:x="21448" fg:w="12"/><text x="68.6538%" y="767.50"></text></g><g><title>IOAccelerator`IOAccelCommandQueueSubmitCommandBuffers (2,642 samples, 8.43%)</title><rect x="68.5441%" y="741" width="8.4261%" height="15" fill="rgb(249,31,22)" fg:x="21492" fg:w="2642"/><text x="68.7941%" y="751.50">IOAccelerato..</text></g><g><title>IOKit`IOConnectCallMethod (2,640 samples, 8.42%)</title><rect x="68.5505%" y="725" width="8.4197%" height="15" fill="rgb(253,1,49)" fg:x="21494" fg:w="2640"/><text x="68.8005%" y="735.50">IOKit`IOConn..</text></g><g><title>IOKit`io_connect_method (2,638 samples, 8.41%)</title><rect x="68.5568%" y="709" width="8.4133%" height="15" fill="rgb(227,144,33)" fg:x="21496" fg:w="2638"/><text x="68.8068%" y="719.50">IOKit`io_con..</text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (2,635 samples, 8.40%)</title><rect x="68.5664%" y="693" width="8.4038%" height="15" fill="rgb(249,163,44)" fg:x="21499" fg:w="2635"/><text x="68.8164%" y="703.50">libsystem_ke..</text></g><g><title>libobjc.A.dylib`objc_retain (4 samples, 0.01%)</title><rect x="76.9797%" y="725" width="0.0128%" height="15" fill="rgb(234,15,39)" fg:x="24137" fg:w="4"/><text x="77.2297%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (12 samples, 0.04%)</title><rect x="77.0116%" y="677" width="0.0383%" height="15" fill="rgb(207,66,16)" fg:x="24147" fg:w="12"/><text x="77.2616%" y="687.50"></text></g><g><title>Metal`-[MTLIOAccelCommandQueue submitCommandBuffers:count:] (2,698 samples, 8.60%)</title><rect x="68.4516%" y="757" width="8.6047%" height="15" fill="rgb(233,112,24)" fg:x="21463" fg:w="2698"/><text x="68.7016%" y="767.50">Metal`-[MTLI..</text></g><g><title>libsystem_blocks.dylib`_Block_copy (27 samples, 0.09%)</title><rect x="76.9702%" y="741" width="0.0861%" height="15" fill="rgb(230,90,22)" fg:x="24134" fg:w="27"/><text x="77.2202%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (19 samples, 0.06%)</title><rect x="76.9957%" y="725" width="0.0606%" height="15" fill="rgb(229,61,13)" fg:x="24142" fg:w="19"/><text x="77.2457%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (18 samples, 0.06%)</title><rect x="76.9989%" y="709" width="0.0574%" height="15" fill="rgb(225,57,24)" fg:x="24143" fg:w="18"/><text x="77.2489%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (17 samples, 0.05%)</title><rect x="77.0021%" y="693" width="0.0542%" height="15" fill="rgb(208,169,48)" fg:x="24144" fg:w="17"/><text x="77.2521%" y="703.50"></text></g><g><title>libdispatch.dylib`DYLD-STUB$$semaphore_wait (4 samples, 0.01%)</title><rect x="77.0627%" y="741" width="0.0128%" height="15" fill="rgb(244,218,51)" fg:x="24163" fg:w="4"/><text x="77.3127%" y="751.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_wait_slow (36 samples, 0.11%)</title><rect x="77.0627%" y="757" width="0.1148%" height="15" fill="rgb(214,148,10)" fg:x="24163" fg:w="36"/><text x="77.3127%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_wait_trap (26 samples, 0.08%)</title><rect x="77.0946%" y="741" width="0.0829%" height="15" fill="rgb(225,174,27)" fg:x="24173" fg:w="26"/><text x="77.3446%" y="751.50"></text></g><g><title>Metal`-[_MTLCommandQueue _submitAvailableCommandBuffers] (2,766 samples, 8.82%)</title><rect x="68.3655%" y="773" width="8.8216%" height="15" fill="rgb(230,96,26)" fg:x="21436" fg:w="2766"/><text x="68.6155%" y="783.50">Metal`-[_MTL..</text></g><g><title>Metal`-[MTLIOAccelCommandBuffer dealloc] (4 samples, 0.01%)</title><rect x="77.2253%" y="645" width="0.0128%" height="15" fill="rgb(232,10,30)" fg:x="24214" fg:w="4"/><text x="77.4753%" y="655.50"></text></g><g><title>CoreFoundation`-[__NSArrayM removeAllObjects] (7 samples, 0.02%)</title><rect x="77.2253%" y="693" width="0.0223%" height="15" fill="rgb(222,8,50)" fg:x="24214" fg:w="7"/><text x="77.4753%" y="703.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (7 samples, 0.02%)</title><rect x="77.2253%" y="677" width="0.0223%" height="15" fill="rgb(213,81,27)" fg:x="24214" fg:w="7"/><text x="77.4753%" y="687.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer dealloc] (7 samples, 0.02%)</title><rect x="77.2253%" y="661" width="0.0223%" height="15" fill="rgb(245,50,10)" fg:x="24214" fg:w="7"/><text x="77.4753%" y="671.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_signal_slow (5 samples, 0.02%)</title><rect x="77.2476%" y="693" width="0.0159%" height="15" fill="rgb(216,100,18)" fg:x="24221" fg:w="5"/><text x="77.4976%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_signal_trap (4 samples, 0.01%)</title><rect x="77.2508%" y="677" width="0.0128%" height="15" fill="rgb(236,147,54)" fg:x="24222" fg:w="4"/><text x="77.5008%" y="687.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable didScheduledPresent] (13 samples, 0.04%)</title><rect x="77.2253%" y="709" width="0.0415%" height="15" fill="rgb(205,143,26)" fg:x="24214" fg:w="13"/><text x="77.4753%" y="719.50"></text></g><g><title>QuartzCore`_XImageQueueDidComposite (23 samples, 0.07%)</title><rect x="77.2030%" y="757" width="0.0734%" height="15" fill="rgb(236,26,9)" fg:x="24207" fg:w="23"/><text x="77.4530%" y="767.50"></text></g><g><title>QuartzCore`CAImageQueueDidComposite (23 samples, 0.07%)</title><rect x="77.2030%" y="741" width="0.0734%" height="15" fill="rgb(221,165,53)" fg:x="24207" fg:w="23"/><text x="77.4530%" y="751.50"></text></g><g><title>QuartzCore`layer_composited(_CAImageQueue*, void*, unsigned int) (22 samples, 0.07%)</title><rect x="77.2062%" y="725" width="0.0702%" height="15" fill="rgb(214,110,17)" fg:x="24208" fg:w="22"/><text x="77.4562%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (10 samples, 0.03%)</title><rect x="77.2764%" y="741" width="0.0319%" height="15" fill="rgb(237,197,12)" fg:x="24230" fg:w="10"/><text x="77.5264%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (10 samples, 0.03%)</title><rect x="77.2764%" y="725" width="0.0319%" height="15" fill="rgb(205,84,17)" fg:x="24230" fg:w="10"/><text x="77.5264%" y="735.50"></text></g><g><title>QuartzCore`_XImageQueueDidPresent (12 samples, 0.04%)</title><rect x="77.2764%" y="757" width="0.0383%" height="15" fill="rgb(237,18,45)" fg:x="24230" fg:w="12"/><text x="77.5264%" y="767.50"></text></g><g><title>QuartzCore`invocation function for block in CA::Context::client_port (48 samples, 0.15%)</title><rect x="77.1966%" y="773" width="0.1531%" height="15" fill="rgb(221,87,14)" fg:x="24205" fg:w="48"/><text x="77.4466%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (11 samples, 0.04%)</title><rect x="77.3146%" y="757" width="0.0351%" height="15" fill="rgb(238,186,15)" fg:x="24242" fg:w="11"/><text x="77.5646%" y="767.50"></text></g><g><title>CoreFoundation`CFRelease (6 samples, 0.02%)</title><rect x="77.4581%" y="725" width="0.0191%" height="15" fill="rgb(208,115,11)" fg:x="24287" fg:w="6"/><text x="77.7081%" y="735.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable present] (6 samples, 0.02%)</title><rect x="77.5570%" y="677" width="0.0191%" height="15" fill="rgb(254,175,0)" fg:x="24318" fg:w="6"/><text x="77.8070%" y="687.50"></text></g><g><title>IOKit`io_connect_method (184 samples, 0.59%)</title><rect x="77.5985%" y="629" width="0.5868%" height="15" fill="rgb(227,24,42)" fg:x="24331" fg:w="184"/><text x="77.8485%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (180 samples, 0.57%)</title><rect x="77.6112%" y="613" width="0.5741%" height="15" fill="rgb(223,211,37)" fg:x="24335" fg:w="180"/><text x="77.8612%" y="623.50"></text></g><g><title>IOSurface`IOSurfaceClientSignalEvent (186 samples, 0.59%)</title><rect x="77.5953%" y="661" width="0.5932%" height="15" fill="rgb(235,49,27)" fg:x="24330" fg:w="186"/><text x="77.8453%" y="671.50"></text></g><g><title>IOKit`IOConnectCallMethod (186 samples, 0.59%)</title><rect x="77.5953%" y="645" width="0.5932%" height="15" fill="rgb(254,97,51)" fg:x="24330" fg:w="186"/><text x="77.8453%" y="655.50"></text></g><g><title>IOKit`io_connect_method (40 samples, 0.13%)</title><rect x="78.1885%" y="629" width="0.1276%" height="15" fill="rgb(249,51,40)" fg:x="24516" fg:w="40"/><text x="78.4385%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (38 samples, 0.12%)</title><rect x="78.1949%" y="613" width="0.1212%" height="15" fill="rgb(210,128,45)" fg:x="24518" fg:w="38"/><text x="78.4449%" y="623.50"></text></g><g><title>IOKit`IOConnectCallMethod (43 samples, 0.14%)</title><rect x="78.1885%" y="645" width="0.1371%" height="15" fill="rgb(224,137,50)" fg:x="24516" fg:w="43"/><text x="78.4385%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.02%)</title><rect x="78.3288%" y="629" width="0.0159%" height="15" fill="rgb(242,15,9)" fg:x="24560" fg:w="5"/><text x="78.5788%" y="639.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (7 samples, 0.02%)</title><rect x="78.3256%" y="645" width="0.0223%" height="15" fill="rgb(233,187,41)" fg:x="24559" fg:w="7"/><text x="78.5756%" y="655.50"></text></g><g><title>IOSurface`IOSurfaceSharedEventNotifyEventListener (51 samples, 0.16%)</title><rect x="78.1885%" y="661" width="0.1627%" height="15" fill="rgb(227,2,29)" fg:x="24516" fg:w="51"/><text x="78.4385%" y="671.50"></text></g><g><title>QuartzCore`layer_private_present(_CAMetalLayerPrivate*, CAMetalDrawable*, double, unsigned int) (248 samples, 0.79%)</title><rect x="77.5793%" y="677" width="0.7909%" height="15" fill="rgb(222,70,3)" fg:x="24325" fg:w="248"/><text x="77.8293%" y="687.50"></text></g><g><title>Metal`MTLDispatchListApply (262 samples, 0.84%)</title><rect x="77.5411%" y="693" width="0.8356%" height="15" fill="rgb(213,11,42)" fg:x="24313" fg:w="262"/><text x="77.7911%" y="703.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_lock_init_slow (12 samples, 0.04%)</title><rect x="78.4054%" y="693" width="0.0383%" height="15" fill="rgb(225,150,9)" fg:x="24584" fg:w="12"/><text x="78.6554%" y="703.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_check_init_slow (11 samples, 0.04%)</title><rect x="78.4085%" y="677" width="0.0351%" height="15" fill="rgb(230,162,45)" fg:x="24585" fg:w="11"/><text x="78.6585%" y="687.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_broadcast (6 samples, 0.02%)</title><rect x="78.4436%" y="693" width="0.0191%" height="15" fill="rgb(222,14,52)" fg:x="24596" fg:w="6"/><text x="78.6936%" y="703.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_check_init_slow (5 samples, 0.02%)</title><rect x="78.4468%" y="677" width="0.0159%" height="15" fill="rgb(254,198,14)" fg:x="24597" fg:w="5"/><text x="78.6968%" y="687.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didScheduleWithStartTime:endTime:error:] (304 samples, 0.97%)</title><rect x="77.5060%" y="709" width="0.9695%" height="15" fill="rgb(220,217,30)" fg:x="24302" fg:w="304"/><text x="77.7560%" y="719.50"></text></g><g><title>CoreFoundation`-[__NSArrayM objectAtIndex:] (10 samples, 0.03%)</title><rect x="78.5138%" y="677" width="0.0319%" height="15" fill="rgb(215,146,41)" fg:x="24618" fg:w="10"/><text x="78.7638%" y="687.50"></text></g><g><title>CoreFoundation`-[__NSArrayM removeObjectsInRange:] (13 samples, 0.04%)</title><rect x="78.5457%" y="677" width="0.0415%" height="15" fill="rgb(217,27,36)" fg:x="24628" fg:w="13"/><text x="78.7957%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.02%)</title><rect x="78.5712%" y="661" width="0.0159%" height="15" fill="rgb(219,218,39)" fg:x="24636" fg:w="5"/><text x="78.8212%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.02%)</title><rect x="78.5712%" y="645" width="0.0159%" height="15" fill="rgb(219,4,42)" fg:x="24636" fg:w="5"/><text x="78.8212%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.02%)</title><rect x="78.5712%" y="629" width="0.0159%" height="15" fill="rgb(249,119,36)" fg:x="24636" fg:w="5"/><text x="78.8212%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.02%)</title><rect x="78.5712%" y="613" width="0.0159%" height="15" fill="rgb(209,23,33)" fg:x="24636" fg:w="5"/><text x="78.8212%" y="623.50"></text></g><g><title>CoreFoundation`-[NSMutableArray removeObject:] (37 samples, 0.12%)</title><rect x="78.4819%" y="693" width="0.1180%" height="15" fill="rgb(211,10,0)" fg:x="24608" fg:w="37"/><text x="78.7319%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_kq_poll (4 samples, 0.01%)</title><rect x="78.6382%" y="645" width="0.0128%" height="15" fill="rgb(208,99,37)" fg:x="24657" fg:w="4"/><text x="78.8882%" y="655.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (188 samples, 0.60%)</title><rect x="78.6350%" y="661" width="0.5996%" height="15" fill="rgb(213,132,31)" fg:x="24656" fg:w="188"/><text x="78.8850%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (183 samples, 0.58%)</title><rect x="78.6509%" y="645" width="0.5836%" height="15" fill="rgb(243,129,40)" fg:x="24661" fg:w="183"/><text x="78.9009%" y="655.50"></text></g><g><title>libobjc.A.dylib`objc_retain (5 samples, 0.02%)</title><rect x="79.2728%" y="613" width="0.0159%" height="15" fill="rgb(210,66,33)" fg:x="24856" fg:w="5"/><text x="79.5228%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (15 samples, 0.05%)</title><rect x="79.2952%" y="565" width="0.0478%" height="15" fill="rgb(209,189,4)" fg:x="24863" fg:w="15"/><text x="79.5452%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (18 samples, 0.06%)</title><rect x="79.2888%" y="613" width="0.0574%" height="15" fill="rgb(214,107,37)" fg:x="24861" fg:w="18"/><text x="79.5388%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (18 samples, 0.06%)</title><rect x="79.2888%" y="597" width="0.0574%" height="15" fill="rgb(245,88,54)" fg:x="24861" fg:w="18"/><text x="79.5388%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (18 samples, 0.06%)</title><rect x="79.2888%" y="581" width="0.0574%" height="15" fill="rgb(205,146,20)" fg:x="24861" fg:w="18"/><text x="79.5388%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (6 samples, 0.02%)</title><rect x="79.3462%" y="613" width="0.0191%" height="15" fill="rgb(220,161,25)" fg:x="24879" fg:w="6"/><text x="79.5962%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_Block_copy (33 samples, 0.11%)</title><rect x="79.2697%" y="645" width="0.1052%" height="15" fill="rgb(215,152,15)" fg:x="24855" fg:w="33"/><text x="79.5197%" y="655.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (32 samples, 0.10%)</title><rect x="79.2728%" y="629" width="0.1021%" height="15" fill="rgb(233,192,44)" fg:x="24856" fg:w="32"/><text x="79.5228%" y="639.50"></text></g><g><title>Metal`-[MTLIOAccelDevice kickCleanupQueue] (235 samples, 0.75%)</title><rect x="78.6350%" y="677" width="0.7495%" height="15" fill="rgb(240,170,46)" fg:x="24656" fg:w="235"/><text x="78.8850%" y="687.50"></text></g><g><title>libdispatch.dylib`dispatch_async (44 samples, 0.14%)</title><rect x="79.2441%" y="661" width="0.1403%" height="15" fill="rgb(207,104,33)" fg:x="24847" fg:w="44"/><text x="79.4941%" y="671.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (5 samples, 0.02%)</title><rect x="79.4227%" y="629" width="0.0159%" height="15" fill="rgb(219,21,39)" fg:x="24903" fg:w="5"/><text x="79.6727%" y="639.50"></text></g><g><title>libobjc.A.dylib`_object_remove_associations (4 samples, 0.01%)</title><rect x="79.4259%" y="613" width="0.0128%" height="15" fill="rgb(214,133,29)" fg:x="24904" fg:w="4"/><text x="79.6759%" y="623.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (7 samples, 0.02%)</title><rect x="79.4227%" y="645" width="0.0223%" height="15" fill="rgb(226,93,6)" fg:x="24903" fg:w="7"/><text x="79.6727%" y="655.50"></text></g><g><title>Metal`MTLDispatchListApply (10 samples, 0.03%)</title><rect x="79.4196%" y="661" width="0.0319%" height="15" fill="rgb(252,222,34)" fg:x="24902" fg:w="10"/><text x="79.6696%" y="671.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didCompleteWithStartTime:endTime:error:] (26 samples, 0.08%)</title><rect x="79.3845%" y="677" width="0.0829%" height="15" fill="rgb(252,92,48)" fg:x="24891" fg:w="26"/><text x="79.6345%" y="687.50"></text></g><g><title>Metal`-[MTLResourceList releaseAllObjectsAndReset] (15 samples, 0.05%)</title><rect x="79.5631%" y="645" width="0.0478%" height="15" fill="rgb(245,223,24)" fg:x="24947" fg:w="15"/><text x="79.8131%" y="655.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStorageReleaseExtraResources (5 samples, 0.02%)</title><rect x="79.6109%" y="645" width="0.0159%" height="15" fill="rgb(205,176,3)" fg:x="24962" fg:w="5"/><text x="79.8609%" y="655.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStorageReset (45 samples, 0.14%)</title><rect x="79.5344%" y="661" width="0.1435%" height="15" fill="rgb(235,151,15)" fg:x="24938" fg:w="45"/><text x="79.7844%" y="671.50"></text></g><g><title>libobjc.A.dylib`objc_release (16 samples, 0.05%)</title><rect x="79.6269%" y="645" width="0.0510%" height="15" fill="rgb(237,209,11)" fg:x="24967" fg:w="16"/><text x="79.8769%" y="655.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStorageDealloc (83 samples, 0.26%)</title><rect x="79.4706%" y="677" width="0.2647%" height="15" fill="rgb(243,227,24)" fg:x="24918" fg:w="83"/><text x="79.7206%" y="687.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (18 samples, 0.06%)</title><rect x="79.6779%" y="661" width="0.0574%" height="15" fill="rgb(239,193,16)" fg:x="24983" fg:w="18"/><text x="79.9279%" y="671.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_push (6 samples, 0.02%)</title><rect x="79.7417%" y="677" width="0.0191%" height="15" fill="rgb(231,27,9)" fg:x="25003" fg:w="6"/><text x="79.9917%" y="687.50"></text></g><g><title>libdispatch.dylib`dispatch_semaphore_signal (7 samples, 0.02%)</title><rect x="79.7608%" y="677" width="0.0223%" height="15" fill="rgb(219,169,10)" fg:x="25009" fg:w="7"/><text x="80.0108%" y="687.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer didCompleteWithStartTime:endTime:error:] (370 samples, 1.18%)</title><rect x="78.6159%" y="693" width="1.1800%" height="15" fill="rgb(244,229,43)" fg:x="24650" fg:w="370"/><text x="78.8659%" y="703.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (21 samples, 0.07%)</title><rect x="79.8150%" y="693" width="0.0670%" height="15" fill="rgb(254,38,20)" fg:x="25026" fg:w="21"/><text x="80.0650%" y="703.50"></text></g><g><title>Metal`-[_MTLCommandQueue commandBufferDidComplete:startTime:completionTime:error:] (447 samples, 1.43%)</title><rect x="78.4755%" y="709" width="1.4256%" height="15" fill="rgb(250,47,30)" fg:x="24606" fg:w="447"/><text x="78.7255%" y="719.50"></text></g><g><title>Metal`__53-[MTLIOAccelCommandQueue submitCommandBuffers:count:]_block_invoke (5 samples, 0.02%)</title><rect x="79.9043%" y="709" width="0.0159%" height="15" fill="rgb(224,124,36)" fg:x="25054" fg:w="5"/><text x="80.1543%" y="719.50"></text></g><g><title>Metal`__53-[MTLIOAccelCommandQueue submitCommandBuffers:count:]_block_invoke.19 (4 samples, 0.01%)</title><rect x="79.9203%" y="709" width="0.0128%" height="15" fill="rgb(246,68,51)" fg:x="25059" fg:w="4"/><text x="80.1703%" y="719.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (19 samples, 0.06%)</title><rect x="79.9426%" y="709" width="0.0606%" height="15" fill="rgb(253,43,49)" fg:x="25066" fg:w="19"/><text x="80.1926%" y="719.50"></text></g><g><title>libobjc.A.dylib`objc_release (5 samples, 0.02%)</title><rect x="80.0032%" y="709" width="0.0159%" height="15" fill="rgb(219,54,36)" fg:x="25085" fg:w="5"/><text x="80.2532%" y="719.50"></text></g><g><title>libobjc.A.dylib`_object_remove_associations (25 samples, 0.08%)</title><rect x="80.0702%" y="677" width="0.0797%" height="15" fill="rgb(227,133,34)" fg:x="25106" fg:w="25"/><text x="80.3202%" y="687.50"></text></g><g><title>libobjc.A.dylib`bool objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt; &gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt; &gt; &gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt; &gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt; &gt; &gt; &gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair (12 samples, 0.04%)</title><rect x="80.1116%" y="661" width="0.0383%" height="15" fill="rgb(247,227,15)" fg:x="25119" fg:w="12"/><text x="80.3616%" y="671.50"></text></g><g><title>libobjc.A.dylib`objc_object::sidetable_clearDeallocating (26 samples, 0.08%)</title><rect x="80.1531%" y="677" width="0.0829%" height="15" fill="rgb(229,96,14)" fg:x="25132" fg:w="26"/><text x="80.4031%" y="687.50"></text></g><g><title>libobjc.A.dylib`bool objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, unsigned long, (anonymous namespace)::RefcountMapValuePurgeable, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt; &gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, unsigned long&gt; &gt;, DisguisedPtr&lt;objc_object&gt;, unsigned long, (anonymous namespace)::RefcountMapValuePurgeable, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt; &gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, unsigned long&gt; &gt;::LookupBucketFor&lt;DisguisedPtr&lt;objc_object&gt; &gt;(DisguisedPtr&lt;objc_object&gt; const&amp;, objc::detail::DenseMapPair&lt;DisguisedPtr (4 samples, 0.01%)</title><rect x="80.2232%" y="661" width="0.0128%" height="15" fill="rgb(220,79,17)" fg:x="25154" fg:w="4"/><text x="80.4732%" y="671.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (54 samples, 0.17%)</title><rect x="80.0702%" y="693" width="0.1722%" height="15" fill="rgb(205,131,53)" fg:x="25106" fg:w="54"/><text x="80.3202%" y="703.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (72 samples, 0.23%)</title><rect x="80.0255%" y="709" width="0.2296%" height="15" fill="rgb(209,50,29)" fg:x="25092" fg:w="72"/><text x="80.2755%" y="719.50"></text></g><g><title>libobjc.A.dylib`objc_release (4 samples, 0.01%)</title><rect x="80.2424%" y="693" width="0.0128%" height="15" fill="rgb(245,86,46)" fg:x="25160" fg:w="4"/><text x="80.4924%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.04%)</title><rect x="80.2551%" y="709" width="0.0415%" height="15" fill="rgb(235,66,46)" fg:x="25164" fg:w="13"/><text x="80.5051%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.02%)</title><rect x="80.2807%" y="693" width="0.0159%" height="15" fill="rgb(232,148,31)" fg:x="25172" fg:w="5"/><text x="80.5307%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (7 samples, 0.02%)</title><rect x="80.2998%" y="709" width="0.0223%" height="15" fill="rgb(217,149,8)" fg:x="25178" fg:w="7"/><text x="80.5498%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (7 samples, 0.02%)</title><rect x="80.3221%" y="709" width="0.0223%" height="15" fill="rgb(209,183,11)" fg:x="25185" fg:w="7"/><text x="80.5721%" y="719.50"></text></g><g><title>IOAccelerator`ioAccelCommandQueueBlockFenceCallback (898 samples, 2.86%)</title><rect x="77.4932%" y="725" width="2.8640%" height="15" fill="rgb(208,55,20)" fg:x="24298" fg:w="898"/><text x="77.7432%" y="735.50">IO..</text></g><g><title>QuartzCore`CAImageQueuePing_ (12 samples, 0.04%)</title><rect x="80.3923%" y="677" width="0.0383%" height="15" fill="rgb(218,39,14)" fg:x="25207" fg:w="12"/><text x="80.6423%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (12 samples, 0.04%)</title><rect x="80.3923%" y="661" width="0.0383%" height="15" fill="rgb(216,169,33)" fg:x="25207" fg:w="12"/><text x="80.6423%" y="671.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (9 samples, 0.03%)</title><rect x="80.4337%" y="677" width="0.0287%" height="15" fill="rgb(233,80,24)" fg:x="25220" fg:w="9"/><text x="80.6837%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (9 samples, 0.03%)</title><rect x="80.4337%" y="661" width="0.0287%" height="15" fill="rgb(213,179,31)" fg:x="25220" fg:w="9"/><text x="80.6837%" y="671.50"></text></g><g><title>QuartzCore`CAImageQueueInsertImage_ (30 samples, 0.10%)</title><rect x="80.3700%" y="693" width="0.0957%" height="15" fill="rgb(209,19,5)" fg:x="25200" fg:w="30"/><text x="80.6200%" y="703.50"></text></g><g><title>QuartzCore`layer_private_present_impl(_CAMetalLayerPrivate*, CAMetalDrawable*, double, unsigned int) (36 samples, 0.11%)</title><rect x="80.3604%" y="709" width="0.1148%" height="15" fill="rgb(219,18,35)" fg:x="25197" fg:w="36"/><text x="80.6104%" y="719.50"></text></g><g><title>IOSurface`_ioSurfaceEventNotificationCallback2 (38 samples, 0.12%)</title><rect x="80.3572%" y="725" width="0.1212%" height="15" fill="rgb(209,169,16)" fg:x="25196" fg:w="38"/><text x="80.6072%" y="735.50"></text></g><g><title>Metal`__53-[MTLIOAccelCommandQueue submitCommandBuffers:count:]_block_invoke (10 samples, 0.03%)</title><rect x="80.4816%" y="725" width="0.0319%" height="15" fill="rgb(245,90,51)" fg:x="25235" fg:w="10"/><text x="80.7316%" y="735.50"></text></g><g><title>Metal`__53-[MTLIOAccelCommandQueue submitCommandBuffers:count:]_block_invoke.19 (11 samples, 0.04%)</title><rect x="80.5135%" y="725" width="0.0351%" height="15" fill="rgb(220,99,45)" fg:x="25245" fg:w="11"/><text x="80.7635%" y="735.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (18 samples, 0.06%)</title><rect x="80.5486%" y="725" width="0.0574%" height="15" fill="rgb(249,89,25)" fg:x="25256" fg:w="18"/><text x="80.7986%" y="735.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (6 samples, 0.02%)</title><rect x="80.6060%" y="725" width="0.0191%" height="15" fill="rgb(239,193,0)" fg:x="25274" fg:w="6"/><text x="80.8560%" y="735.50"></text></g><g><title>IOKit`IODispatchCalloutFromCFMessage (1,000 samples, 3.19%)</title><rect x="77.4422%" y="741" width="3.1893%" height="15" fill="rgb(231,126,1)" fg:x="24282" fg:w="1000"/><text x="77.6922%" y="751.50">IOK..</text></g><g><title>IOKit`_IODispatchCalloutWithDispatch (1,007 samples, 3.21%)</title><rect x="77.4231%" y="757" width="3.2116%" height="15" fill="rgb(243,166,3)" fg:x="24276" fg:w="1007"/><text x="77.6731%" y="767.50">IOK..</text></g><g><title>libsystem_kernel.dylib`mach_msg (7 samples, 0.02%)</title><rect x="80.6410%" y="757" width="0.0223%" height="15" fill="rgb(223,22,34)" fg:x="25285" fg:w="7"/><text x="80.8910%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (383 samples, 1.22%)</title><rect x="80.6634%" y="757" width="1.2215%" height="15" fill="rgb(251,52,51)" fg:x="25292" fg:w="383"/><text x="80.9134%" y="767.50"></text></g><g><title>libdispatch.dylib`dispatch_mig_server (1,428 samples, 4.55%)</title><rect x="77.3497%" y="773" width="4.5543%" height="15" fill="rgb(221,165,28)" fg:x="24253" fg:w="1428"/><text x="77.5997%" y="783.50">libdi..</text></g><g><title>libsystem_kernel.dylib`mig_reply_setup (6 samples, 0.02%)</title><rect x="81.8849%" y="757" width="0.0191%" height="15" fill="rgb(218,121,47)" fg:x="25675" fg:w="6"/><text x="82.1349%" y="767.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (9 samples, 0.03%)</title><rect x="81.9136%" y="773" width="0.0287%" height="15" fill="rgb(209,120,9)" fg:x="25684" fg:w="9"/><text x="82.1636%" y="783.50"></text></g><g><title>libobjc.A.dylib`objc_release (23 samples, 0.07%)</title><rect x="81.9423%" y="773" width="0.0734%" height="15" fill="rgb(236,68,12)" fg:x="25693" fg:w="23"/><text x="82.1923%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (5 samples, 0.02%)</title><rect x="82.0156%" y="773" width="0.0159%" height="15" fill="rgb(225,194,26)" fg:x="25716" fg:w="5"/><text x="82.2656%" y="783.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (4,296 samples, 13.70%)</title><rect x="68.3336%" y="789" width="13.7012%" height="15" fill="rgb(231,84,39)" fg:x="21426" fg:w="4296"/><text x="68.5836%" y="799.50">libdispatch.dylib`_di..</text></g><g><title>libdispatch.dylib`_dispatch_continuation_pop (4,310 samples, 13.75%)</title><rect x="68.2921%" y="805" width="13.7458%" height="15" fill="rgb(210,11,45)" fg:x="21413" fg:w="4310"/><text x="68.5421%" y="815.50">libdispatch.dylib`_di..</text></g><g><title>libdispatch.dylib`_dispatch_kq_unote_update (5 samples, 0.02%)</title><rect x="82.0443%" y="805" width="0.0159%" height="15" fill="rgb(224,54,52)" fg:x="25725" fg:w="5"/><text x="82.2943%" y="815.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (4,342 samples, 13.85%)</title><rect x="68.2411%" y="821" width="13.8479%" height="15" fill="rgb(238,102,14)" fg:x="21397" fg:w="4342"/><text x="68.4911%" y="831.50">libdispatch.dylib`_di..</text></g><g><title>libdispatch.dylib`_dispatch_source_handler_dispose (8 samples, 0.03%)</title><rect x="82.0635%" y="805" width="0.0255%" height="15" fill="rgb(243,160,52)" fg:x="25731" fg:w="8"/><text x="82.3135%" y="815.50"></text></g><g><title>libdispatch.dylib`_dispatch_unote_resume (6 samples, 0.02%)</title><rect x="82.0922%" y="821" width="0.0191%" height="15" fill="rgb(216,114,19)" fg:x="25740" fg:w="6"/><text x="82.3422%" y="831.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (4,634 samples, 14.78%)</title><rect x="67.3513%" y="837" width="14.7791%" height="15" fill="rgb(244,166,37)" fg:x="21118" fg:w="4634"/><text x="67.6013%" y="847.50">libdispatch.dylib`_disp..</text></g><g><title>libdispatch.dylib`_dispatch_last_resort_autorelease_pool_pop (11 samples, 0.04%)</title><rect x="82.1304%" y="837" width="0.0351%" height="15" fill="rgb(246,29,44)" fg:x="25752" fg:w="11"/><text x="82.3804%" y="847.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (8 samples, 0.03%)</title><rect x="82.1400%" y="821" width="0.0255%" height="15" fill="rgb(215,56,53)" fg:x="25755" fg:w="8"/><text x="82.3900%" y="831.50"></text></g><g><title>libdispatch.dylib`_dispatch_last_resort_autorelease_pool_push (14 samples, 0.04%)</title><rect x="82.1655%" y="837" width="0.0446%" height="15" fill="rgb(217,60,2)" fg:x="25763" fg:w="14"/><text x="82.4155%" y="847.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPush (7 samples, 0.02%)</title><rect x="82.1878%" y="821" width="0.0223%" height="15" fill="rgb(207,26,24)" fg:x="25770" fg:w="7"/><text x="82.4378%" y="831.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (4,676 samples, 14.91%)</title><rect x="67.3194%" y="853" width="14.9131%" height="15" fill="rgb(252,210,15)" fg:x="21108" fg:w="4676"/><text x="67.5694%" y="863.50">libdispatch.dylib`_disp..</text></g><g><title>libsystem_pthread.dylib`start_wqthread (6,231 samples, 19.87%)</title><rect x="62.4079%" y="901" width="19.8724%" height="15" fill="rgb(253,209,26)" fg:x="19568" fg:w="6231"/><text x="62.6579%" y="911.50">libsystem_pthread.dylib`start_w..</text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (4,911 samples, 15.66%)</title><rect x="66.6178%" y="885" width="15.6626%" height="15" fill="rgb(238,170,14)" fg:x="20888" fg:w="4911"/><text x="66.8678%" y="895.50">libsystem_pthread.dylib`..</text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (4,866 samples, 15.52%)</title><rect x="66.7613%" y="869" width="15.5191%" height="15" fill="rgb(216,178,15)" fg:x="20933" fg:w="4866"/><text x="67.0113%" y="879.50">libdispatch.dylib`_dispa..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.02%)</title><rect x="82.2644%" y="853" width="0.0159%" height="15" fill="rgb(250,197,2)" fg:x="25794" fg:w="5"/><text x="82.5144%" y="863.50"></text></g><g><title>CoreFoundation`CFRunLoopTimerSetNextFireDate (5 samples, 0.02%)</title><rect x="82.3122%" y="741" width="0.0159%" height="15" fill="rgb(212,70,42)" fg:x="25809" fg:w="5"/><text x="82.5622%" y="751.50"></text></g><g><title>SkyLight`(anonymous namespace)::EventLog::getLogString (8 samples, 0.03%)</title><rect x="82.3601%" y="677" width="0.0255%" height="15" fill="rgb(227,213,9)" fg:x="25824" fg:w="8"/><text x="82.6101%" y="687.50"></text></g><g><title>libsystem_c.dylib`snprintf (8 samples, 0.03%)</title><rect x="82.3601%" y="661" width="0.0255%" height="15" fill="rgb(245,99,25)" fg:x="25824" fg:w="8"/><text x="82.6101%" y="671.50"></text></g><g><title>libsystem_c.dylib`vsnprintf_l (8 samples, 0.03%)</title><rect x="82.3601%" y="645" width="0.0255%" height="15" fill="rgb(250,82,29)" fg:x="25824" fg:w="8"/><text x="82.6101%" y="655.50"></text></g><g><title>libsystem_c.dylib`_vsnprintf (8 samples, 0.03%)</title><rect x="82.3601%" y="629" width="0.0255%" height="15" fill="rgb(241,226,54)" fg:x="25824" fg:w="8"/><text x="82.6101%" y="639.50"></text></g><g><title>libsystem_c.dylib`__vfprintf (8 samples, 0.03%)</title><rect x="82.3601%" y="613" width="0.0255%" height="15" fill="rgb(221,99,41)" fg:x="25824" fg:w="8"/><text x="82.6101%" y="623.50"></text></g><g><title>libsystem_c.dylib`__dtoa (4 samples, 0.01%)</title><rect x="82.3728%" y="597" width="0.0128%" height="15" fill="rgb(213,90,21)" fg:x="25828" fg:w="4"/><text x="82.6228%" y="607.50"></text></g><g><title>SkyLight`CGSEventLogEvent (10 samples, 0.03%)</title><rect x="82.3569%" y="709" width="0.0319%" height="15" fill="rgb(205,208,24)" fg:x="25823" fg:w="10"/><text x="82.6069%" y="719.50"></text></g><g><title>SkyLight`(anonymous namespace)::MouseTrackingEventLog::getLogString (9 samples, 0.03%)</title><rect x="82.3601%" y="693" width="0.0287%" height="15" fill="rgb(246,31,12)" fg:x="25824" fg:w="9"/><text x="82.6101%" y="703.50"></text></g><g><title>SkyLight`CGSDatagramReadStream::VMData::release (5 samples, 0.02%)</title><rect x="82.4047%" y="693" width="0.0159%" height="15" fill="rgb(213,154,6)" fg:x="25838" fg:w="5"/><text x="82.6547%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (5 samples, 0.02%)</title><rect x="82.4047%" y="677" width="0.0159%" height="15" fill="rgb(222,163,29)" fg:x="25838" fg:w="5"/><text x="82.6547%" y="687.50"></text></g><g><title>SkyLight`SLEventRecordCreateWithBytesAndSource(void const*, unsigned long, __CGEventSource*) (9 samples, 0.03%)</title><rect x="82.4270%" y="677" width="0.0287%" height="15" fill="rgb(227,201,8)" fg:x="25845" fg:w="9"/><text x="82.6770%" y="687.50"></text></g><g><title>SkyLight`CGSDecodeEventRecord (12 samples, 0.04%)</title><rect x="82.4207%" y="693" width="0.0383%" height="15" fill="rgb(233,9,32)" fg:x="25843" fg:w="12"/><text x="82.6707%" y="703.50"></text></g><g><title>SkyLight`CGSSnarfAndDispatchDatagrams (57 samples, 0.18%)</title><rect x="82.3888%" y="709" width="0.1818%" height="15" fill="rgb(217,54,24)" fg:x="25833" fg:w="57"/><text x="82.6388%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (34 samples, 0.11%)</title><rect x="82.4621%" y="693" width="0.1084%" height="15" fill="rgb(235,192,0)" fg:x="25856" fg:w="34"/><text x="82.7121%" y="703.50"></text></g><g><title>HIToolbox`MessageHandler(__CFMachPort*, void*, long, void*) (89 samples, 0.28%)</title><rect x="82.2963%" y="773" width="0.2838%" height="15" fill="rgb(235,45,9)" fg:x="25804" fg:w="89"/><text x="82.5463%" y="783.50"></text></g><g><title>HIToolbox`PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) (87 samples, 0.28%)</title><rect x="82.3027%" y="757" width="0.2775%" height="15" fill="rgb(246,42,40)" fg:x="25806" fg:w="87"/><text x="82.5527%" y="767.50"></text></g><g><title>SkyLight`SLEventCreateNextEvent (73 samples, 0.23%)</title><rect x="82.3473%" y="741" width="0.2328%" height="15" fill="rgb(248,111,24)" fg:x="25820" fg:w="73"/><text x="82.5973%" y="751.50"></text></g><g><title>SkyLight`SLSGetNextEventRecordInternal (73 samples, 0.23%)</title><rect x="82.3473%" y="725" width="0.2328%" height="15" fill="rgb(249,65,22)" fg:x="25820" fg:w="73"/><text x="82.5973%" y="735.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSource1 (93 samples, 0.30%)</title><rect x="82.2867%" y="821" width="0.2966%" height="15" fill="rgb(238,111,51)" fg:x="25801" fg:w="93"/><text x="82.5367%" y="831.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (93 samples, 0.30%)</title><rect x="82.2867%" y="805" width="0.2966%" height="15" fill="rgb(250,118,22)" fg:x="25801" fg:w="93"/><text x="82.5367%" y="815.50"></text></g><g><title>CoreFoundation`__CFMachPortPerform (92 samples, 0.29%)</title><rect x="82.2899%" y="789" width="0.2934%" height="15" fill="rgb(234,84,26)" fg:x="25802" fg:w="92"/><text x="82.5399%" y="799.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (16 samples, 0.05%)</title><rect x="82.5833%" y="821" width="0.0510%" height="15" fill="rgb(243,172,12)" fg:x="25894" fg:w="16"/><text x="82.8333%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (13 samples, 0.04%)</title><rect x="82.5929%" y="805" width="0.0415%" height="15" fill="rgb(236,150,49)" fg:x="25897" fg:w="13"/><text x="82.8429%" y="815.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (111 samples, 0.35%)</title><rect x="82.2867%" y="837" width="0.3540%" height="15" fill="rgb(225,197,26)" fg:x="25801" fg:w="111"/><text x="82.5367%" y="847.50"></text></g><g><title>AppKit`_NSEventThread (113 samples, 0.36%)</title><rect x="82.2835%" y="869" width="0.3604%" height="15" fill="rgb(214,17,42)" fg:x="25800" fg:w="113"/><text x="82.5335%" y="879.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (113 samples, 0.36%)</title><rect x="82.2835%" y="853" width="0.3604%" height="15" fill="rgb(224,165,40)" fg:x="25800" fg:w="113"/><text x="82.5335%" y="863.50"></text></g><g><title>AudioToolboxCore`Resampler2::PushConvert (37 samples, 0.12%)</title><rect x="82.6790%" y="661" width="0.1180%" height="15" fill="rgb(246,100,4)" fg:x="25924" fg:w="37"/><text x="82.9290%" y="671.50"></text></g><g><title>AudioToolboxCore`Resampler2::ConvertSIMD_AVX_SmallIntegerRatio (34 samples, 0.11%)</title><rect x="82.6886%" y="645" width="0.1084%" height="15" fill="rgb(222,103,0)" fg:x="25927" fg:w="34"/><text x="82.9386%" y="655.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="82.8512%" y="501" width="0.0223%" height="15" fill="rgb(227,189,26)" fg:x="25978" fg:w="7"/><text x="83.1012%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.02%)</title><rect x="82.9150%" y="453" width="0.0159%" height="15" fill="rgb(214,202,17)" fg:x="25998" fg:w="5"/><text x="83.1650%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.03%)</title><rect x="82.9150%" y="469" width="0.0255%" height="15" fill="rgb(229,111,3)" fg:x="25998" fg:w="8"/><text x="83.1650%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.03%)</title><rect x="82.9405%" y="469" width="0.0255%" height="15" fill="rgb(229,172,15)" fg:x="26006" fg:w="8"/><text x="83.1905%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (4 samples, 0.01%)</title><rect x="82.9533%" y="453" width="0.0128%" height="15" fill="rgb(230,224,35)" fg:x="26010" fg:w="4"/><text x="83.2033%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (4 samples, 0.01%)</title><rect x="82.9660%" y="469" width="0.0128%" height="15" fill="rgb(251,141,6)" fg:x="26014" fg:w="4"/><text x="83.2160%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="83.0139%" y="421" width="0.0128%" height="15" fill="rgb(225,208,6)" fg:x="26029" fg:w="4"/><text x="83.2639%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.01%)</title><rect x="83.0139%" y="405" width="0.0128%" height="15" fill="rgb(246,181,16)" fg:x="26029" fg:w="4"/><text x="83.2639%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (4 samples, 0.01%)</title><rect x="83.0139%" y="389" width="0.0128%" height="15" fill="rgb(227,129,36)" fg:x="26029" fg:w="4"/><text x="83.2639%" y="399.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (18 samples, 0.06%)</title><rect x="82.9788%" y="469" width="0.0574%" height="15" fill="rgb(248,117,24)" fg:x="26018" fg:w="18"/><text x="83.2288%" y="479.50"></text></g><g><title>meg`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (8 samples, 0.03%)</title><rect x="83.0107%" y="453" width="0.0255%" height="15" fill="rgb(214,185,35)" fg:x="26028" fg:w="8"/><text x="83.2607%" y="463.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="83.0139%" y="437" width="0.0223%" height="15" fill="rgb(236,150,34)" fg:x="26029" fg:w="7"/><text x="83.2639%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (7 samples, 0.02%)</title><rect x="83.0713%" y="437" width="0.0223%" height="15" fill="rgb(243,228,27)" fg:x="26047" fg:w="7"/><text x="83.3213%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.04%)</title><rect x="83.0649%" y="453" width="0.0351%" height="15" fill="rgb(245,77,44)" fg:x="26045" fg:w="11"/><text x="83.3149%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free_small (5 samples, 0.02%)</title><rect x="83.1000%" y="453" width="0.0159%" height="15" fill="rgb(235,214,42)" fg:x="26056" fg:w="5"/><text x="83.3500%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.02%)</title><rect x="83.1255%" y="437" width="0.0191%" height="15" fill="rgb(221,74,3)" fg:x="26064" fg:w="6"/><text x="83.3755%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.02%)</title><rect x="83.1255%" y="421" width="0.0191%" height="15" fill="rgb(206,121,29)" fg:x="26064" fg:w="6"/><text x="83.3755%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (6 samples, 0.02%)</title><rect x="83.1255%" y="405" width="0.0191%" height="15" fill="rgb(249,131,53)" fg:x="26064" fg:w="6"/><text x="83.3755%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="83.1446%" y="421" width="0.0128%" height="15" fill="rgb(236,170,29)" fg:x="26070" fg:w="4"/><text x="83.3946%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.01%)</title><rect x="83.1446%" y="405" width="0.0128%" height="15" fill="rgb(247,96,15)" fg:x="26070" fg:w="4"/><text x="83.3946%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (4 samples, 0.01%)</title><rect x="83.1446%" y="389" width="0.0128%" height="15" fill="rgb(211,210,7)" fg:x="26070" fg:w="4"/><text x="83.3946%" y="399.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.04%)</title><rect x="83.1223%" y="453" width="0.0415%" height="15" fill="rgb(240,88,50)" fg:x="26063" fg:w="13"/><text x="83.3723%" y="463.50"></text></g><g><title>meg`&lt;alloc::string::String as core::clone::Clone&gt;::clone (6 samples, 0.02%)</title><rect x="83.1446%" y="437" width="0.0191%" height="15" fill="rgb(209,229,26)" fg:x="26070" fg:w="6"/><text x="83.3946%" y="447.50"></text></g><g><title>libsystem_m.dylib`0x00007ff80ccfc170 (4 samples, 0.01%)</title><rect x="83.1701%" y="437" width="0.0128%" height="15" fill="rgb(210,68,23)" fg:x="26078" fg:w="4"/><text x="83.4201%" y="447.50"></text></g><g><title>libsystem_m.dylib`0x00007ff80cd00f78 (72 samples, 0.23%)</title><rect x="83.1829%" y="437" width="0.2296%" height="15" fill="rgb(229,180,13)" fg:x="26082" fg:w="72"/><text x="83.4329%" y="447.50"></text></g><g><title>libsystem_m.dylib`DYLD-STUB$$fma (70 samples, 0.22%)</title><rect x="83.4125%" y="437" width="0.2232%" height="15" fill="rgb(236,53,44)" fg:x="26154" fg:w="70"/><text x="83.6625%" y="447.50"></text></g><g><title>libsystem_m.dylib`fmod (58 samples, 0.18%)</title><rect x="83.6454%" y="437" width="0.1850%" height="15" fill="rgb(244,214,29)" fg:x="26227" fg:w="58"/><text x="83.8954%" y="447.50"></text></g><g><title>libsystem_m.dylib`sin (92 samples, 0.29%)</title><rect x="83.8303%" y="437" width="0.2934%" height="15" fill="rgb(220,75,29)" fg:x="26285" fg:w="92"/><text x="84.0803%" y="447.50"></text></g><g><title>meg`DYLD-STUB$$fma (53 samples, 0.17%)</title><rect x="84.1461%" y="437" width="0.1690%" height="15" fill="rgb(214,183,37)" fg:x="26384" fg:w="53"/><text x="84.3961%" y="447.50"></text></g><g><title>meg`DYLD-STUB$$fmod (54 samples, 0.17%)</title><rect x="84.3151%" y="437" width="0.1722%" height="15" fill="rgb(239,117,29)" fg:x="26437" fg:w="54"/><text x="84.5651%" y="447.50"></text></g><g><title>meg`DYLD-STUB$$sin (55 samples, 0.18%)</title><rect x="84.4873%" y="437" width="0.1754%" height="15" fill="rgb(237,171,35)" fg:x="26491" fg:w="55"/><text x="84.7373%" y="447.50"></text></g><g><title>libsystem_m.dylib`0x00007ff80cd00f78 (81 samples, 0.26%)</title><rect x="88.7833%" y="421" width="0.2583%" height="15" fill="rgb(229,178,53)" fg:x="27838" fg:w="81"/><text x="89.0333%" y="431.50"></text></g><g><title>libsystem_m.dylib`fmod (282 samples, 0.90%)</title><rect x="89.0416%" y="421" width="0.8994%" height="15" fill="rgb(210,102,19)" fg:x="27919" fg:w="282"/><text x="89.2916%" y="431.50"></text></g><g><title>libsystem_m.dylib`sin (1,871 samples, 5.97%)</title><rect x="89.9410%" y="421" width="5.9672%" height="15" fill="rgb(235,127,22)" fg:x="28201" fg:w="1871"/><text x="90.1910%" y="431.50">libsyste..</text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (4 samples, 0.01%)</title><rect x="95.9273%" y="373" width="0.0128%" height="15" fill="rgb(244,31,31)" fg:x="30078" fg:w="4"/><text x="96.1773%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (47 samples, 0.15%)</title><rect x="95.9081%" y="421" width="0.1499%" height="15" fill="rgb(231,43,21)" fg:x="30072" fg:w="47"/><text x="96.1581%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (46 samples, 0.15%)</title><rect x="95.9113%" y="405" width="0.1467%" height="15" fill="rgb(217,131,35)" fg:x="30073" fg:w="46"/><text x="96.1613%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (45 samples, 0.14%)</title><rect x="95.9145%" y="389" width="0.1435%" height="15" fill="rgb(221,149,4)" fg:x="30074" fg:w="45"/><text x="96.1645%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (37 samples, 0.12%)</title><rect x="95.9400%" y="373" width="0.1180%" height="15" fill="rgb(232,170,28)" fg:x="30082" fg:w="37"/><text x="96.1900%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (28 samples, 0.09%)</title><rect x="96.0644%" y="389" width="0.0893%" height="15" fill="rgb(238,56,10)" fg:x="30121" fg:w="28"/><text x="96.3144%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (20 samples, 0.06%)</title><rect x="96.0899%" y="373" width="0.0638%" height="15" fill="rgb(235,196,14)" fg:x="30129" fg:w="20"/><text x="96.3399%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (6 samples, 0.02%)</title><rect x="96.1346%" y="357" width="0.0191%" height="15" fill="rgb(216,45,48)" fg:x="30143" fg:w="6"/><text x="96.3846%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (31 samples, 0.10%)</title><rect x="96.0580%" y="421" width="0.0989%" height="15" fill="rgb(238,213,17)" fg:x="30119" fg:w="31"/><text x="96.3080%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (29 samples, 0.09%)</title><rect x="96.0644%" y="405" width="0.0925%" height="15" fill="rgb(212,13,2)" fg:x="30121" fg:w="29"/><text x="96.3144%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (4 samples, 0.01%)</title><rect x="96.1856%" y="405" width="0.0128%" height="15" fill="rgb(240,114,20)" fg:x="30159" fg:w="4"/><text x="96.4356%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`small_size (4 samples, 0.01%)</title><rect x="96.1984%" y="405" width="0.0128%" height="15" fill="rgb(228,41,40)" fg:x="30163" fg:w="4"/><text x="96.4484%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (18 samples, 0.06%)</title><rect x="96.1633%" y="421" width="0.0574%" height="15" fill="rgb(244,132,35)" fg:x="30152" fg:w="18"/><text x="96.4133%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_small (15 samples, 0.05%)</title><rect x="96.2207%" y="421" width="0.0478%" height="15" fill="rgb(253,189,4)" fg:x="30170" fg:w="15"/><text x="96.4707%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (141 samples, 0.45%)</title><rect x="96.2749%" y="421" width="0.4497%" height="15" fill="rgb(224,37,19)" fg:x="30187" fg:w="141"/><text x="96.5249%" y="431.50"></text></g><g><title>meg`weresocool_instrument::voice::Voice::generate_waveform (3,782 samples, 12.06%)</title><rect x="84.6691%" y="437" width="12.0619%" height="15" fill="rgb(235,223,18)" fg:x="26548" fg:w="3782"/><text x="84.9191%" y="447.50">meg`weresocool_ins..</text></g><g><title>meg`&lt;weresocool_instrument::renderable::RenderOp as weresocool_instrument::renderable::Renderable&lt;weresocool_instrument::renderable::RenderOp&gt;&gt;::render (4,273 samples, 13.63%)</title><rect x="83.1638%" y="453" width="13.6278%" height="15" fill="rgb(235,163,25)" fg:x="26076" fg:w="4273"/><text x="83.4138%" y="463.50">meg`&lt;weresocool_instr..</text></g><g><title>meg`weresocool_instrument::voice::Voice::update (19 samples, 0.06%)</title><rect x="96.7310%" y="437" width="0.0606%" height="15" fill="rgb(217,145,28)" fg:x="30330" fg:w="19"/><text x="96.9810%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.03%)</title><rect x="96.8043%" y="437" width="0.0319%" height="15" fill="rgb(223,223,32)" fg:x="30353" fg:w="10"/><text x="97.0543%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free_small (7 samples, 0.02%)</title><rect x="96.8362%" y="437" width="0.0223%" height="15" fill="rgb(227,189,39)" fg:x="30363" fg:w="7"/><text x="97.0862%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (231 samples, 0.74%)</title><rect x="96.8681%" y="437" width="0.7367%" height="15" fill="rgb(248,10,22)" fg:x="30373" fg:w="231"/><text x="97.1181%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.03%)</title><rect x="97.6272%" y="405" width="0.0255%" height="15" fill="rgb(248,46,39)" fg:x="30611" fg:w="8"/><text x="97.8772%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="97.6304%" y="389" width="0.0223%" height="15" fill="rgb(248,113,48)" fg:x="30612" fg:w="7"/><text x="97.8804%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (7 samples, 0.02%)</title><rect x="97.6304%" y="373" width="0.0223%" height="15" fill="rgb(245,16,25)" fg:x="30612" fg:w="7"/><text x="97.8804%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_small (19 samples, 0.06%)</title><rect x="97.6878%" y="357" width="0.0606%" height="15" fill="rgb(249,152,16)" fg:x="30630" fg:w="19"/><text x="97.9378%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`medium_malloc_should_clear (4 samples, 0.01%)</title><rect x="97.7579%" y="341" width="0.0128%" height="15" fill="rgb(250,16,1)" fg:x="30652" fg:w="4"/><text x="98.0079%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`medium_malloc_from_free_list (4 samples, 0.01%)</title><rect x="97.7579%" y="325" width="0.0128%" height="15" fill="rgb(249,138,3)" fg:x="30652" fg:w="4"/><text x="98.0079%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.04%)</title><rect x="97.7547%" y="357" width="0.0383%" height="15" fill="rgb(227,71,41)" fg:x="30651" fg:w="12"/><text x="98.0047%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (7 samples, 0.02%)</title><rect x="97.7707%" y="341" width="0.0223%" height="15" fill="rgb(209,184,23)" fg:x="30656" fg:w="7"/><text x="98.0207%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (5 samples, 0.02%)</title><rect x="97.7771%" y="325" width="0.0159%" height="15" fill="rgb(223,215,31)" fg:x="30658" fg:w="5"/><text x="98.0271%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (222 samples, 0.71%)</title><rect x="97.6654%" y="389" width="0.7080%" height="15" fill="rgb(210,146,28)" fg:x="30623" fg:w="222"/><text x="97.9154%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (218 samples, 0.70%)</title><rect x="97.6782%" y="373" width="0.6953%" height="15" fill="rgb(209,183,41)" fg:x="30627" fg:w="218"/><text x="97.9282%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (182 samples, 0.58%)</title><rect x="97.7930%" y="357" width="0.5804%" height="15" fill="rgb(209,224,45)" fg:x="30663" fg:w="182"/><text x="98.0430%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`realloc (229 samples, 0.73%)</title><rect x="97.6559%" y="405" width="0.7303%" height="15" fill="rgb(224,209,51)" fg:x="30620" fg:w="229"/><text x="97.9059%" y="415.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;weresocool_instrument::renderable::RenderOp&gt; as weresocool_instrument::renderable::Renderable&lt;alloc::vec::Vec&lt;weresocool_instrument::renderable::RenderOp&gt;&gt;&gt;::render (4,814 samples, 15.35%)</title><rect x="83.0362%" y="469" width="15.3532%" height="15" fill="rgb(223,17,39)" fg:x="26036" fg:w="4814"/><text x="83.2862%" y="479.50">meg`&lt;alloc::vec::Vec&lt;wer..</text></g><g><title>meg`weresocool_instrument::stereo_waveform::StereoWaveform::append (500 samples, 1.59%)</title><rect x="96.7948%" y="453" width="1.5946%" height="15" fill="rgb(234,204,37)" fg:x="30350" fg:w="500"/><text x="97.0448%" y="463.50"></text></g><g><title>meg`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (246 samples, 0.78%)</title><rect x="97.6048%" y="437" width="0.7846%" height="15" fill="rgb(236,120,5)" fg:x="30604" fg:w="246"/><text x="97.8548%" y="447.50"></text></g><g><title>meg`alloc::raw_vec::finish_grow (240 samples, 0.77%)</title><rect x="97.6240%" y="421" width="0.7654%" height="15" fill="rgb(248,97,27)" fg:x="30610" fg:w="240"/><text x="97.8740%" y="431.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.02%)</title><rect x="98.4181%" y="453" width="0.0191%" height="15" fill="rgb(240,66,17)" fg:x="30859" fg:w="6"/><text x="98.6681%" y="463.50"></text></g><g><title>meg`&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="98.4213%" y="437" width="0.0159%" height="15" fill="rgb(210,79,3)" fg:x="30860" fg:w="5"/><text x="98.6713%" y="447.50"></text></g><g><title>meg`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (7 samples, 0.02%)</title><rect x="98.4373%" y="453" width="0.0223%" height="15" fill="rgb(214,176,27)" fg:x="30865" fg:w="7"/><text x="98.6873%" y="463.50"></text></g><g><title>meg`alloc::raw_vec::finish_grow (7 samples, 0.02%)</title><rect x="98.4373%" y="437" width="0.0223%" height="15" fill="rgb(235,185,3)" fg:x="30865" fg:w="7"/><text x="98.6873%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.02%)</title><rect x="98.4373%" y="421" width="0.0223%" height="15" fill="rgb(227,24,12)" fg:x="30865" fg:w="7"/><text x="98.6873%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.02%)</title><rect x="98.4404%" y="405" width="0.0191%" height="15" fill="rgb(252,169,48)" fg:x="30866" fg:w="6"/><text x="98.6904%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.02%)</title><rect x="98.4404%" y="389" width="0.0191%" height="15" fill="rgb(212,65,1)" fg:x="30866" fg:w="6"/><text x="98.6904%" y="399.50"></text></g><g><title>meg`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.01%)</title><rect x="98.4915%" y="437" width="0.0128%" height="15" fill="rgb(242,39,24)" fg:x="30882" fg:w="4"/><text x="98.7415%" y="447.50"></text></g><g><title>meg`alloc::raw_vec::finish_grow (4 samples, 0.01%)</title><rect x="98.4915%" y="421" width="0.0128%" height="15" fill="rgb(249,32,23)" fg:x="30882" fg:w="4"/><text x="98.7415%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`realloc (4 samples, 0.01%)</title><rect x="98.4915%" y="405" width="0.0128%" height="15" fill="rgb(251,195,23)" fg:x="30882" fg:w="4"/><text x="98.7415%" y="415.50"></text></g><g><title>meg`alloc::slice::_&lt;impl [T]&gt;::to_vec (9 samples, 0.03%)</title><rect x="98.5042%" y="437" width="0.0287%" height="15" fill="rgb(236,174,8)" fg:x="30886" fg:w="9"/><text x="98.7542%" y="447.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="98.5202%" y="421" width="0.0128%" height="15" fill="rgb(220,197,8)" fg:x="30891" fg:w="4"/><text x="98.7702%" y="431.50"></text></g><g><title>meg`alloc::slice::_&lt;impl [T]&gt;::to_vec (4 samples, 0.01%)</title><rect x="98.5489%" y="421" width="0.0128%" height="15" fill="rgb(240,108,37)" fg:x="30900" fg:w="4"/><text x="98.7989%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (4 samples, 0.01%)</title><rect x="98.5648%" y="405" width="0.0128%" height="15" fill="rgb(232,176,24)" fg:x="30905" fg:w="4"/><text x="98.8148%" y="415.50"></text></g><g><title>meg`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.02%)</title><rect x="98.5808%" y="405" width="0.0159%" height="15" fill="rgb(243,35,29)" fg:x="30910" fg:w="5"/><text x="98.8308%" y="415.50"></text></g><g><title>meg`alloc::raw_vec::finish_grow (5 samples, 0.02%)</title><rect x="98.5808%" y="389" width="0.0159%" height="15" fill="rgb(210,37,18)" fg:x="30910" fg:w="5"/><text x="98.8308%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`realloc (5 samples, 0.02%)</title><rect x="98.5808%" y="373" width="0.0159%" height="15" fill="rgb(224,184,40)" fg:x="30910" fg:w="5"/><text x="98.8308%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (5 samples, 0.02%)</title><rect x="98.5808%" y="357" width="0.0159%" height="15" fill="rgb(236,39,29)" fg:x="30910" fg:w="5"/><text x="98.8308%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (4 samples, 0.01%)</title><rect x="98.5840%" y="341" width="0.0128%" height="15" fill="rgb(232,48,39)" fg:x="30911" fg:w="4"/><text x="98.8340%" y="351.50"></text></g><g><title>meg`alloc::slice::_&lt;impl [T]&gt;::to_vec (4 samples, 0.01%)</title><rect x="98.5967%" y="405" width="0.0128%" height="15" fill="rgb(236,34,42)" fg:x="30915" fg:w="4"/><text x="98.8467%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="98.6318%" y="357" width="0.0128%" height="15" fill="rgb(243,106,37)" fg:x="30926" fg:w="4"/><text x="98.8818%" y="367.50"></text></g><g><title>meg`alloc::slice::_&lt;impl [T]&gt;::to_vec (9 samples, 0.03%)</title><rect x="98.6222%" y="389" width="0.0287%" height="15" fill="rgb(218,96,6)" fg:x="30923" fg:w="9"/><text x="98.8722%" y="399.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.02%)</title><rect x="98.6318%" y="373" width="0.0191%" height="15" fill="rgb(235,130,12)" fg:x="30926" fg:w="6"/><text x="98.8818%" y="383.50"></text></g><g><title>meg`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4,944 samples, 15.77%)</title><rect x="82.8927%" y="485" width="15.7678%" height="15" fill="rgb(231,95,0)" fg:x="25991" fg:w="4944"/><text x="83.1427%" y="495.50">meg`core::ops::function:..</text></g><g><title>meg`weresocool_instrument::renderable::render_voice::RenderVoice::get_batch (84 samples, 0.27%)</title><rect x="98.3926%" y="469" width="0.2679%" height="15" fill="rgb(228,12,23)" fg:x="30851" fg:w="84"/><text x="98.6426%" y="479.50"></text></g><g><title>meg`weresocool_instrument::renderable::render_voice::RenderVoice::get_batch (63 samples, 0.20%)</title><rect x="98.4596%" y="453" width="0.2009%" height="15" fill="rgb(216,12,1)" fg:x="30872" fg:w="63"/><text x="98.7096%" y="463.50"></text></g><g><title>meg`weresocool_instrument::renderable::render_voice::RenderVoice::get_batch (40 samples, 0.13%)</title><rect x="98.5329%" y="437" width="0.1276%" height="15" fill="rgb(219,59,3)" fg:x="30895" fg:w="40"/><text x="98.7829%" y="447.50"></text></g><g><title>meg`weresocool_instrument::renderable::render_voice::RenderVoice::get_batch (31 samples, 0.10%)</title><rect x="98.5616%" y="421" width="0.0989%" height="15" fill="rgb(215,208,46)" fg:x="30904" fg:w="31"/><text x="98.8116%" y="431.50"></text></g><g><title>meg`weresocool_instrument::renderable::render_voice::RenderVoice::get_batch (16 samples, 0.05%)</title><rect x="98.6095%" y="405" width="0.0510%" height="15" fill="rgb(254,224,29)" fg:x="30919" fg:w="16"/><text x="98.8595%" y="415.50"></text></g><g><title>meg`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,951 samples, 15.79%)</title><rect x="82.8735%" y="501" width="15.7901%" height="15" fill="rgb(232,14,29)" fg:x="25985" fg:w="4951"/><text x="83.1235%" y="511.50">meg`&lt;alloc::vec::Vec&lt;T&gt; ..</text></g><g><title>meg`opmap::OpMap&lt;T&gt;::insert (8 samples, 0.03%)</title><rect x="98.6701%" y="501" width="0.0255%" height="15" fill="rgb(208,45,52)" fg:x="30938" fg:w="8"/><text x="98.9201%" y="511.50"></text></g><g><title>meg`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.01%)</title><rect x="98.6828%" y="485" width="0.0128%" height="15" fill="rgb(234,191,28)" fg:x="30942" fg:w="4"/><text x="98.9328%" y="495.50"></text></g><g><title>meg`alloc::raw_vec::finish_grow (4 samples, 0.01%)</title><rect x="98.6828%" y="469" width="0.0128%" height="15" fill="rgb(244,67,43)" fg:x="30942" fg:w="4"/><text x="98.9328%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`madvise (50 samples, 0.16%)</title><rect x="99.7289%" y="469" width="0.1595%" height="15" fill="rgb(236,189,24)" fg:x="31270" fg:w="50"/><text x="99.9789%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (54 samples, 0.17%)</title><rect x="99.7193%" y="485" width="0.1722%" height="15" fill="rgb(239,214,33)" fg:x="31267" fg:w="54"/><text x="99.9693%" y="495.50"></text></g><g><title>meg`weresocool_core::generation::parsed_to_render::sum_all_waveforms (381 samples, 1.22%)</title><rect x="98.6956%" y="501" width="1.2151%" height="15" fill="rgb(226,176,41)" fg:x="30946" fg:w="381"/><text x="98.9456%" y="511.50"></text></g><g><title>meg`weresocool_core::manager::render_manager::RenderManager::read (5,364 samples, 17.11%)</title><rect x="82.8257%" y="517" width="17.1073%" height="15" fill="rgb(248,47,8)" fg:x="25970" fg:w="5364"/><text x="83.0757%" y="527.50">meg`weresocool_core::manag..</text></g><g><title>meg`weresocool_core::manager::render_manager::render_op_to_normalized_op4d (7 samples, 0.02%)</title><rect x="99.9107%" y="501" width="0.0223%" height="15" fill="rgb(218,81,44)" fg:x="31327" fg:w="7"/><text x="100.1607%" y="511.50"></text></g><g><title>meg`&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="99.9203%" y="485" width="0.0128%" height="15" fill="rgb(213,98,6)" fg:x="31330" fg:w="4"/><text x="100.1703%" y="495.50"></text></g><g><title>meg`weresocool_core::write::new_write_output_buffer (5 samples, 0.02%)</title><rect x="99.9330%" y="517" width="0.0159%" height="15" fill="rgb(222,85,22)" fg:x="31334" fg:w="5"/><text x="100.1830%" y="527.50"></text></g><g><title>meg`portaudio::stream::Stream&lt;portaudio::stream::NonBlocking,F&gt;::open::_{{closure}} (5,372 samples, 17.13%)</title><rect x="82.8193%" y="533" width="17.1328%" height="15" fill="rgb(239,46,39)" fg:x="25968" fg:w="5372"/><text x="83.0693%" y="543.50">meg`portaudio::stream::Stre..</text></g><g><title>AudioToolboxCore`acv1::AudioConverterChain::RenderOutput (5,417 samples, 17.28%)</title><rect x="82.6790%" y="725" width="17.2764%" height="15" fill="rgb(237,12,29)" fg:x="25924" fg:w="5417"/><text x="82.9290%" y="735.50">AudioToolboxCore`acv1::Audi..</text></g><g><title>AudioToolboxCore`acv1::BufferedAudioConverter::FillBuffer (5,417 samples, 17.28%)</title><rect x="82.6790%" y="709" width="17.2764%" height="15" fill="rgb(214,77,8)" fg:x="25924" fg:w="5417"/><text x="82.9290%" y="719.50">AudioToolboxCore`acv1::Buff..</text></g><g><title>AudioToolboxCore`acv1::SampleRateConverter::RenderOutput (5,417 samples, 17.28%)</title><rect x="82.6790%" y="693" width="17.2764%" height="15" fill="rgb(217,168,37)" fg:x="25924" fg:w="5417"/><text x="82.9290%" y="703.50">AudioToolboxCore`acv1::Samp..</text></g><g><title>AudioToolboxCore`acv1::Resampler2Wrapper::RenderOutput (5,417 samples, 17.28%)</title><rect x="82.6790%" y="677" width="17.2764%" height="15" fill="rgb(221,217,23)" fg:x="25924" fg:w="5417"/><text x="82.9290%" y="687.50">AudioToolboxCore`acv1::Resa..</text></g><g><title>AudioToolboxCore`acv1::BufferedAudioConverter::GetInputBytes (5,380 samples, 17.16%)</title><rect x="82.7970%" y="661" width="17.1583%" height="15" fill="rgb(243,229,36)" fg:x="25961" fg:w="5380"/><text x="83.0470%" y="671.50">AudioToolboxCore`acv1::Buff..</text></g><g><title>AudioToolboxCore`acv1::AudioConverterChain::FillBufferFromInputProc (5,380 samples, 17.16%)</title><rect x="82.7970%" y="645" width="17.1583%" height="15" fill="rgb(251,163,40)" fg:x="25961" fg:w="5380"/><text x="83.0470%" y="655.50">AudioToolboxCore`acv1::Audi..</text></g><g><title>AudioToolboxCore`acv1::AudioConverterChain::CallInputProc (5,379 samples, 17.16%)</title><rect x="82.8002%" y="629" width="17.1552%" height="15" fill="rgb(237,222,12)" fg:x="25962" fg:w="5379"/><text x="83.0502%" y="639.50">AudioToolboxCore`acv1::Audi..</text></g><g><title>CoreAudio`0x000000010c57280a (5,379 samples, 17.16%)</title><rect x="82.8002%" y="613" width="17.1552%" height="15" fill="rgb(248,132,6)" fg:x="25962" fg:w="5379"/><text x="83.0502%" y="623.50">CoreAudio`0x000000010c57280a</text></g><g><title>CoreAudio`0x000000010c67a092 (5,379 samples, 17.16%)</title><rect x="82.8002%" y="597" width="17.1552%" height="15" fill="rgb(227,167,50)" fg:x="25962" fg:w="5379"/><text x="83.0502%" y="607.50">CoreAudio`0x000000010c67a092</text></g><g><title>libportaudio.2.dylib`AudioIOProc (5,379 samples, 17.16%)</title><rect x="82.8002%" y="581" width="17.1552%" height="15" fill="rgb(242,84,37)" fg:x="25962" fg:w="5379"/><text x="83.0502%" y="591.50">libportaudio.2.dylib`AudioI..</text></g><g><title>libportaudio.2.dylib`PaUtil_EndBufferProcessing (5,378 samples, 17.15%)</title><rect x="82.8034%" y="565" width="17.1520%" height="15" fill="rgb(212,4,50)" fg:x="25963" fg:w="5378"/><text x="83.0534%" y="575.50">libportaudio.2.dylib`PaUtil..</text></g><g><title>libportaudio.2.dylib`AdaptingOutputOnlyProcess (5,378 samples, 17.15%)</title><rect x="82.8034%" y="549" width="17.1520%" height="15" fill="rgb(230,228,32)" fg:x="25963" fg:w="5378"/><text x="83.0534%" y="559.50">libportaudio.2.dylib`Adapti..</text></g><g><title>AudioToolboxCore`acv1::BufferedAudioConverter::FillBuffer (5,419 samples, 17.28%)</title><rect x="82.6790%" y="741" width="17.2827%" height="15" fill="rgb(248,217,23)" fg:x="25924" fg:w="5419"/><text x="82.9290%" y="751.50">AudioToolboxCore`acv1::Buff..</text></g><g><title>AudioToolboxCore`acv1::_AudioConverterFillComplexBuffer(OpaqueAudioConverter*, int (*) (5,421 samples, 17.29%)</title><rect x="82.6758%" y="757" width="17.2891%" height="15" fill="rgb(238,197,32)" fg:x="25923" fg:w="5421"/><text x="82.9258%" y="767.50">AudioToolboxCore`acv1::_Aud..</text></g><g><title>CoreAudio`0x000000010c5713d6 (5,423 samples, 17.30%)</title><rect x="82.6726%" y="789" width="17.2955%" height="15" fill="rgb(236,106,1)" fg:x="25922" fg:w="5423"/><text x="82.9226%" y="799.50">CoreAudio`0x000000010c5713d6</text></g><g><title>AudioToolboxCore`AudioConverterFillComplexBuffer (5,423 samples, 17.30%)</title><rect x="82.6726%" y="773" width="17.2955%" height="15" fill="rgb(219,228,13)" fg:x="25922" fg:w="5423"/><text x="82.9226%" y="783.50">AudioToolboxCore`AudioConve..</text></g><g><title>CoreAudio`0x000000010c678f7a (5,424 samples, 17.30%)</title><rect x="82.6726%" y="805" width="17.2987%" height="15" fill="rgb(238,30,35)" fg:x="25922" fg:w="5424"/><text x="82.9226%" y="815.50">CoreAudio`0x000000010c678f7a</text></g><g><title>CoreAudio`0x000000010c574f08 (5,428 samples, 17.31%)</title><rect x="82.6631%" y="821" width="17.3114%" height="15" fill="rgb(236,70,23)" fg:x="25919" fg:w="5428"/><text x="82.9131%" y="831.50">CoreAudio`0x000000010c574f08</text></g><g><title>CoreAudio`HALB_MachPort::SendSimpleMessageWithSimpleReply (5 samples, 0.02%)</title><rect x="99.9745%" y="821" width="0.0159%" height="15" fill="rgb(249,104,48)" fg:x="31347" fg:w="5"/><text x="100.2245%" y="831.50"></text></g><g><title>CoreAudio`HALB_IOThread::Entry (5,441 samples, 17.35%)</title><rect x="82.6439%" y="869" width="17.3529%" height="15" fill="rgb(254,117,50)" fg:x="25913" fg:w="5441"/><text x="82.8939%" y="879.50">CoreAudio`HALB_IOThread::En..</text></g><g><title>CoreAudio`invocation function for block in HALC_ProxyIOContext::HALC_ProxyIOContext (5,441 samples, 17.35%)</title><rect x="82.6439%" y="853" width="17.3529%" height="15" fill="rgb(223,152,4)" fg:x="25913" fg:w="5441"/><text x="82.8939%" y="863.50">CoreAudio`invocation functi..</text></g><g><title>CoreAudio`HALC_ProxyIOContext::IOWorkLoop (5,439 samples, 17.35%)</title><rect x="82.6503%" y="837" width="17.3465%" height="15" fill="rgb(245,6,2)" fg:x="25915" fg:w="5439"/><text x="82.9003%" y="847.50">CoreAudio`HALC_ProxyIOConte..</text></g><g><title>all (31,355 samples, 100%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(249,150,24)" fg:x="0" fg:w="31355"/><text x="0.2500%" y="927.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (5,556 samples, 17.72%)</title><rect x="82.2803%" y="901" width="17.7197%" height="15" fill="rgb(228,185,42)" fg:x="25799" fg:w="5556"/><text x="82.5303%" y="911.50">libsystem_pthread.dylib`thre..</text></g><g><title>libsystem_pthread.dylib`_pthread_start (5,556 samples, 17.72%)</title><rect x="82.2803%" y="885" width="17.7197%" height="15" fill="rgb(226,39,33)" fg:x="25799" fg:w="5556"/><text x="82.5303%" y="895.50">libsystem_pthread.dylib`_pth..</text></g></svg></svg>